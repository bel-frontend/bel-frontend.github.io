{"version":3,"file":"static/js/940.2feb7dba.chunk.js","mappings":"mSAkJA,UAxHe,SAAH,GAAuC,IAAjCA,EAAO,EAAPA,QACRC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,MAAND,EACR,GAQIE,EAAAA,EAAAA,IAAU,CACVC,cAAe,CACXC,MAAO,GACPC,SAAU,GACVC,iBAAkB,IAEtBC,iBA5BJC,EAAAA,GAAW,CACPJ,MAAOI,EAAAA,KAAaJ,QAAQK,WAC5BJ,SAAUG,EAAAA,KAAaE,IAAI,GAAGC,IAAI,IAAIF,WACtCH,iBAAkBE,EAAAA,KAEbE,IAAI,GACJC,IAAI,IACJF,WACAG,MAAM,CAACJ,EAAAA,GAAQ,YAAa,IAAK,0BAqBtCK,SAAU,YAAqC,IAAlCT,EAAK,EAALA,MAAOC,EAAQ,EAARA,UAAmB,YACnCP,GACIgB,EAAAA,EAAAA,IACI,CAAEV,MAAAA,EAAOC,SAAAA,GACT,CACIU,UAAW,WACPlB,EAAQmB,KAAK,IACjB,EACAC,UAAW,YAAuC,IAAlBC,EAAG,EAArBC,SAAYC,KACtBC,QAAQC,MAAMJ,GACdK,EAAU,CAAEnB,MAAOc,GACvB,IAIhB,IA7BAM,EAAY,EAAZA,aACAC,EAAU,EAAVA,WACAC,EAAO,EAAPA,QACAC,EAAM,EAANA,OACAC,EAAY,EAAZA,aACAC,EAAM,EAANA,OACAN,EAAS,EAATA,UA0BJ,OACI,UAAC,KAAI,CAACO,WAAS,EAACC,GAAI,CAAEC,GAAI,EAAGC,GAAI,IAAK,WAClC,SAAC,KAAI,CAACC,MAAI,EAACC,GAAI,EAAGC,GAAI,KACtB,UAAC,KAAI,CAACF,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAE,WACpB,SAAC,IAAU,CAACC,UAAW,SAAUC,QAAQ,KAAI,SAAC,wEAG9C,UAAC,IAAG,CACAC,UAAU,OACV1B,SAAUe,EACVY,YAAU,EACVC,UAAW,OAAO,WAElB,SAAC,IAAS,CACNC,OAAO,QACPjC,UAAQ,EACR6B,QAAQ,WACRK,WAAS,EACTC,GAAG,QACHC,MAAM,QACNC,KAAK,QACLC,aAAa,QACbC,MAAOrB,EAAOvB,MACd6C,SAAUzB,EAAa,SACvB0B,OAAQzB,EAAW,SACnB0B,WAAYzB,EAAQtB,MAAQyB,EAAOzB,MAAQ,KAC3CkB,MAAOI,EAAQtB,OAASgD,QAAQvB,EAAOzB,UAE3C,SAAC,IAAS,CACNsC,OAAO,QACPjC,UAAQ,EACR6B,QAAQ,WACRK,WAAS,EACTG,KAAK,WACLD,MAAO,uCACPQ,KAAK,WACLT,GAAG,WACHG,aAAa,mBACbC,MAAOrB,EAAOtB,SACd4C,SAAUzB,EAAa,YACvB0B,OAAQzB,EAAW,YACnB0B,WAAYzB,EAAQrB,SAAWwB,EAAOxB,SAAW,KACjDiB,MAAOI,EAAQrB,UAAY+C,QAAQvB,EAAOxB,aAE9C,SAAC,IAAS,CACNqC,OAAO,QACPjC,UAAQ,EACR6B,QAAQ,WACRK,WAAS,EACTG,KAAK,WACLD,MAAO,8FACPQ,KAAK,WACLT,GAAG,mBACHG,aAAa,mBACbC,MAAOrB,EAAOrB,iBACd2C,SAAUzB,EAAa,oBACvB0B,OAAQzB,EAAW,oBACnB0B,WACIzB,EAAQpB,iBACFuB,EAAOvB,iBACP,KAEVgB,MACII,EAAQpB,kBACR8C,QAAQvB,EAAOvB,qBAIvB,SAAC,IAAM,CACH+C,KAAK,SACLV,WAAS,EACTL,QAAQ,YACRgB,MAAM,UACNvB,GAAI,CAAEE,GAAI,EAAGD,GAAI,GAAI,SAEpBhC,EAAE,kCAGP,KACR,SAAC,KAAI,CAACkC,MAAI,EAACC,GAAI,EAAGC,GAAI,MAGlC,C","sources":["containers/Auth/SignUp/index.tsx"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nimport { registerRequest } from 'modules/auth';\nimport { useDispatch } from 'react-redux';\n\nconst validationSchema = (t: any) =>\n    yup.object({\n        email: yup.string().email().required(),\n        password: yup.string().min(6).max(16).required(),\n        confirm_password: yup\n            .string()\n            .min(6)\n            .max(16)\n            .required()\n            .oneOf([yup.ref('password'), ''], 'Passwords must match'),\n    });\n\nconst SignUp = ({ history }: { history: any }) => {\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n    const {\n        handleChange,\n        handleBlur,\n        touched,\n        values,\n        handleSubmit,\n        errors,\n        setErrors,\n    } = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            confirm_password: '',\n        },\n        validationSchema: validationSchema(t),\n        onSubmit: ({ email, password, ...values }) => {\n            dispatch(\n                registerRequest(\n                    { email, password },\n                    {\n                        onSuccess: () => {\n                            history.push('/');\n                        },\n                        onFailure: ({ response: { data: err } }: any) => {\n                            console.error(err);\n                            setErrors({ email: err });\n                        },\n                    },\n                ),\n            );\n        },\n    });\n\n    return (\n        <Grid container sx={{ mb: 0, mt: 30 }}>\n            <Grid item md={4} xs={2}></Grid>\n            <Grid item md={4} xs={8}>\n                <Typography textAlign={'center'} variant=\"h4\">\n                    Рэгістрацыя\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit}\n                    noValidate\n                    minHeight={'70vh'}\n                >\n                    <TextField\n                        margin=\"dense\"\n                        required\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"email\"\n                        label=\"email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        value={values.email}\n                        onChange={handleChange('email')}\n                        onBlur={handleBlur('email')}\n                        helperText={touched.email ? errors.email : null}\n                        error={touched.email && Boolean(errors.email)}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        required\n                        variant=\"outlined\"\n                        fullWidth\n                        name=\"password\"\n                        label={'Пароль'}\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={values.password}\n                        onChange={handleChange('password')}\n                        onBlur={handleBlur('password')}\n                        helperText={touched.password ? errors.password : null}\n                        error={touched.password && Boolean(errors.password)}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        required\n                        variant=\"outlined\"\n                        fullWidth\n                        name=\"password\"\n                        label={'Паўтарыце пароль'}\n                        type=\"password\"\n                        id=\"confirm_password\"\n                        autoComplete=\"current-password\"\n                        value={values.confirm_password}\n                        onChange={handleChange('confirm_password')}\n                        onBlur={handleBlur('confirm_password')}\n                        helperText={\n                            touched.confirm_password\n                                ? errors.confirm_password\n                                : null\n                        }\n                        error={\n                            touched.confirm_password &&\n                            Boolean(errors.confirm_password)\n                        }\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        sx={{ mt: 1, mb: 1 }}\n                    >\n                        {t('sign_up.confirm_button')}\n                    </Button>\n                </Box>\n            </Grid>{' '}\n            <Grid item md={4} xs={2}></Grid>\n        </Grid>\n    );\n};\n\nexport default SignUp;\n"],"names":["history","dispatch","useDispatch","t","useTranslation","useFormik","initialValues","email","password","confirm_password","validationSchema","yup","required","min","max","oneOf","onSubmit","registerRequest","onSuccess","push","onFailure","err","response","data","console","error","setErrors","handleChange","handleBlur","touched","values","handleSubmit","errors","container","sx","mb","mt","item","md","xs","textAlign","variant","component","noValidate","minHeight","margin","fullWidth","id","label","name","autoComplete","value","onChange","onBlur","helperText","Boolean","type","color"],"sourceRoot":""}