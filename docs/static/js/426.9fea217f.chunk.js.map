{"version":3,"file":"static/js/426.9fea217f.chunk.js","mappings":"oPAgGA,UA9Ea,SAAH,GAAuC,IAAjCA,EAAO,EAAPA,QAENC,IADQC,EAAAA,EAAAA,MAANC,GACSC,EAAAA,EAAAA,OACjB,GAAkEC,EAAAA,EAAAA,IAC9D,CACIC,cAAe,CACXC,MAAO,GACPC,SAAU,IAEdC,iBAdRC,EAAAA,GAAW,CACPH,MAAOG,EAAAA,KAAaH,QAAQI,WAC5BH,SAAUE,EAAAA,KAAaE,IAAI,GAAGC,IAAI,IAAIF,aAalCG,SAAU,YAA0B,IAAvBP,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAChBP,GACIc,EAAAA,EAAAA,IACI,CAAER,MAAAA,EAAOC,SAAAA,GACT,CACIQ,UAAW,WACPhB,EAAQiB,KAAK,IACjB,EACAC,UAAW,YAAuC,IAAlBC,EAAG,EAArBC,SAAYC,KACtBC,EAAU,CAAEf,MAAOY,GACvB,IAIhB,IArBAI,EAAY,EAAZA,aAAcC,EAAM,EAANA,OAAQC,EAAY,EAAZA,aAAcH,EAAS,EAATA,UAAWI,EAAM,EAANA,OAyBvD,OACI,UAAC,IAAG,CAACC,GAAI,CAAEC,GAAI,EAAGC,GAAI,IAAK,WACvB,SAAC,IAAU,CAACC,UAAW,SAAUC,QAAQ,KAAI,SAAC,wEAG9C,UAAC,IAAG,CAACC,UAAU,OAAOlB,SAAUW,EAAcQ,YAAU,aACpD,SAAC,IAAS,CACNC,OAAO,QACPvB,UAAQ,EACRoB,QAAQ,WACRI,WAAS,EACTC,GAAG,QACHC,MAAO,QACPC,KAAK,QACLC,aAAa,QACbC,MAAOhB,EAAOjB,MACdkC,SAAUlB,EAAa,SACvBmB,WAAS,EACTC,WAAYjB,EAAOnB,MACnBqC,MAAOC,QAAQnB,EAAOnB,UAE1B,SAAC,IAAS,CACNI,UAAQ,EACRoB,QAAQ,WACRI,WAAS,EACTG,KAAK,WACLD,MAAO,uCACPS,KAAK,WACLV,GAAG,WACHG,aAAa,mBACbC,MAAOhB,EAAOhB,SACdiC,SAAUlB,EAAa,YACvBoB,WAAYjB,EAAOlB,SACnBoC,MAAOC,QAAQnB,EAAOlB,UACtB0B,OAAO,WAEX,SAAC,IAAM,CACHY,KAAK,SACLX,WAAS,EACTJ,QAAQ,YACRgB,MAAM,UACNpB,GAAI,CAAEE,GAAI,EAAGD,GAAI,GAAI,SACxB,oDAMjB,C","sources":["containers/Auth/Auth/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { loginRequest } from 'modules/auth';\n\nconst validationSchema = (t: any) =>\n    yup.object({\n        email: yup.string().email().required(),\n        password: yup.string().min(6).max(16).required(),\n    });\n\nconst Auth = ({ history }: { history: any }) => {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { handleChange, values, handleSubmit, setErrors, errors } = useFormik(\n        {\n            initialValues: {\n                email: '',\n                password: '',\n            },\n            validationSchema: validationSchema(t),\n            onSubmit: ({ email, password }) => {\n                dispatch(\n                    loginRequest(\n                        { email, password },\n                        {\n                            onSuccess: () => {\n                                history.push('/');\n                            },\n                            onFailure: ({ response: { data: err } }: any) => {\n                                setErrors({ email: err });\n                            },\n                        },\n                    ),\n                );\n            },\n        },\n    );\n\n    return (\n        <Box sx={{ mb: 0, mt: 30 }}>\n            <Typography textAlign={'center'} variant=\"h4\">\n                Аўтарызацыя\n            </Typography>\n            <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n                <TextField\n                    margin=\"dense\"\n                    required\n                    variant=\"outlined\"\n                    fullWidth\n                    id=\"email\"\n                    label={'email'}\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={values.email}\n                    onChange={handleChange('email')}\n                    autoFocus\n                    helperText={errors.email}\n                    error={Boolean(errors.email)}\n                />\n                <TextField\n                    required\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"password\"\n                    label={'пароль'}\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    value={values.password}\n                    onChange={handleChange('password')}\n                    helperText={errors.password}\n                    error={Boolean(errors.password)}\n                    margin=\"dense\"\n                />\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    sx={{ mt: 1, mb: 1 }}\n                >\n                    Увайсці\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nexport default Auth;\n"],"names":["history","dispatch","useTranslation","t","useDispatch","useFormik","initialValues","email","password","validationSchema","yup","required","min","max","onSubmit","loginRequest","onSuccess","push","onFailure","err","response","data","setErrors","handleChange","values","handleSubmit","errors","sx","mb","mt","textAlign","variant","component","noValidate","margin","fullWidth","id","label","name","autoComplete","value","onChange","autoFocus","helperText","error","Boolean","type","color"],"sourceRoot":""}