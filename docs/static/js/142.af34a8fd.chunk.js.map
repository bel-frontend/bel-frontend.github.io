{"version":3,"file":"static/js/142.af34a8fd.chunk.js","mappings":"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AAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,GAAG8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,GAAI,KAAK8E,OAAO9E,EAAI,IAAK,G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AAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,KAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,MAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,MAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,OAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3BipB,EAAUuD,SAASxsB,EAAQ,QAC3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,OACA,UACA,MACA,gBACA,WACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,UACA,YACA,OACA,QACA,OACA,SACA,gBACA,SACA,QACA,YACA,WACA,oBACA,kBACA,OACA,YACA,MACA,QACA,MACA,QACA,MACA,iBACA,WAEF,uBAAwB,CAEtB,UACA,YACA,YACA,KACA,SACA,MACA,IACA,WACA,KACA,SACA,QACA,SACA,YACA,aACA,WACA,SACA,UACA,gBACA,oBACA,YACA,UACA,mBACA,KACA,WACA,IACA,KACA,MAEF,oBAAqB,CACnB,aACA,WACA,SACA,mBACA,SACA,aACA,aACA,YACA,mBACA,kBACA,WACA,aACA,OACA,WACA,UACA,aACA,YACA,WACA,OACA,OACA,MACA,WACA,UACA,SACA,UACA,aACA,aACA,SACA,QACA,UACA,oBACA,aACA,cACA,OACA,SACA,gBACA,oBACA,gCACA,iCACA,YACA,UACA,WACA,SACA,aACA,aACA,UACA,SACA,OACA,eACA,eACA,QACA,OACA,SACA,YACA,UACA,QACA,WACA,cACA,WACA,QACA,YACA,aACA,aACA,qBACA,SACA,SACA,WACA,eACA,UACA,aACA,OACA,UACA,QACA,SACA,SACA,OACA,aACA,WACA,YACA,MACA,aACA,UACA,aACA,SACA,cACA,YACA,OACA,YACA,SACA,YACA,iBACA,UACA,eACA,UACA,gBACA,eACA,YACA,mBACA,UACA,SACA,WACA,OACA,aACA,oBACA,YACA,UACA,UACA,YACA,WACA,WACA,aACA,OACA,cACA,iBACA,QACA,UACA,YACA,gBACA,cACA,oBACA,MACA,UACA,OACA,SACA,OACA,sBACA,aACA,aACA,mBACA,UACA,cACA,SACA,aACA,WACA,kBACA,OACA,OACA,QACA,QACA,QACA,YACA,SACA,eACA,eACA,WACA,WACA,MACA,aACA,YACA,WACA,QACA,oBACA,eACA,OACA,cACA,QACA,UACA,UACA,OACA,cACA,SACA,OACA,gBACA,YACA,eAEF,eAAgB,CACd,UACA,kBACA,MACA,cACA,iBACA,aACA,UACA,eACA,UACA,WACA,cACA,MACA,IACA,IACA,cACA,IACA,MACA,IACA,KACA,SACA,cACA,wBACA,OACA,IACA,OACA,IACA,WACA,SACA,cACA,KACA,QACA,aACA,SACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,UACA,WACA,KACA,iBACA,KACA,MACA,UACA,aACA,KACA,KACA,MACA,QACA,WACA,SACA,KACA,UACA,UACA,MACA,SACA,KACA,SACA,QACA,OACA,WACA,aACA,UACA,WACA,OACA,YACA,cACA,QACA,MACA,iBACA,YACA,yBACA,aACA,QACA,aACA,QACA,UACA,MACA,SACA,wBACA,MACA,OACA,KACA,OACA,WACA,QACA,YACA,cAGJjiC,OAAOqmB,KAAK4b,GAAUtb,SAAQ,SAAUub,GACtCP,EAAOO,GAAGvrB,QAAUqrB,EAAiBC,EAASC,GAChD,IAyNAP,EAAOI,YAAYprB,QAAUqrB,EAxNX,CAEhB,MACA,QACA,OACA,MACA,OACA,QACA,QACA,OACA,QACA,UACA,MACA,MACA,OACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,SACA,KACA,UACA,YACA,MACA,OACA,YACA,QACA,OACA,QACA,OACA,QACA,UACA,KACA,QACA,OACA,SACA,aACA,aACA,WACA,QACA,UACA,OACA,KACA,OACA,SACA,QACA,OACA,SACA,MACA,OACA,SACA,MACA,WACA,YACA,iBACA,kBACA,SACA,YACA,QACA,YACA,YACA,WACA,cACA,UACA,YACA,gBACA,mBACA,SACA,MACA,UACA,cACA,aACA,SACA,cACA,OACA,eACA,YACA,UACA,eACA,eACA,aACA,kBACA,QACA,aACA,SACA,eACA,YACA,eACA,WACA,SACA,WACA,aACA,OACA,YACA,gBACA,eACA,OACA,UACA,UACA,YACA,gBACA,iBACA,kBACA,gBACA,UACA,OACA,YACA,cACA,UACA,cACA,aACA,OACA,aACA,iBACA,aACA,OACA,eACA,cACA,WACA,gBACA,YACA,UACA,QACA,aACA,QACA,OACA,aACA,UACA,aACA,aACA,QACA,OACA,YACA,iBACA,YACA,UACA,eACA,cACA,iBACA,YACA,oBACA,kBACA,QACA,iBACA,eACA,gBACA,kBACA,cACA,gBACA,gBACA,kBACA,cACA,OACA,UACA,YACA,YACA,UACA,eACA,iBACA,aACA,OACA,SACA,cACA,qBACA,SACA,mBACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,gBACA,cACA,iBACA,cACA,eACA,aACA,cACA,WACA,iBACA,oBACA,cACA,qBACA,WACA,eACA,mBACA,oBACA,iBACA,UACA,iBACA,iBACA,cACA,SACA,gBACA,eACA,eACA,aACA,aACA,UACA,oBACA,eACA,YACA,cACA,wBACA,oBAGFxS,EAAMa,UAAUsR,OAASA,CAC1B,CAr5BA,CAq5BEnS,EACL,CA15BA5tB,EAAOC,QAAU8/B,EACjBA,EAAOt7B,YAAc,SACrBs7B,EAAOhQ,QAAU,mCCCjB,SAASwQ,EAAO3S,IACb,SAAWA,GAMVA,EAAMa,UAAiB,MAAI,CACzBpP,QAAS,CACPtK,QAAS,aAEX2a,OAAQ,CACN3a,QAAS,UACTmb,QAAQ,GAEV,iBAAkB,CAChBnb,QAAS,mBACT6Z,MAAO,UAET,iBAAkB,CAChB7Z,QAAS,OACT6Z,MAAO,aAET3qB,OAAQ,MACR4rB,SAAU,sCACVC,YAAa,QACbc,SAAU,QACV,eAAgB,CACd7b,QAAS,eACT6Z,MAAO,QAGZ,CA/BA,CA+BEhB,EACL,CApCA5tB,EAAOC,QAAUsgC,EACjBA,EAAO97B,YAAc,SACrB87B,EAAOxQ,QAAU,mCCCjB,SAASyQ,EAAuB5S,GAC9BA,EAAMa,UAAU,4BAA8Bb,EAAMa,UAAUvuB,OAC5D,QACA,CACEmf,QAAS,SACTuQ,QACE,oEACFC,SAAU,kDAGPjC,EAAMa,UAAU,4BAA4B,cACnDb,EAAMa,UAAUiC,aAAa,2BAA4B,UAAW,CAClEkP,KAAM,CACJ7qB,QACE,gGACF4a,YAAY,EACZ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CA,QACA,SACA,eACA,OACA,OACA,OACA,OACA,UACA,OACA,eACA,SACA,YACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,OACA,aACA,UACA,cACA,aACA,SACA,aACA,SACA,WACA,eACA,SACA,cACA,SACA,qBACA,gBACA,UACA,SACA,SACA,OACA,kBACA,WACA,UACA,eACA,eACA,UACA,OACA,QACA,QACA,eACA,aACA,SACA,UACA,mBACA,OACA,eACA,QACA,SACA,OACA,YACA,mBACA,OACA,kBACA,eACA,iBACA,QACA,SACA,QACA,SACA,SACA,OACA,cACA,YACA,QACA,OACA,UACA,gBACA,QACA,WACA,OACA,iBACA,eACA,kBACA,gBACA,cACA,aACA,aACA,oBACA,UACA,MACA,OACA,UACA,SACA,SACA,YACA,MACA,OACA,QACA,UACA,MACA,gBACA,gBACA,aACA,WACA,YACA,gBACA,WACA,eACA,QACA,QACA,OACA,WACA,MACA,OACA,SACA,MACA,OACA,SACA,OACA,OACA,gBACA,QACA,OACA,eACA,UACA,OACA,SACA,YACA,MACA,OACA,iBACA,MACA,OACA,QACA,oBACA,SACA,UACA,aACA,gBACA,cACA,cACA,cACA,gBACA,SACA,SACA,UACA,iBACA,aACA,mBACA,eACA,YACA,QACA,OACA,SACA,SACA,QACA,aACA,cACA,cACA,eACA,YACA,UACA,eACA,YACA,YACA,OACA,UACA,OACA,UACA,UACA,aACA,YACA,SACA,UACA,cACA,YACA,WACA,WACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,WACA,YACA,gBACA,aACA,YACA,QACA,cACA,YACA,cACA,WACA,WACA,QACA,OACA,aACA,OACA,WACA,SACA,aACA,eACA,YAmBEC,EAAkB,OAHtBD,EAAYA,EAAUjtB,KAAI,SAAUyJ,GAClC,OAAOA,EAASjqB,QAAQ,IAAK,MAC/B,KACwCnC,KAAK,KAAO,OACpDmqB,EAAMa,UAAU2kB,QAAUxlB,EAAMa,UAAUvuB,OAAO,aAAc,CAAC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","sources":["../node_modules/extend/index.js","../node_modules/hast-util-parse-selector/index.js","../node_modules/hastscript/factory.js","../node_modules/hastscript/html.js","../node_modules/hastscript/index.js","../node_modules/hastscript/node_modules/comma-separated-tokens/index.js","../node_modules/hastscript/node_modules/property-information/find.js","../node_modules/hastscript/node_modules/property-information/html.js","../node_modules/hastscript/node_modules/property-information/lib/aria.js","../node_modules/hastscript/node_modules/property-information/lib/html.js","../node_modules/hastscript/node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/hastscript/node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/hastscript/node_modules/property-information/lib/util/create.js","../node_modules/hastscript/node_modules/property-information/lib/util/defined-info.js","../node_modules/hastscript/node_modules/property-information/lib/util/info.js","../node_modules/hastscript/node_modules/property-information/lib/util/merge.js","../node_modules/hastscript/node_modules/property-information/lib/util/schema.js","../node_modules/hastscript/node_modules/property-information/lib/util/types.js","../node_modules/hastscript/node_modules/property-information/lib/xlink.js","../node_modules/hastscript/node_modules/property-information/lib/xml.js","../node_modules/hastscript/node_modules/property-information/lib/xmlns.js","../node_modules/hastscript/node_modules/property-information/normalize.js","../node_modules/hastscript/node_modules/space-separated-tokens/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-alphabetical/index.js","../node_modules/is-alphanumerical/index.js","../node_modules/is-buffer/index.js","../node_modules/is-decimal/index.js","../node_modules/is-hexadecimal/index.js","../node_modules/parse-entities/decode-entity.browser.js","../node_modules/parse-entities/index.js","../node_modules/react-syntax-highlighter/dist/esm/create-element.js","../node_modules/react-syntax-highlighter/dist/esm/checkForListedLanguage.js","../node_modules/react-syntax-highlighter/dist/esm/highlight.js","../node_modules/react-syntax-highlighter/dist/esm/styles/prism/prism.js","../node_modules/react-syntax-highlighter/dist/esm/prism.js","../node_modules/react-syntax-highlighter/dist/esm/languages/prism/supported-languages.js","../node_modules/react-syntax-highlighter/dist/esm/styles/prism/darcula.js","../node_modules/refractor/core.js","../node_modules/refractor/index.js","../node_modules/refractor/lang/abap.js","../node_modules/refractor/lang/abnf.js","../node_modules/refractor/lang/actionscript.js","../node_modules/refractor/lang/ada.js","../node_modules/refractor/lang/agda.js","../node_modules/refractor/lang/al.js","../node_modules/refractor/lang/antlr4.js","../node_modules/refractor/lang/apacheconf.js","../node_modules/refractor/lang/apex.js","../node_modules/refractor/lang/apl.js","../node_modules/refractor/lang/applescript.js","../node_modules/refractor/lang/aql.js","../node_modules/refractor/lang/arduino.js","../node_modules/refractor/lang/arff.js","../node_modules/refractor/lang/asciidoc.js","../node_modules/refractor/lang/asm6502.js","../node_modules/refractor/lang/asmatmel.js","../node_modules/refractor/lang/aspnet.js","../node_modules/refractor/lang/autohotkey.js","../node_modules/refractor/lang/autoit.js","../node_modules/refractor/lang/avisynth.js","../node_modules/refractor/lang/avro-idl.js","../node_modules/refractor/lang/bash.js","../node_modules/refractor/lang/basic.js","../node_modules/refractor/lang/batch.js","../node_modules/refractor/lang/bbcode.js","../node_modules/refractor/lang/bicep.js","../node_modules/refractor/lang/birb.js","../node_modules/refractor/lang/bison.js","../node_modules/refractor/lang/bnf.js","../node_modules/refractor/lang/brainfuck.js","../node_modules/refractor/lang/brightscript.js","../node_modules/refractor/lang/bro.js","../node_modules/refractor/lang/bsl.js","../node_modules/refractor/lang/c.js","../node_modules/refractor/lang/cfscript.js","../node_modules/refractor/lang/chaiscript.js","../node_modules/refractor/lang/cil.js","../node_modules/refractor/lang/clike.js","../node_modules/refractor/lang/clojure.js","../node_modules/refractor/lang/cmake.js","../node_modules/refractor/lang/cobol.js","../node_modules/refractor/lang/coffeescript.js","../node_modules/refractor/lang/concurnas.js","../node_modules/refractor/lang/coq.js","../node_modules/refractor/lang/cpp.js","../node_modules/refractor/lang/crystal.js","../node_modules/refractor/lang/csharp.js","../node_modules/refractor/lang/cshtml.js","../node_modules/refractor/lang/csp.js","../node_modules/refractor/lang/css-extras.js","../node_modules/refractor/lang/css.js","../node_modules/refractor/lang/csv.js","../node_modules/refractor/lang/cypher.js","../node_modules/refractor/lang/d.js","../node_modules/refractor/lang/dart.js","../node_modules/refractor/lang/dataweave.js","../node_modules/refractor/lang/dax.js","../node_modules/refractor/lang/dhall.js","../node_modules/refractor/lang/diff.js","../node_modules/refractor/lang/django.js","../node_modules/refractor/lang/dns-zone-file.js","../node_modules/refractor/lang/docker.js","../node_modules/refractor/lang/dot.js","../node_modules/refractor/lang/ebnf.js","../node_modules/refractor/lang/editorconfig.js","../node_modules/refractor/lang/eiffel.js","../node_modules/refractor/lang/ejs.js","../node_modules/refractor/lang/elixir.js","../node_modules/refractor/lang/elm.js","../node_modules/refractor/lang/erb.js","../node_modules/refractor/lang/erlang.js","../node_modules/refractor/lang/etlua.js","../node_modules/refractor/lang/excel-formula.js","../node_modules/refractor/lang/factor.js","../node_modules/refractor/lang/false.js","../node_modules/refractor/lang/firestore-security-rules.js","../node_modules/refractor/lang/flow.js","../node_modules/refractor/lang/fortran.js","../node_modules/refractor/lang/fsharp.js","../node_modules/refractor/lang/ftl.js","../node_modules/refractor/lang/gap.js","../node_modules/refractor/lang/gcode.js","../node_modules/refractor/lang/gdscript.js","../node_modules/refractor/lang/gedcom.js","../node_modules/refractor/lang/gherkin.js","../node_modules/refractor/lang/git.js","../node_modules/refractor/lang/glsl.js","../node_modules/refractor/lang/gml.js","../node_modules/refractor/lang/gn.js","../node_modules/refractor/lang/go-module.js","../node_modules/refractor/lang/go.js","../node_modules/refractor/lang/graphql.js","../node_modules/refractor/lang/groovy.js","../node_modules/refractor/lang/haml.js","../node_modules/refractor/lang/handlebars.js","../node_modules/refractor/lang/haskell.js","../node_modules/refractor/lang/haxe.js","../node_modules/refractor/lang/hcl.js","../node_modules/refractor/lang/hlsl.js","../node_modules/refractor/lang/hoon.js","../node_modules/refractor/lang/hpkp.js","../node_modules/refractor/lang/hsts.js","../node_modules/refractor/lang/http.js","../node_modules/refractor/lang/ichigojam.js","../node_modules/refractor/lang/icon.js","../node_modules/refractor/lang/icu-message-format.js","../node_modules/refractor/lang/idris.js","../node_modules/refractor/lang/iecst.js","../node_modules/refractor/lang/ignore.js","../node_modules/refractor/lang/inform7.js","../node_modules/refractor/lang/ini.js","../node_modules/refractor/lang/io.js","../node_modules/refractor/lang/j.js","../node_modules/refractor/lang/java.js","../node_modules/refractor/lang/javadoc.js","../node_modules/refractor/lang/javadoclike.js","../node_modules/refractor/lang/javascript.js","../node_modules/refractor/lang/javastacktrace.js","../node_modules/refractor/lang/jexl.js","../node_modules/refractor/lang/jolie.js","../node_modules/refractor/lang/jq.js","../node_modules/refractor/lang/js-extras.js","../node_modules/refractor/lang/js-templates.js","../node_modules/refractor/lang/jsdoc.js","../node_modules/refractor/lang/json.js","../node_modules/refractor/lang/json5.js","../node_modules/refractor/lang/jsonp.js","../node_modules/refractor/lang/jsstacktrace.js","../node_modules/refractor/lang/jsx.js","../node_modules/refractor/lang/julia.js","../node_modules/refractor/lang/keepalived.js","../node_modules/refractor/lang/keyman.js","../node_modules/refractor/lang/kotlin.js","../node_modules/refractor/lang/kumir.js","../node_modules/refractor/lang/kusto.js","../node_modules/refractor/lang/latex.js","../node_modules/refractor/lang/latte.js","../node_modules/refractor/lang/less.js","../node_modules/refractor/lang/lilypond.js","../node_modules/refractor/lang/liquid.js","../node_modules/refractor/lang/lisp.js","../node_modules/refractor/lang/livescript.js","../node_modules/refractor/lang/llvm.js","../node_modules/refractor/lang/log.js","../node_modules/refractor/lang/lolcode.js","../node_modules/refractor/lang/lua.js","../node_modules/refractor/lang/magma.js","../node_modules/refractor/lang/makefile.js","../node_modules/refractor/lang/markdown.js","../node_modules/refractor/lang/markup-templating.js","../node_modules/refractor/lang/markup.js","../node_modules/refractor/lang/matlab.js","../node_modules/refractor/lang/maxscript.js","../node_modules/refractor/lang/mel.js","../node_modules/refractor/lang/mermaid.js","../node_modules/refractor/lang/mizar.js","../node_modules/refractor/lang/mongodb.js","../node_modules/refractor/lang/monkey.js","../node_modules/refractor/lang/moonscript.js","../node_modules/refractor/lang/n1ql.js","../node_modules/refractor/lang/n4js.js","../node_modules/refractor/lang/nand2tetris-hdl.js","../node_modules/refractor/lang/naniscript.js","../node_modules/refractor/lang/nasm.js","../node_modules/refractor/lang/neon.js","../node_modules/refractor/lang/nevod.js","../node_modules/refractor/lang/nginx.js","../node_modules/refractor/lang/nim.js","../node_modules/refractor/lang/nix.js","../node_modules/refractor/lang/nsis.js","../node_modules/refractor/lang/objectivec.js","../node_modules/refractor/lang/ocaml.js","../node_modules/refractor/lang/opencl.js","../node_modules/refractor/lang/openqasm.js","../node_modules/refractor/lang/oz.js","../node_modules/refractor/lang/parigp.js","../node_modules/refractor/lang/parser.js","../node_modules/refractor/lang/pascal.js","../node_modules/refractor/lang/pascaligo.js","../node_modules/refractor/lang/pcaxis.js","../node_modules/refractor/lang/peoplecode.js","../node_modules/refractor/lang/perl.js","../node_modules/refractor/lang/php-extras.js","../node_modules/refractor/lang/php.js","../node_modules/refractor/lang/phpdoc.js","../node_modules/refractor/lang/plsql.js","../node_modules/refractor/lang/powerquery.js","../node_modules/refractor/lang/powershell.js","../node_modules/refractor/lang/processing.js","../node_modules/refractor/lang/prolog.js","../node_modules/refractor/lang/promql.js","../node_modules/refractor/lang/properties.js","../node_modules/refractor/lang/protobuf.js","../node_modules/refractor/lang/psl.js","../node_modules/refractor/lang/pug.js","../node_modules/refractor/lang/puppet.js","../node_modules/refractor/lang/pure.js","../node_modules/refractor/lang/purebasic.js","../node_modules/refractor/lang/purescript.js","../node_modules/refractor/lang/python.js","../node_modules/refractor/lang/q.js","../node_modules/refractor/lang/qml.js","../node_modules/refractor/lang/qore.js","../node_modules/refractor/lang/qsharp.js","../node_modules/refractor/lang/r.js","../node_modules/refractor/lang/racket.js","../node_modules/refractor/lang/reason.js","../node_modules/refractor/lang/regex.js","../node_modules/refractor/lang/rego.js","../node_modules/refractor/lang/renpy.js","../node_modules/refractor/lang/rest.js","../node_modules/refractor/lang/rip.js","../node_modules/refractor/lang/roboconf.js","../node_modules/refractor/lang/robotframework.js","../node_modules/refractor/lang/ruby.js","../node_modules/refractor/lang/rust.js","../node_modules/refractor/lang/sas.js","../node_modules/refractor/lang/sass.js","../node_modules/refractor/lang/scala.js","../node_modules/refractor/lang/scheme.js","../node_modules/refractor/lang/scss.js","../node_modules/refractor/lang/shell-session.js","../node_modules/refractor/lang/smali.js","../node_modules/refractor/lang/smalltalk.js","../node_modules/refractor/lang/smarty.js","../node_modules/refractor/lang/sml.js","../node_modules/refractor/lang/solidity.js","../node_modules/refractor/lang/solution-file.js","../node_modules/refractor/lang/soy.js","../node_modules/refractor/lang/sparql.js","../node_modules/refractor/lang/splunk-spl.js","../node_modules/refractor/lang/sqf.js","../node_modules/refractor/lang/sql.js","../node_modules/refractor/lang/squirrel.js","../node_modules/refractor/lang/stan.js","../node_modules/refractor/lang/stylus.js","../node_modules/refractor/lang/swift.js","../node_modules/refractor/lang/systemd.js","../node_modules/refractor/lang/t4-cs.js","../node_modules/refractor/lang/t4-templating.js","../node_modules/refractor/lang/t4-vb.js","../node_modules/refractor/lang/tap.js","../node_modules/refractor/lang/tcl.js","../node_modules/refractor/lang/textile.js","../node_modules/refractor/lang/toml.js","../node_modules/refractor/lang/tremor.js","../node_modules/refractor/lang/tsx.js","../node_modules/refractor/lang/tt2.js","../node_modules/refractor/lang/turtle.js","../node_modules/refractor/lang/twig.js","../node_modules/refractor/lang/typescript.js","../node_modules/refractor/lang/typoscript.js","../node_modules/refractor/lang/unrealscript.js","../node_modules/refractor/lang/uorazor.js","../node_modules/refractor/lang/uri.js","../node_modules/refractor/lang/v.js","../node_modules/refractor/lang/vala.js","../node_modules/refractor/lang/vbnet.js","../node_modules/refractor/lang/velocity.js","../node_modules/refractor/lang/verilog.js","../node_modules/refractor/lang/vhdl.js","../node_modules/refractor/lang/vim.js","../node_modules/refractor/lang/visual-basic.js","../node_modules/refractor/lang/warpscript.js","../node_modules/refractor/lang/wasm.js","../node_modules/refractor/lang/web-idl.js","../node_modules/refractor/lang/wiki.js","../node_modules/refractor/lang/wolfram.js","../node_modules/refractor/lang/wren.js","../node_modules/refractor/lang/xeora.js","../node_modules/refractor/lang/xml-doc.js","../node_modules/refractor/lang/xojo.js","../node_modules/refractor/lang/xquery.js","../node_modules/refractor/lang/yaml.js","../node_modules/refractor/lang/yang.js","../node_modules/refractor/lang/zig.js","../node_modules/refractor/node_modules/prismjs/components/prism-core.js","../node_modules/style-to-object/index.js","../node_modules/xtend/immutable.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/ccount/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/association.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/util/safe.js","../node_modules/mdast-util-to-markdown/lib/util/track.js","../node_modules/mdast-util-gfm-footnote/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../node_modules/remark-gfm/index.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","'use strict'\n\nmodule.exports = parse\n\nvar search = /[#.]/g\n\n// Create a hast element from a simple CSS selector.\nfunction parse(selector, defaultTagName) {\n  var value = selector || ''\n  var name = defaultTagName || 'div'\n  var props = {}\n  var start = 0\n  var subvalue\n  var previous\n  var match\n\n  while (start < value.length) {\n    search.lastIndex = start\n    match = search.exec(value)\n    subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        name = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (props.className) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {type: 'element', tagName: name, properties: props, children: []}\n}\n","'use strict'\n\nvar find = require('property-information/find')\nvar normalize = require('property-information/normalize')\nvar parseSelector = require('hast-util-parse-selector')\nvar spaces = require('space-separated-tokens').parse\nvar commas = require('comma-separated-tokens').parse\n\nmodule.exports = factory\n\nvar own = {}.hasOwnProperty\n\nfunction factory(schema, defaultTagName, caseSensitive) {\n  var adjust = caseSensitive ? createAdjustMap(caseSensitive) : null\n\n  return h\n\n  // Hyperscript compatible DSL for creating virtual hast trees.\n  function h(selector, properties) {\n    var node = parseSelector(selector, defaultTagName)\n    var children = Array.prototype.slice.call(arguments, 2)\n    var name = node.tagName.toLowerCase()\n    var property\n\n    node.tagName = adjust && own.call(adjust, name) ? adjust[name] : name\n\n    if (properties && isChildren(properties, node)) {\n      children.unshift(properties)\n      properties = null\n    }\n\n    if (properties) {\n      for (property in properties) {\n        addProperty(node.properties, property, properties[property])\n      }\n    }\n\n    addChild(node.children, children)\n\n    if (node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  function addProperty(properties, key, value) {\n    var info\n    var property\n    var result\n\n    // Ignore nullish and NaN values.\n    if (value === null || value === undefined || value !== value) {\n      return\n    }\n\n    info = find(schema, key)\n    property = info.property\n    result = value\n\n    // Handle list values.\n    if (typeof result === 'string') {\n      if (info.spaceSeparated) {\n        result = spaces(result)\n      } else if (info.commaSeparated) {\n        result = commas(result)\n      } else if (info.commaOrSpaceSeparated) {\n        result = spaces(commas(result).join(' '))\n      }\n    }\n\n    // Accept `object` on style.\n    if (property === 'style' && typeof value !== 'string') {\n      result = style(result)\n    }\n\n    // Class-names (which can be added both on the `selector` and here).\n    if (property === 'className' && properties.className) {\n      result = properties.className.concat(result)\n    }\n\n    properties[property] = parsePrimitives(info, property, result)\n  }\n}\n\nfunction isChildren(value, node) {\n  return (\n    typeof value === 'string' ||\n    'length' in value ||\n    isNode(node.tagName, value)\n  )\n}\n\nfunction isNode(tagName, value) {\n  var type = value.type\n\n  if (tagName === 'input' || !type || typeof type !== 'string') {\n    return false\n  }\n\n  if (typeof value.children === 'object' && 'length' in value.children) {\n    return true\n  }\n\n  type = type.toLowerCase()\n\n  if (tagName === 'button') {\n    return (\n      type !== 'menu' &&\n      type !== 'submit' &&\n      type !== 'reset' &&\n      type !== 'button'\n    )\n  }\n\n  return 'value' in value\n}\n\nfunction addChild(nodes, value) {\n  var index\n  var length\n\n  if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n    return\n  }\n\n  if (typeof value === 'object' && 'length' in value) {\n    index = -1\n    length = value.length\n\n    while (++index < length) {\n      addChild(nodes, value[index])\n    }\n\n    return\n  }\n\n  if (typeof value !== 'object' || !('type' in value)) {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n\n  nodes.push(value)\n}\n\n// Parse a (list of) primitives.\nfunction parsePrimitives(info, name, value) {\n  var index\n  var length\n  var result\n\n  if (typeof value !== 'object' || !('length' in value)) {\n    return parsePrimitive(info, name, value)\n  }\n\n  length = value.length\n  index = -1\n  result = []\n\n  while (++index < length) {\n    result[index] = parsePrimitive(info, name, value[index])\n  }\n\n  return result\n}\n\n// Parse a single primitives.\nfunction parsePrimitive(info, name, value) {\n  var result = value\n\n  if (info.number || info.positiveNumber) {\n    if (!isNaN(result) && result !== '') {\n      result = Number(result)\n    }\n  } else if (info.boolean || info.overloadedBoolean) {\n    // Accept `boolean` and `string`.\n    if (\n      typeof result === 'string' &&\n      (result === '' || normalize(value) === normalize(name))\n    ) {\n      result = true\n    }\n  }\n\n  return result\n}\n\nfunction style(value) {\n  var result = []\n  var key\n\n  for (key in value) {\n    result.push([key, value[key]].join(': '))\n  }\n\n  return result.join('; ')\n}\n\nfunction createAdjustMap(values) {\n  var length = values.length\n  var index = -1\n  var result = {}\n  var value\n\n  while (++index < length) {\n    value = values[index]\n    result[value.toLowerCase()] = value\n  }\n\n  return result\n}\n","'use strict'\n\nvar schema = require('property-information/html')\nvar factory = require('./factory')\n\nvar html = factory(schema, 'div')\nhtml.displayName = 'html'\n\nmodule.exports = html\n","'use strict'\n\nmodule.exports = require('./html')\n","'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar comma = ','\nvar space = ' '\nvar empty = ''\n\n// Parse comma-separated tokens to an array.\nfunction parse(value) {\n  var values = []\n  var input = String(value || empty)\n  var index = input.indexOf(comma)\n  var lastIndex = 0\n  var end = false\n  var val\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    val = input.slice(lastIndex, index).trim()\n\n    if (val || !end) {\n      values.push(val)\n    }\n\n    lastIndex = index + 1\n    index = input.indexOf(comma, lastIndex)\n  }\n\n  return values\n}\n\n// Compile an array to comma-separated tokens.\n// `options.padLeft` (default: `true`) pads a space left of each token, and\n// `options.padRight` (default: `false`) pads a space to the right of each token.\nfunction stringify(values, options) {\n  var settings = options || {}\n  var left = settings.padLeft === false ? empty : space\n  var right = settings.padRight ? space : empty\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty)\n  }\n\n  return values.join(right + comma + left).trim()\n}\n","'use strict'\n\nvar normalize = require('./normalize')\nvar DefinedInfo = require('./lib/util/defined-info')\nvar Info = require('./lib/util/info')\n\nvar data = 'data'\n\nmodule.exports = find\n\nvar valid = /^data[-\\w.:]+$/i\nvar dash = /-[a-z]/g\nvar cap = /[A-Z]/g\n\nfunction find(schema, value) {\n  var normal = normalize(value)\n  var prop = value\n  var Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === data && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      prop = datasetToProperty(value)\n    } else {\n      value = datasetToAttribute(value)\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\nfunction datasetToProperty(attribute) {\n  var value = attribute.slice(5).replace(dash, camelcase)\n  return data + value.charAt(0).toUpperCase() + value.slice(1)\n}\n\nfunction datasetToAttribute(property) {\n  var value = property.slice(4)\n\n  if (dash.test(value)) {\n    return property\n  }\n\n  value = value.replace(cap, kebab)\n\n  if (value.charAt(0) !== '-') {\n    value = '-' + value\n  }\n\n  return data + value\n}\n\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","'use strict'\n\nvar merge = require('./lib/util/merge')\nvar xlink = require('./lib/xlink')\nvar xml = require('./lib/xml')\nvar xmlns = require('./lib/xmlns')\nvar aria = require('./lib/aria')\nvar html = require('./lib/html')\n\nmodule.exports = merge([xml, xlink, xmlns, aria, html])\n","'use strict'\n\nvar types = require('./util/types')\nvar create = require('./util/create')\n\nvar booleanish = types.booleanish\nvar number = types.number\nvar spaceSeparated = types.spaceSeparated\n\nmodule.exports = create({\n  transform: ariaTransform,\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n\nfunction ariaTransform(_, prop) {\n  return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n}\n","'use strict'\n\nvar types = require('./util/types')\nvar create = require('./util/create')\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform')\n\nvar boolean = types.boolean\nvar overloadedBoolean = types.overloadedBoolean\nvar booleanish = types.booleanish\nvar number = types.number\nvar spaceSeparated = types.spaceSeparated\nvar commaSeparated = types.commaSeparated\n\nmodule.exports = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: commaSeparated,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextMenu: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: commaSeparated,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","'use strict'\n\nvar caseSensitiveTransform = require('./case-sensitive-transform')\n\nmodule.exports = caseInsensitiveTransform\n\nfunction caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","'use strict'\n\nmodule.exports = caseSensitiveTransform\n\nfunction caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","'use strict'\n\nvar normalize = require('../../normalize')\nvar Schema = require('./schema')\nvar DefinedInfo = require('./defined-info')\n\nmodule.exports = create\n\nfunction create(definition) {\n  var space = definition.space\n  var mustUseProperty = definition.mustUseProperty || []\n  var attributes = definition.attributes || {}\n  var props = definition.properties\n  var transform = definition.transform\n  var property = {}\n  var normal = {}\n  var prop\n  var info\n\n  for (prop in props) {\n    info = new DefinedInfo(\n      prop,\n      transform(attributes, prop),\n      props[prop],\n      space\n    )\n\n    if (mustUseProperty.indexOf(prop) !== -1) {\n      info.mustUseProperty = true\n    }\n\n    property[prop] = info\n\n    normal[normalize(prop)] = prop\n    normal[normalize(info.attribute)] = prop\n  }\n\n  return new Schema(property, normal, space)\n}\n","'use strict'\n\nvar Info = require('./info')\nvar types = require('./types')\n\nmodule.exports = DefinedInfo\n\nDefinedInfo.prototype = new Info()\nDefinedInfo.prototype.defined = true\n\nvar checks = [\n  'boolean',\n  'booleanish',\n  'overloadedBoolean',\n  'number',\n  'commaSeparated',\n  'spaceSeparated',\n  'commaOrSpaceSeparated'\n]\nvar checksLength = checks.length\n\nfunction DefinedInfo(property, attribute, mask, space) {\n  var index = -1\n  var check\n\n  mark(this, 'space', space)\n\n  Info.call(this, property, attribute)\n\n  while (++index < checksLength) {\n    check = checks[index]\n    mark(this, check, (mask & types[check]) === types[check])\n  }\n}\n\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","'use strict'\n\nmodule.exports = Info\n\nvar proto = Info.prototype\n\nproto.space = null\nproto.attribute = null\nproto.property = null\nproto.boolean = false\nproto.booleanish = false\nproto.overloadedBoolean = false\nproto.number = false\nproto.commaSeparated = false\nproto.spaceSeparated = false\nproto.commaOrSpaceSeparated = false\nproto.mustUseProperty = false\nproto.defined = false\n\nfunction Info(property, attribute) {\n  this.property = property\n  this.attribute = attribute\n}\n","'use strict'\n\nvar xtend = require('xtend')\nvar Schema = require('./schema')\n\nmodule.exports = merge\n\nfunction merge(definitions) {\n  var length = definitions.length\n  var property = []\n  var normal = []\n  var index = -1\n  var info\n  var space\n\n  while (++index < length) {\n    info = definitions[index]\n    property.push(info.property)\n    normal.push(info.normal)\n    space = info.space\n  }\n\n  return new Schema(\n    xtend.apply(null, property),\n    xtend.apply(null, normal),\n    space\n  )\n}\n","'use strict'\n\nmodule.exports = Schema\n\nvar proto = Schema.prototype\n\nproto.space = null\nproto.normal = {}\nproto.property = {}\n\nfunction Schema(property, normal, space) {\n  this.property = property\n  this.normal = normal\n\n  if (space) {\n    this.space = space\n  }\n}\n","'use strict'\n\nvar powers = 0\n\nexports.boolean = increment()\nexports.booleanish = increment()\nexports.overloadedBoolean = increment()\nexports.number = increment()\nexports.spaceSeparated = increment()\nexports.commaSeparated = increment()\nexports.commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return Math.pow(2, ++powers)\n}\n","'use strict'\n\nvar create = require('./util/create')\n\nmodule.exports = create({\n  space: 'xlink',\n  transform: xlinkTransform,\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n\nfunction xlinkTransform(_, prop) {\n  return 'xlink:' + prop.slice(5).toLowerCase()\n}\n","'use strict'\n\nvar create = require('./util/create')\n\nmodule.exports = create({\n  space: 'xml',\n  transform: xmlTransform,\n  properties: {\n    xmlLang: null,\n    xmlBase: null,\n    xmlSpace: null\n  }\n})\n\nfunction xmlTransform(_, prop) {\n  return 'xml:' + prop.slice(3).toLowerCase()\n}\n","'use strict'\n\nvar create = require('./util/create')\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform')\n\nmodule.exports = create({\n  space: 'xmlns',\n  attributes: {\n    xmlnsxlink: 'xmlns:xlink'\n  },\n  transform: caseInsensitiveTransform,\n  properties: {\n    xmlns: null,\n    xmlnsXLink: null\n  }\n})\n","'use strict'\n\nmodule.exports = normalize\n\nfunction normalize(value) {\n  return value.toLowerCase()\n}\n","'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar empty = ''\nvar space = ' '\nvar whiteSpace = /[ \\t\\n\\r\\f]+/g\n\nfunction parse(value) {\n  var input = String(value || empty).trim()\n  return input === empty ? [] : input.split(whiteSpace)\n}\n\nfunction stringify(values) {\n  return values.join(space).trim()\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","'use strict'\n\nmodule.exports = alphabetical\n\n// Check if the given character code, or the character code at the first\n// character, is alphabetical.\nfunction alphabetical(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","'use strict'\n\nvar alphabetical = require('is-alphabetical')\nvar decimal = require('is-decimal')\n\nmodule.exports = alphanumerical\n\n// Check if the given character code, or the character code at the first\n// character, is alphanumerical.\nfunction alphanumerical(character) {\n  return alphabetical(character) || decimal(character)\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict'\n\nmodule.exports = decimal\n\n// Check if the given character code, or the character code at the first\n// character, is decimal.\nfunction decimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","'use strict'\n\nmodule.exports = hexadecimal\n\n// Check if the given character code, or the character code at the first\n// character, is hexadecimal.\nfunction hexadecimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nvar legacy = require('character-entities-legacy')\nvar invalid = require('character-reference-invalid')\nvar decimal = require('is-decimal')\nvar hexadecimal = require('is-hexadecimal')\nvar alphanumerical = require('is-alphanumerical')\nvar decodeEntity = require('./decode-entity')\n\nmodule.exports = parseEntities\n\nvar own = {}.hasOwnProperty\nvar fromCharCode = String.fromCharCode\nvar noop = Function.prototype\n\n// Default settings.\nvar defaults = {\n  warning: null,\n  reference: null,\n  text: null,\n  warningContext: null,\n  referenceContext: null,\n  textContext: null,\n  position: {},\n  additional: null,\n  attribute: false,\n  nonTerminated: true\n}\n\n// Characters.\nvar tab = 9 // '\\t'\nvar lineFeed = 10 // '\\n'\nvar formFeed = 12 // '\\f'\nvar space = 32 // ' '\nvar ampersand = 38 // '&'\nvar semicolon = 59 // ';'\nvar lessThan = 60 // '<'\nvar equalsTo = 61 // '='\nvar numberSign = 35 // '#'\nvar uppercaseX = 88 // 'X'\nvar lowercaseX = 120 // 'x'\nvar replacementCharacter = 65533 // '�'\n\n// Reference types.\nvar name = 'named'\nvar hexa = 'hexadecimal'\nvar deci = 'decimal'\n\n// Map of bases.\nvar bases = {}\n\nbases[hexa] = 16\nbases[deci] = 10\n\n// Map of types to tests.\n// Each type of character reference accepts different characters.\n// This test is used to detect whether a reference has ended (as the semicolon\n// is not strictly needed).\nvar tests = {}\n\ntests[name] = alphanumerical\ntests[deci] = decimal\ntests[hexa] = hexadecimal\n\n// Warning types.\nvar namedNotTerminated = 1\nvar numericNotTerminated = 2\nvar namedEmpty = 3\nvar numericEmpty = 4\nvar namedUnknown = 5\nvar numericDisallowed = 6\nvar numericProhibited = 7\n\n// Warning messages.\nvar messages = {}\n\nmessages[namedNotTerminated] =\n  'Named character references must be terminated by a semicolon'\nmessages[numericNotTerminated] =\n  'Numeric character references must be terminated by a semicolon'\nmessages[namedEmpty] = 'Named character references cannot be empty'\nmessages[numericEmpty] = 'Numeric character references cannot be empty'\nmessages[namedUnknown] = 'Named character references must be known'\nmessages[numericDisallowed] =\n  'Numeric character references cannot be disallowed'\nmessages[numericProhibited] =\n  'Numeric character references cannot be outside the permissible Unicode range'\n\n// Wrap to ensure clean parameters are given to `parse`.\nfunction parseEntities(value, options) {\n  var settings = {}\n  var option\n  var key\n\n  if (!options) {\n    options = {}\n  }\n\n  for (key in defaults) {\n    option = options[key]\n    settings[key] =\n      option === null || option === undefined ? defaults[key] : option\n  }\n\n  if (settings.position.indent || settings.position.start) {\n    settings.indent = settings.position.indent || []\n    settings.position = settings.position.start\n  }\n\n  return parse(value, settings)\n}\n\n// Parse entities.\n// eslint-disable-next-line complexity\nfunction parse(value, settings) {\n  var additional = settings.additional\n  var nonTerminated = settings.nonTerminated\n  var handleText = settings.text\n  var handleReference = settings.reference\n  var handleWarning = settings.warning\n  var textContext = settings.textContext\n  var referenceContext = settings.referenceContext\n  var warningContext = settings.warningContext\n  var pos = settings.position\n  var indent = settings.indent || []\n  var length = value.length\n  var index = 0\n  var lines = -1\n  var column = pos.column || 1\n  var line = pos.line || 1\n  var queue = ''\n  var result = []\n  var entityCharacters\n  var namedEntity\n  var terminated\n  var characters\n  var character\n  var reference\n  var following\n  var warning\n  var reason\n  var output\n  var entity\n  var begin\n  var start\n  var type\n  var test\n  var prev\n  var next\n  var diff\n  var end\n\n  if (typeof additional === 'string') {\n    additional = additional.charCodeAt(0)\n  }\n\n  // Cache the current point.\n  prev = now()\n\n  // Wrap `handleWarning`.\n  warning = handleWarning ? parseError : noop\n\n  // Ensure the algorithm walks over the first character and the end\n  // (inclusive).\n  index--\n  length++\n\n  while (++index < length) {\n    // If the previous character was a newline.\n    if (character === lineFeed) {\n      column = indent[lines] || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === ampersand) {\n      following = value.charCodeAt(index + 1)\n\n      // The behaviour depends on the identity of the next character.\n      if (\n        following === tab ||\n        following === lineFeed ||\n        following === formFeed ||\n        following === space ||\n        following === ampersand ||\n        following === lessThan ||\n        following !== following ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n\n        continue\n      }\n\n      start = index + 1\n      begin = start\n      end = start\n\n      if (following === numberSign) {\n        // Numerical entity.\n        end = ++begin\n\n        // The behaviour further depends on the next character.\n        following = value.charCodeAt(end)\n\n        if (following === uppercaseX || following === lowercaseX) {\n          // ASCII hex digits.\n          type = hexa\n          end = ++begin\n        } else {\n          // ASCII digits.\n          type = deci\n        }\n      } else {\n        // Named entity.\n        type = name\n      }\n\n      entityCharacters = ''\n      entity = ''\n      characters = ''\n      test = tests[type]\n      end--\n\n      while (++end < length) {\n        following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === name && own.call(legacy, characters)) {\n          entityCharacters = characters\n          entity = legacy[characters]\n        }\n      }\n\n      terminated = value.charCodeAt(end) === semicolon\n\n      if (terminated) {\n        end++\n\n        namedEntity = type === name ? decodeEntity(characters) : false\n\n        if (namedEntity) {\n          entityCharacters = characters\n          entity = namedEntity\n        }\n      }\n\n      diff = 1 + end - start\n\n      if (!terminated && !nonTerminated) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) entity is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== name) {\n          warning(numericEmpty, diff)\n        }\n      } else if (type === name) {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !entity) {\n          warning(namedUnknown, 1)\n        } else {\n          // If theres something after an entity name which is not known, cap\n          // the reference.\n          if (entityCharacters !== characters) {\n            end = begin + entityCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            reason = entityCharacters ? namedNotTerminated : namedEmpty\n\n            if (settings.attribute) {\n              following = value.charCodeAt(end)\n\n              if (following === equalsTo) {\n                warning(reason, diff)\n                entity = null\n              } else if (alphanumerical(following)) {\n                entity = null\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = entity\n      } else {\n        if (!terminated) {\n          // All non-terminated numeric entities are not rendered, and trigger a\n          // warning.\n          warning(numericNotTerminated, diff)\n        }\n\n        // When terminated and number, parse as either hexadecimal or decimal.\n        reference = parseInt(characters, bases[type])\n\n        // Trigger a warning when the parsed number is prohibited, and replace\n        // with replacement character.\n        if (prohibited(reference)) {\n          warning(numericProhibited, diff)\n          reference = fromCharCode(replacementCharacter)\n        } else if (reference in invalid) {\n          // Trigger a warning when the parsed number is disallowed, and replace\n          // by an alternative.\n          warning(numericDisallowed, diff)\n          reference = invalid[reference]\n        } else {\n          // Parse the number.\n          output = ''\n\n          // Trigger a warning when the parsed number should not be used.\n          if (disallowed(reference)) {\n            warning(numericDisallowed, diff)\n          }\n\n          // Stringify the number.\n          if (reference > 0xffff) {\n            reference -= 0x10000\n            output += fromCharCode((reference >>> (10 & 0x3ff)) | 0xd800)\n            reference = 0xdc00 | (reference & 0x3ff)\n          }\n\n          reference = output + fromCharCode(reference)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat an entity.\n      if (reference) {\n        flush()\n\n        prev = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        next = now()\n        next.offset++\n\n        if (handleReference) {\n          handleReference.call(\n            referenceContext,\n            reference,\n            {start: prev, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        prev = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (\n        character === 10 // Line feed\n      ) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (character === character) {\n        queue += fromCharCode(character)\n        column++\n      } else {\n        flush()\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line: line,\n      column: column,\n      offset: index + (pos.offset || 0)\n    }\n  }\n\n  // “Throw” a parse-error: a warning.\n  function parseError(code, offset) {\n    var position = now()\n\n    position.column += offset\n    position.offset += offset\n\n    handleWarning.call(warningContext, messages[code], position, code)\n  }\n\n  // Flush `queue` (normal text).\n  // Macro invoked before each entity and at the end of `value`.\n  // Does nothing when `queue` is empty.\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (handleText) {\n        handleText.call(textContext, queue, {start: prev, end: now()})\n      }\n\n      queue = ''\n    }\n  }\n}\n\n// Check if `character` is outside the permissible unicode range.\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n// Check if `character` is disallowed.\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react'; // Get all possible permutations of all power sets\n//\n// Super simple, non-algorithmic solution since the\n// number of class names will not be greater than 4\n\nfunction powerSetPermutations(arr) {\n  var arrLength = arr.length;\n  if (arrLength === 0 || arrLength === 1) return arr;\n\n  if (arrLength === 2) {\n    // prettier-ignore\n    return [arr[0], arr[1], \"\".concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[1], \".\").concat(arr[0])];\n  }\n\n  if (arrLength === 3) {\n    return [arr[0], arr[1], arr[2], \"\".concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[0])];\n  }\n\n  if (arrLength >= 4) {\n    // Currently does not support more than 4 extra\n    // class names (after `.token` has been removed)\n    return [arr[0], arr[1], arr[2], arr[3], \"\".concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[0])];\n  }\n}\n\nvar classNameCombinations = {};\n\nfunction getClassNameCombinations(classNames) {\n  if (classNames.length === 0 || classNames.length === 1) return classNames;\n  var key = classNames.join('.');\n\n  if (!classNameCombinations[key]) {\n    classNameCombinations[key] = powerSetPermutations(classNames);\n  }\n\n  return classNameCombinations[key];\n}\n\nexport function createStyleObject(classNames) {\n  var elementStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var stylesheet = arguments.length > 2 ? arguments[2] : undefined;\n  var nonTokenClassNames = classNames.filter(function (className) {\n    return className !== 'token';\n  });\n  var classNamesCombinations = getClassNameCombinations(nonTokenClassNames);\n  return classNamesCombinations.reduce(function (styleObject, className) {\n    return _objectSpread(_objectSpread({}, styleObject), stylesheet[className]);\n  }, elementStyle);\n}\nexport function createClassNameString(classNames) {\n  return classNames.join(' ');\n}\nexport function createChildren(stylesheet, useInlineStyles) {\n  var childrenCount = 0;\n  return function (children) {\n    childrenCount += 1;\n    return children.map(function (child, i) {\n      return createElement({\n        node: child,\n        stylesheet: stylesheet,\n        useInlineStyles: useInlineStyles,\n        key: \"code-segment-\".concat(childrenCount, \"-\").concat(i)\n      });\n    });\n  };\n}\nexport default function createElement(_ref) {\n  var node = _ref.node,\n      stylesheet = _ref.stylesheet,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      useInlineStyles = _ref.useInlineStyles,\n      key = _ref.key;\n  var properties = node.properties,\n      type = node.type,\n      TagName = node.tagName,\n      value = node.value;\n\n  if (type === 'text') {\n    return value;\n  } else if (TagName) {\n    var childrenCreator = createChildren(stylesheet, useInlineStyles);\n    var props;\n\n    if (!useInlineStyles) {\n      props = _objectSpread(_objectSpread({}, properties), {}, {\n        className: createClassNameString(properties.className)\n      });\n    } else {\n      var allStylesheetSelectors = Object.keys(stylesheet).reduce(function (classes, selector) {\n        selector.split('.').forEach(function (className) {\n          if (!classes.includes(className)) classes.push(className);\n        });\n        return classes;\n      }, []); // For compatibility with older versions of react-syntax-highlighter\n\n      var startingClassName = properties.className && properties.className.includes('token') ? ['token'] : [];\n      var className = properties.className && startingClassName.concat(properties.className.filter(function (className) {\n        return !allStylesheetSelectors.includes(className);\n      }));\n      props = _objectSpread(_objectSpread({}, properties), {}, {\n        className: createClassNameString(className) || undefined,\n        style: createStyleObject(properties.className, Object.assign({}, properties.style, style), stylesheet)\n      });\n    }\n\n    var children = childrenCreator(node.children);\n    return /*#__PURE__*/React.createElement(TagName, _extends({\n      key: key\n    }, props), children);\n  }\n}","export default (function (astGenerator, language) {\n  var langs = astGenerator.listLanguages();\n  return langs.indexOf(language) !== -1;\n});","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"language\", \"children\", \"style\", \"customStyle\", \"codeTagProps\", \"useInlineStyles\", \"showLineNumbers\", \"showInlineLineNumbers\", \"startingLineNumber\", \"lineNumberContainerStyle\", \"lineNumberStyle\", \"wrapLines\", \"wrapLongLines\", \"lineProps\", \"renderer\", \"PreTag\", \"CodeTag\", \"code\", \"astGenerator\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport createElement from './create-element';\nimport checkForListedLanguage from './checkForListedLanguage';\nvar newLineRegex = /\\n/g;\n\nfunction getNewLines(str) {\n  return str.match(newLineRegex);\n}\n\nfunction getAllLineNumbers(_ref) {\n  var lines = _ref.lines,\n      startingLineNumber = _ref.startingLineNumber,\n      style = _ref.style;\n  return lines.map(function (_, i) {\n    var number = i + startingLineNumber;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: \"line-\".concat(i),\n      className: \"react-syntax-highlighter-line-number\",\n      style: typeof style === 'function' ? style(number) : style\n    }, \"\".concat(number, \"\\n\"));\n  });\n}\n\nfunction AllLineNumbers(_ref2) {\n  var codeString = _ref2.codeString,\n      codeStyle = _ref2.codeStyle,\n      _ref2$containerStyle = _ref2.containerStyle,\n      containerStyle = _ref2$containerStyle === void 0 ? {\n    \"float\": 'left',\n    paddingRight: '10px'\n  } : _ref2$containerStyle,\n      _ref2$numberStyle = _ref2.numberStyle,\n      numberStyle = _ref2$numberStyle === void 0 ? {} : _ref2$numberStyle,\n      startingLineNumber = _ref2.startingLineNumber;\n  return /*#__PURE__*/React.createElement(\"code\", {\n    style: Object.assign({}, codeStyle, containerStyle)\n  }, getAllLineNumbers({\n    lines: codeString.replace(/\\n$/, '').split('\\n'),\n    style: numberStyle,\n    startingLineNumber: startingLineNumber\n  }));\n}\n\nfunction getEmWidthOfNumber(num) {\n  return \"\".concat(num.toString().length, \".25em\");\n}\n\nfunction getInlineLineNumber(lineNumber, inlineLineNumberStyle) {\n  return {\n    type: 'element',\n    tagName: 'span',\n    properties: {\n      key: \"line-number--\".concat(lineNumber),\n      className: ['comment', 'linenumber', 'react-syntax-highlighter-line-number'],\n      style: inlineLineNumberStyle\n    },\n    children: [{\n      type: 'text',\n      value: lineNumber\n    }]\n  };\n}\n\nfunction assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber) {\n  // minimally necessary styling for line numbers\n  var defaultLineNumberStyle = {\n    display: 'inline-block',\n    minWidth: getEmWidthOfNumber(largestLineNumber),\n    paddingRight: '1em',\n    textAlign: 'right',\n    userSelect: 'none'\n  }; // prep custom styling\n\n  var customLineNumberStyle = typeof lineNumberStyle === 'function' ? lineNumberStyle(lineNumber) : lineNumberStyle; // combine\n\n  var assembledStyle = _objectSpread(_objectSpread({}, defaultLineNumberStyle), customLineNumberStyle);\n\n  return assembledStyle;\n}\n\nfunction createLineElement(_ref3) {\n  var children = _ref3.children,\n      lineNumber = _ref3.lineNumber,\n      lineNumberStyle = _ref3.lineNumberStyle,\n      largestLineNumber = _ref3.largestLineNumber,\n      showInlineLineNumbers = _ref3.showInlineLineNumbers,\n      _ref3$lineProps = _ref3.lineProps,\n      lineProps = _ref3$lineProps === void 0 ? {} : _ref3$lineProps,\n      _ref3$className = _ref3.className,\n      className = _ref3$className === void 0 ? [] : _ref3$className,\n      showLineNumbers = _ref3.showLineNumbers,\n      wrapLongLines = _ref3.wrapLongLines;\n  var properties = typeof lineProps === 'function' ? lineProps(lineNumber) : lineProps;\n  properties['className'] = className;\n\n  if (lineNumber && showInlineLineNumbers) {\n    var inlineLineNumberStyle = assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber);\n    children.unshift(getInlineLineNumber(lineNumber, inlineLineNumberStyle));\n  }\n\n  if (wrapLongLines & showLineNumbers) {\n    properties.style = _objectSpread(_objectSpread({}, properties.style), {}, {\n      display: 'flex'\n    });\n  }\n\n  return {\n    type: 'element',\n    tagName: 'span',\n    properties: properties,\n    children: children\n  };\n}\n\nfunction flattenCodeTree(tree) {\n  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var newTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n\n    if (node.type === 'text') {\n      newTree.push(createLineElement({\n        children: [node],\n        className: _toConsumableArray(new Set(className))\n      }));\n    } else if (node.children) {\n      var classNames = className.concat(node.properties.className);\n      flattenCodeTree(node.children, classNames).forEach(function (i) {\n        return newTree.push(i);\n      });\n    }\n  }\n\n  return newTree;\n}\n\nfunction processLines(codeTree, wrapLines, lineProps, showLineNumbers, showInlineLineNumbers, startingLineNumber, largestLineNumber, lineNumberStyle, wrapLongLines) {\n  var _ref4;\n\n  var tree = flattenCodeTree(codeTree.value);\n  var newTree = [];\n  var lastLineBreakIndex = -1;\n  var index = 0;\n\n  function createWrappedLine(children, lineNumber) {\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return createLineElement({\n      children: children,\n      lineNumber: lineNumber,\n      lineNumberStyle: lineNumberStyle,\n      largestLineNumber: largestLineNumber,\n      showInlineLineNumbers: showInlineLineNumbers,\n      lineProps: lineProps,\n      className: className,\n      showLineNumbers: showLineNumbers,\n      wrapLongLines: wrapLongLines\n    });\n  }\n\n  function createUnwrappedLine(children, lineNumber) {\n    if (showLineNumbers && lineNumber && showInlineLineNumbers) {\n      var inlineLineNumberStyle = assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber);\n      children.unshift(getInlineLineNumber(lineNumber, inlineLineNumberStyle));\n    }\n\n    return children;\n  }\n\n  function createLine(children, lineNumber) {\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return wrapLines || className.length > 0 ? createWrappedLine(children, lineNumber, className) : createUnwrappedLine(children, lineNumber);\n  }\n\n  var _loop = function _loop() {\n    var node = tree[index];\n    var value = node.children[0].value;\n    var newLines = getNewLines(value);\n\n    if (newLines) {\n      var splitValue = value.split('\\n');\n      splitValue.forEach(function (text, i) {\n        var lineNumber = showLineNumbers && newTree.length + startingLineNumber;\n        var newChild = {\n          type: 'text',\n          value: \"\".concat(text, \"\\n\")\n        }; // if it's the first line\n\n        if (i === 0) {\n          var _children = tree.slice(lastLineBreakIndex + 1, index).concat(createLineElement({\n            children: [newChild],\n            className: node.properties.className\n          }));\n\n          var _line = createLine(_children, lineNumber);\n\n          newTree.push(_line); // if it's the last line\n        } else if (i === splitValue.length - 1) {\n          var stringChild = tree[index + 1] && tree[index + 1].children && tree[index + 1].children[0];\n          var lastLineInPreviousSpan = {\n            type: 'text',\n            value: \"\".concat(text)\n          };\n\n          if (stringChild) {\n            var newElem = createLineElement({\n              children: [lastLineInPreviousSpan],\n              className: node.properties.className\n            });\n            tree.splice(index + 1, 0, newElem);\n          } else {\n            var _children2 = [lastLineInPreviousSpan];\n\n            var _line2 = createLine(_children2, lineNumber, node.properties.className);\n\n            newTree.push(_line2);\n          } // if it's neither the first nor the last line\n\n        } else {\n          var _children3 = [newChild];\n\n          var _line3 = createLine(_children3, lineNumber, node.properties.className);\n\n          newTree.push(_line3);\n        }\n      });\n      lastLineBreakIndex = index;\n    }\n\n    index++;\n  };\n\n  while (index < tree.length) {\n    _loop();\n  }\n\n  if (lastLineBreakIndex !== tree.length - 1) {\n    var children = tree.slice(lastLineBreakIndex + 1, tree.length);\n\n    if (children && children.length) {\n      var lineNumber = showLineNumbers && newTree.length + startingLineNumber;\n      var line = createLine(children, lineNumber);\n      newTree.push(line);\n    }\n  }\n\n  return wrapLines ? newTree : (_ref4 = []).concat.apply(_ref4, newTree);\n}\n\nfunction defaultRenderer(_ref5) {\n  var rows = _ref5.rows,\n      stylesheet = _ref5.stylesheet,\n      useInlineStyles = _ref5.useInlineStyles;\n  return rows.map(function (node, i) {\n    return createElement({\n      node: node,\n      stylesheet: stylesheet,\n      useInlineStyles: useInlineStyles,\n      key: \"code-segement\".concat(i)\n    });\n  });\n} // only highlight.js has the highlightAuto method\n\n\nfunction isHighlightJs(astGenerator) {\n  return astGenerator && typeof astGenerator.highlightAuto !== 'undefined';\n}\n\nfunction getCodeTree(_ref6) {\n  var astGenerator = _ref6.astGenerator,\n      language = _ref6.language,\n      code = _ref6.code,\n      defaultCodeValue = _ref6.defaultCodeValue;\n\n  // figure out whether we're using lowlight/highlight or refractor/prism\n  // then attempt highlighting accordingly\n  // lowlight/highlight?\n  if (isHighlightJs(astGenerator)) {\n    var hasLanguage = checkForListedLanguage(astGenerator, language);\n\n    if (language === 'text') {\n      return {\n        value: defaultCodeValue,\n        language: 'text'\n      };\n    } else if (hasLanguage) {\n      return astGenerator.highlight(language, code);\n    } else {\n      return astGenerator.highlightAuto(code);\n    }\n  } // must be refractor/prism, then\n\n\n  try {\n    return language && language !== 'text' ? {\n      value: astGenerator.highlight(code, language)\n    } : {\n      value: defaultCodeValue\n    };\n  } catch (e) {\n    return {\n      value: defaultCodeValue\n    };\n  }\n}\n\nexport default function (defaultAstGenerator, defaultStyle) {\n  return function SyntaxHighlighter(_ref7) {\n    var language = _ref7.language,\n        children = _ref7.children,\n        _ref7$style = _ref7.style,\n        style = _ref7$style === void 0 ? defaultStyle : _ref7$style,\n        _ref7$customStyle = _ref7.customStyle,\n        customStyle = _ref7$customStyle === void 0 ? {} : _ref7$customStyle,\n        _ref7$codeTagProps = _ref7.codeTagProps,\n        codeTagProps = _ref7$codeTagProps === void 0 ? {\n      className: language ? \"language-\".concat(language) : undefined,\n      style: _objectSpread(_objectSpread({}, style['code[class*=\"language-\"]']), style[\"code[class*=\\\"language-\".concat(language, \"\\\"]\")])\n    } : _ref7$codeTagProps,\n        _ref7$useInlineStyles = _ref7.useInlineStyles,\n        useInlineStyles = _ref7$useInlineStyles === void 0 ? true : _ref7$useInlineStyles,\n        _ref7$showLineNumbers = _ref7.showLineNumbers,\n        showLineNumbers = _ref7$showLineNumbers === void 0 ? false : _ref7$showLineNumbers,\n        _ref7$showInlineLineN = _ref7.showInlineLineNumbers,\n        showInlineLineNumbers = _ref7$showInlineLineN === void 0 ? true : _ref7$showInlineLineN,\n        _ref7$startingLineNum = _ref7.startingLineNumber,\n        startingLineNumber = _ref7$startingLineNum === void 0 ? 1 : _ref7$startingLineNum,\n        lineNumberContainerStyle = _ref7.lineNumberContainerStyle,\n        _ref7$lineNumberStyle = _ref7.lineNumberStyle,\n        lineNumberStyle = _ref7$lineNumberStyle === void 0 ? {} : _ref7$lineNumberStyle,\n        wrapLines = _ref7.wrapLines,\n        _ref7$wrapLongLines = _ref7.wrapLongLines,\n        wrapLongLines = _ref7$wrapLongLines === void 0 ? false : _ref7$wrapLongLines,\n        _ref7$lineProps = _ref7.lineProps,\n        lineProps = _ref7$lineProps === void 0 ? {} : _ref7$lineProps,\n        renderer = _ref7.renderer,\n        _ref7$PreTag = _ref7.PreTag,\n        PreTag = _ref7$PreTag === void 0 ? 'pre' : _ref7$PreTag,\n        _ref7$CodeTag = _ref7.CodeTag,\n        CodeTag = _ref7$CodeTag === void 0 ? 'code' : _ref7$CodeTag,\n        _ref7$code = _ref7.code,\n        code = _ref7$code === void 0 ? (Array.isArray(children) ? children[0] : children) || '' : _ref7$code,\n        astGenerator = _ref7.astGenerator,\n        rest = _objectWithoutProperties(_ref7, _excluded);\n\n    astGenerator = astGenerator || defaultAstGenerator;\n    var allLineNumbers = showLineNumbers ? /*#__PURE__*/React.createElement(AllLineNumbers, {\n      containerStyle: lineNumberContainerStyle,\n      codeStyle: codeTagProps.style || {},\n      numberStyle: lineNumberStyle,\n      startingLineNumber: startingLineNumber,\n      codeString: code\n    }) : null;\n    var defaultPreStyle = style.hljs || style['pre[class*=\"language-\"]'] || {\n      backgroundColor: '#fff'\n    };\n    var generatorClassName = isHighlightJs(astGenerator) ? 'hljs' : 'prismjs';\n    var preProps = useInlineStyles ? Object.assign({}, rest, {\n      style: Object.assign({}, defaultPreStyle, customStyle)\n    }) : Object.assign({}, rest, {\n      className: rest.className ? \"\".concat(generatorClassName, \" \").concat(rest.className) : generatorClassName,\n      style: Object.assign({}, customStyle)\n    });\n\n    if (wrapLongLines) {\n      codeTagProps.style = _objectSpread(_objectSpread({}, codeTagProps.style), {}, {\n        whiteSpace: 'pre-wrap'\n      });\n    } else {\n      codeTagProps.style = _objectSpread(_objectSpread({}, codeTagProps.style), {}, {\n        whiteSpace: 'pre'\n      });\n    }\n\n    if (!astGenerator) {\n      return /*#__PURE__*/React.createElement(PreTag, preProps, allLineNumbers, /*#__PURE__*/React.createElement(CodeTag, codeTagProps, code));\n    }\n    /*\n     * Some custom renderers rely on individual row elements so we need to turn wrapLines on\n     * if renderer is provided and wrapLines is undefined.\n     */\n\n\n    if (wrapLines === undefined && renderer || wrapLongLines) wrapLines = true;\n    renderer = renderer || defaultRenderer;\n    var defaultCodeValue = [{\n      type: 'text',\n      value: code\n    }];\n    var codeTree = getCodeTree({\n      astGenerator: astGenerator,\n      language: language,\n      code: code,\n      defaultCodeValue: defaultCodeValue\n    });\n\n    if (codeTree.language === null) {\n      codeTree.value = defaultCodeValue;\n    } // determine largest line number so that we can force minWidth on all linenumber elements\n\n\n    var largestLineNumber = codeTree.value.length + startingLineNumber;\n    var rows = processLines(codeTree, wrapLines, lineProps, showLineNumbers, showInlineLineNumbers, startingLineNumber, largestLineNumber, lineNumberStyle, wrapLongLines);\n    return /*#__PURE__*/React.createElement(PreTag, preProps, /*#__PURE__*/React.createElement(CodeTag, codeTagProps, !showInlineLineNumbers && allLineNumbers, renderer({\n      rows: rows,\n      stylesheet: style,\n      useInlineStyles: useInlineStyles\n    })));\n  };\n}","export default {\n  \"code[class*=\\\"language-\\\"]\": {\n    \"color\": \"black\",\n    \"background\": \"none\",\n    \"textShadow\": \"0 1px white\",\n    \"fontFamily\": \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\",\n    \"fontSize\": \"1em\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"wordWrap\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\"\n  },\n  \"pre[class*=\\\"language-\\\"]\": {\n    \"color\": \"black\",\n    \"background\": \"#f5f2f0\",\n    \"textShadow\": \"0 1px white\",\n    \"fontFamily\": \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\",\n    \"fontSize\": \"1em\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"wordWrap\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\",\n    \"padding\": \"1em\",\n    \"margin\": \".5em 0\",\n    \"overflow\": \"auto\"\n  },\n  \"pre[class*=\\\"language-\\\"]::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"] ::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"]::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"] ::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"]::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"] ::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"]::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"] ::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \":not(pre) > code[class*=\\\"language-\\\"]\": {\n    \"background\": \"#f5f2f0\",\n    \"padding\": \".1em\",\n    \"borderRadius\": \".3em\",\n    \"whiteSpace\": \"normal\"\n  },\n  \"comment\": {\n    \"color\": \"slategray\"\n  },\n  \"prolog\": {\n    \"color\": \"slategray\"\n  },\n  \"doctype\": {\n    \"color\": \"slategray\"\n  },\n  \"cdata\": {\n    \"color\": \"slategray\"\n  },\n  \"punctuation\": {\n    \"color\": \"#999\"\n  },\n  \"namespace\": {\n    \"Opacity\": \".7\"\n  },\n  \"property\": {\n    \"color\": \"#905\"\n  },\n  \"tag\": {\n    \"color\": \"#905\"\n  },\n  \"boolean\": {\n    \"color\": \"#905\"\n  },\n  \"number\": {\n    \"color\": \"#905\"\n  },\n  \"constant\": {\n    \"color\": \"#905\"\n  },\n  \"symbol\": {\n    \"color\": \"#905\"\n  },\n  \"deleted\": {\n    \"color\": \"#905\"\n  },\n  \"selector\": {\n    \"color\": \"#690\"\n  },\n  \"attr-name\": {\n    \"color\": \"#690\"\n  },\n  \"string\": {\n    \"color\": \"#690\"\n  },\n  \"char\": {\n    \"color\": \"#690\"\n  },\n  \"builtin\": {\n    \"color\": \"#690\"\n  },\n  \"inserted\": {\n    \"color\": \"#690\"\n  },\n  \"operator\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \"entity\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\",\n    \"cursor\": \"help\"\n  },\n  \"url\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \".language-css .token.string\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \".style .token.string\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \"atrule\": {\n    \"color\": \"#07a\"\n  },\n  \"attr-value\": {\n    \"color\": \"#07a\"\n  },\n  \"keyword\": {\n    \"color\": \"#07a\"\n  },\n  \"function\": {\n    \"color\": \"#DD4A68\"\n  },\n  \"class-name\": {\n    \"color\": \"#DD4A68\"\n  },\n  \"regex\": {\n    \"color\": \"#e90\"\n  },\n  \"important\": {\n    \"color\": \"#e90\",\n    \"fontWeight\": \"bold\"\n  },\n  \"variable\": {\n    \"color\": \"#e90\"\n  },\n  \"bold\": {\n    \"fontWeight\": \"bold\"\n  },\n  \"italic\": {\n    \"fontStyle\": \"italic\"\n  }\n};","import highlight from './highlight';\nimport defaultStyle from './styles/prism/prism';\nimport refractor from 'refractor';\nimport supportedLanguages from './languages/prism/supported-languages';\nvar highlighter = highlight(refractor, defaultStyle);\nhighlighter.supportedLanguages = supportedLanguages;\nexport default highlighter;","//\n// This file has been auto-generated by the `npm run build-languages-prism` task\n//\nexport default ['abap', 'abnf', 'actionscript', 'ada', 'agda', 'al', 'antlr4', 'apacheconf', 'apex', 'apl', 'applescript', 'aql', 'arduino', 'arff', 'asciidoc', 'asm6502', 'asmatmel', 'aspnet', 'autohotkey', 'autoit', 'avisynth', 'avro-idl', 'bash', 'basic', 'batch', 'bbcode', 'bicep', 'birb', 'bison', 'bnf', 'brainfuck', 'brightscript', 'bro', 'bsl', 'c', 'cfscript', 'chaiscript', 'cil', 'clike', 'clojure', 'cmake', 'cobol', 'coffeescript', 'concurnas', 'coq', 'cpp', 'crystal', 'csharp', 'cshtml', 'csp', 'css-extras', 'css', 'csv', 'cypher', 'd', 'dart', 'dataweave', 'dax', 'dhall', 'diff', 'django', 'dns-zone-file', 'docker', 'dot', 'ebnf', 'editorconfig', 'eiffel', 'ejs', 'elixir', 'elm', 'erb', 'erlang', 'etlua', 'excel-formula', 'factor', 'false', 'firestore-security-rules', 'flow', 'fortran', 'fsharp', 'ftl', 'gap', 'gcode', 'gdscript', 'gedcom', 'gherkin', 'git', 'glsl', 'gml', 'gn', 'go-module', 'go', 'graphql', 'groovy', 'haml', 'handlebars', 'haskell', 'haxe', 'hcl', 'hlsl', 'hoon', 'hpkp', 'hsts', 'http', 'ichigojam', 'icon', 'icu-message-format', 'idris', 'iecst', 'ignore', 'inform7', 'ini', 'io', 'j', 'java', 'javadoc', 'javadoclike', 'javascript', 'javastacktrace', 'jexl', 'jolie', 'jq', 'js-extras', 'js-templates', 'jsdoc', 'json', 'json5', 'jsonp', 'jsstacktrace', 'jsx', 'julia', 'keepalived', 'keyman', 'kotlin', 'kumir', 'kusto', 'latex', 'latte', 'less', 'lilypond', 'liquid', 'lisp', 'livescript', 'llvm', 'log', 'lolcode', 'lua', 'magma', 'makefile', 'markdown', 'markup-templating', 'markup', 'matlab', 'maxscript', 'mel', 'mermaid', 'mizar', 'mongodb', 'monkey', 'moonscript', 'n1ql', 'n4js', 'nand2tetris-hdl', 'naniscript', 'nasm', 'neon', 'nevod', 'nginx', 'nim', 'nix', 'nsis', 'objectivec', 'ocaml', 'opencl', 'openqasm', 'oz', 'parigp', 'parser', 'pascal', 'pascaligo', 'pcaxis', 'peoplecode', 'perl', 'php-extras', 'php', 'phpdoc', 'plsql', 'powerquery', 'powershell', 'processing', 'prolog', 'promql', 'properties', 'protobuf', 'psl', 'pug', 'puppet', 'pure', 'purebasic', 'purescript', 'python', 'q', 'qml', 'qore', 'qsharp', 'r', 'racket', 'reason', 'regex', 'rego', 'renpy', 'rest', 'rip', 'roboconf', 'robotframework', 'ruby', 'rust', 'sas', 'sass', 'scala', 'scheme', 'scss', 'shell-session', 'smali', 'smalltalk', 'smarty', 'sml', 'solidity', 'solution-file', 'soy', 'sparql', 'splunk-spl', 'sqf', 'sql', 'squirrel', 'stan', 'stylus', 'swift', 'systemd', 't4-cs', 't4-templating', 't4-vb', 'tap', 'tcl', 'textile', 'toml', 'tremor', 'tsx', 'tt2', 'turtle', 'twig', 'typescript', 'typoscript', 'unrealscript', 'uorazor', 'uri', 'v', 'vala', 'vbnet', 'velocity', 'verilog', 'vhdl', 'vim', 'visual-basic', 'warpscript', 'wasm', 'web-idl', 'wiki', 'wolfram', 'wren', 'xeora', 'xml-doc', 'xojo', 'xquery', 'yaml', 'yang', 'zig'];","export default {\n  \"code[class*=\\\"language-\\\"]\": {\n    \"color\": \"#a9b7c6\",\n    \"fontFamily\": \"Consolas, Monaco, 'Andale Mono', monospace\",\n    \"direction\": \"ltr\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\"\n  },\n  \"pre[class*=\\\"language-\\\"]\": {\n    \"color\": \"#a9b7c6\",\n    \"fontFamily\": \"Consolas, Monaco, 'Andale Mono', monospace\",\n    \"direction\": \"ltr\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\",\n    \"padding\": \"1em\",\n    \"margin\": \".5em 0\",\n    \"overflow\": \"auto\",\n    \"background\": \"#2b2b2b\"\n  },\n  \"pre[class*=\\\"language-\\\"]::-moz-selection\": {\n    \"color\": \"inherit\",\n    \"background\": \"rgba(33, 66, 131, .85)\"\n  },\n  \"pre[class*=\\\"language-\\\"] ::-moz-selection\": {\n    \"color\": \"inherit\",\n    \"background\": \"rgba(33, 66, 131, .85)\"\n  },\n  \"code[class*=\\\"language-\\\"]::-moz-selection\": {\n    \"color\": \"inherit\",\n    \"background\": \"rgba(33, 66, 131, .85)\"\n  },\n  \"code[class*=\\\"language-\\\"] ::-moz-selection\": {\n    \"color\": \"inherit\",\n    \"background\": \"rgba(33, 66, 131, .85)\"\n  },\n  \"pre[class*=\\\"language-\\\"]::selection\": {\n    \"color\": \"inherit\",\n    \"background\": \"rgba(33, 66, 131, .85)\"\n  },\n  \"pre[class*=\\\"language-\\\"] ::selection\": {\n    \"color\": \"inherit\",\n    \"background\": \"rgba(33, 66, 131, .85)\"\n  },\n  \"code[class*=\\\"language-\\\"]::selection\": {\n    \"color\": \"inherit\",\n    \"background\": \"rgba(33, 66, 131, .85)\"\n  },\n  \"code[class*=\\\"language-\\\"] ::selection\": {\n    \"color\": \"inherit\",\n    \"background\": \"rgba(33, 66, 131, .85)\"\n  },\n  \":not(pre) > code[class*=\\\"language-\\\"]\": {\n    \"background\": \"#2b2b2b\",\n    \"padding\": \".1em\",\n    \"borderRadius\": \".3em\"\n  },\n  \"comment\": {\n    \"color\": \"#808080\"\n  },\n  \"prolog\": {\n    \"color\": \"#808080\"\n  },\n  \"cdata\": {\n    \"color\": \"#808080\"\n  },\n  \"delimiter\": {\n    \"color\": \"#cc7832\"\n  },\n  \"boolean\": {\n    \"color\": \"#cc7832\"\n  },\n  \"keyword\": {\n    \"color\": \"#cc7832\"\n  },\n  \"selector\": {\n    \"color\": \"#cc7832\"\n  },\n  \"important\": {\n    \"color\": \"#cc7832\"\n  },\n  \"atrule\": {\n    \"color\": \"#cc7832\"\n  },\n  \"operator\": {\n    \"color\": \"#a9b7c6\"\n  },\n  \"punctuation\": {\n    \"color\": \"#a9b7c6\"\n  },\n  \"attr-name\": {\n    \"color\": \"#a9b7c6\"\n  },\n  \"tag\": {\n    \"color\": \"#e8bf6a\"\n  },\n  \"tag.punctuation\": {\n    \"color\": \"#e8bf6a\"\n  },\n  \"doctype\": {\n    \"color\": \"#e8bf6a\"\n  },\n  \"builtin\": {\n    \"color\": \"#e8bf6a\"\n  },\n  \"entity\": {\n    \"color\": \"#6897bb\"\n  },\n  \"number\": {\n    \"color\": \"#6897bb\"\n  },\n  \"symbol\": {\n    \"color\": \"#6897bb\"\n  },\n  \"property\": {\n    \"color\": \"#9876aa\"\n  },\n  \"constant\": {\n    \"color\": \"#9876aa\"\n  },\n  \"variable\": {\n    \"color\": \"#9876aa\"\n  },\n  \"string\": {\n    \"color\": \"#6a8759\"\n  },\n  \"char\": {\n    \"color\": \"#6a8759\"\n  },\n  \"attr-value\": {\n    \"color\": \"#a5c261\"\n  },\n  \"attr-value.punctuation\": {\n    \"color\": \"#a5c261\"\n  },\n  \"attr-value.punctuation:first-child\": {\n    \"color\": \"#a9b7c6\"\n  },\n  \"url\": {\n    \"color\": \"#287bde\",\n    \"textDecoration\": \"underline\"\n  },\n  \"function\": {\n    \"color\": \"#ffc66d\"\n  },\n  \"regex\": {\n    \"background\": \"#364135\"\n  },\n  \"bold\": {\n    \"fontWeight\": \"bold\"\n  },\n  \"italic\": {\n    \"fontStyle\": \"italic\"\n  },\n  \"inserted\": {\n    \"background\": \"#294436\"\n  },\n  \"deleted\": {\n    \"background\": \"#484a4a\"\n  },\n  \"code.language-css .token.property\": {\n    \"color\": \"#a9b7c6\"\n  },\n  \"code.language-css .token.property + .token.punctuation\": {\n    \"color\": \"#a9b7c6\"\n  },\n  \"code.language-css .token.id\": {\n    \"color\": \"#ffc66d\"\n  },\n  \"code.language-css .token.selector > .token.class\": {\n    \"color\": \"#ffc66d\"\n  },\n  \"code.language-css .token.selector > .token.attribute\": {\n    \"color\": \"#ffc66d\"\n  },\n  \"code.language-css .token.selector > .token.pseudo-class\": {\n    \"color\": \"#ffc66d\"\n  },\n  \"code.language-css .token.selector > .token.pseudo-element\": {\n    \"color\": \"#ffc66d\"\n  }\n};","'use strict'\n\n/* global window, self */\n\n// istanbul ignore next - Don't allow Prism to run on page load in browser or\n// to start messaging from workers.\nvar ctx =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n    ? self\n    : typeof window === 'object'\n    ? window\n    : typeof global === 'object'\n    ? global\n    : {}\n\nvar restore = capture()\n\nctx.Prism = {manual: true, disableWorkerMessageHandler: true}\n\n// Load all stuff in `prism.js` itself, except for `prism-file-highlight.js`.\n// The wrapped non-leaky grammars are loaded instead of Prism’s originals.\nvar h = require('hastscript')\nvar decode = require('parse-entities')\nvar Prism = require('prismjs/components/prism-core')\nvar markup = require('./lang/markup')\nvar css = require('./lang/css')\nvar clike = require('./lang/clike')\nvar js = require('./lang/javascript')\n\nrestore()\n\nvar own = {}.hasOwnProperty\n\n// Inherit.\nfunction Refractor() {}\n\nRefractor.prototype = Prism\n\n// Construct.\nvar refract = new Refractor()\n\n// Expose.\nmodule.exports = refract\n\n// Create.\nrefract.highlight = highlight\nrefract.register = register\nrefract.alias = alias\nrefract.registered = registered\nrefract.listLanguages = listLanguages\n\n// Register bundled grammars.\nregister(markup)\nregister(css)\nregister(clike)\nregister(js)\n\nrefract.util.encode = encode\nrefract.Token.stringify = stringify\n\nfunction register(grammar) {\n  if (typeof grammar !== 'function' || !grammar.displayName) {\n    throw new Error('Expected `function` for `grammar`, got `' + grammar + '`')\n  }\n\n  // Do not duplicate registrations.\n  if (refract.languages[grammar.displayName] === undefined) {\n    grammar(refract)\n  }\n}\n\nfunction alias(name, alias) {\n  var languages = refract.languages\n  var map = name\n  var key\n  var list\n  var length\n  var index\n\n  if (alias) {\n    map = {}\n    map[name] = alias\n  }\n\n  for (key in map) {\n    list = map[key]\n    list = typeof list === 'string' ? [list] : list\n    length = list.length\n    index = -1\n\n    while (++index < length) {\n      languages[list[index]] = languages[key]\n    }\n  }\n}\n\nfunction highlight(value, name) {\n  var sup = Prism.highlight\n  var grammar\n\n  if (typeof value !== 'string') {\n    throw new Error('Expected `string` for `value`, got `' + value + '`')\n  }\n\n  // `name` is a grammar object.\n  if (refract.util.type(name) === 'Object') {\n    grammar = name\n    name = null\n  } else {\n    if (typeof name !== 'string') {\n      throw new Error('Expected `string` for `name`, got `' + name + '`')\n    }\n\n    if (own.call(refract.languages, name)) {\n      grammar = refract.languages[name]\n    } else {\n      throw new Error('Unknown language: `' + name + '` is not registered')\n    }\n  }\n\n  return sup.call(this, value, grammar, name)\n}\n\nfunction registered(language) {\n  if (typeof language !== 'string') {\n    throw new Error('Expected `string` for `language`, got `' + language + '`')\n  }\n\n  return own.call(refract.languages, language)\n}\n\nfunction listLanguages() {\n  var languages = refract.languages\n  var list = []\n  var language\n\n  for (language in languages) {\n    if (\n      own.call(languages, language) &&\n      typeof languages[language] === 'object'\n    ) {\n      list.push(language)\n    }\n  }\n\n  return list\n}\n\nfunction stringify(value, language, parent) {\n  var env\n\n  if (typeof value === 'string') {\n    return {type: 'text', value: value}\n  }\n\n  if (refract.util.type(value) === 'Array') {\n    return stringifyAll(value, language)\n  }\n\n  env = {\n    type: value.type,\n    content: refract.Token.stringify(value.content, language, parent),\n    tag: 'span',\n    classes: ['token', value.type],\n    attributes: {},\n    language: language,\n    parent: parent\n  }\n\n  if (value.alias) {\n    env.classes = env.classes.concat(value.alias)\n  }\n\n  refract.hooks.run('wrap', env)\n\n  return h(\n    env.tag + '.' + env.classes.join('.'),\n    attributes(env.attributes),\n    env.content\n  )\n}\n\nfunction stringifyAll(values, language) {\n  var result = []\n  var length = values.length\n  var index = -1\n  var value\n\n  while (++index < length) {\n    value = values[index]\n\n    if (value !== '' && value !== null && value !== undefined) {\n      result.push(value)\n    }\n  }\n\n  index = -1\n  length = result.length\n\n  while (++index < length) {\n    value = result[index]\n    result[index] = refract.Token.stringify(value, language, result)\n  }\n\n  return result\n}\n\nfunction encode(tokens) {\n  return tokens\n}\n\nfunction attributes(attrs) {\n  var key\n\n  for (key in attrs) {\n    attrs[key] = decode(attrs[key])\n  }\n\n  return attrs\n}\n\nfunction capture() {\n  var defined = 'Prism' in ctx\n  /* istanbul ignore next */\n  var current = defined ? ctx.Prism : undefined\n\n  return restore\n\n  function restore() {\n    /* istanbul ignore else - Clean leaks after Prism. */\n    if (defined) {\n      ctx.Prism = current\n    } else {\n      delete ctx.Prism\n    }\n\n    defined = undefined\n    current = undefined\n  }\n}\n","'use strict'\n\nvar refractor = require('./core.js')\n\nmodule.exports = refractor\n\nrefractor.register(require('./lang/abap.js'))\nrefractor.register(require('./lang/abnf.js'))\nrefractor.register(require('./lang/actionscript.js'))\nrefractor.register(require('./lang/ada.js'))\nrefractor.register(require('./lang/agda.js'))\nrefractor.register(require('./lang/al.js'))\nrefractor.register(require('./lang/antlr4.js'))\nrefractor.register(require('./lang/apacheconf.js'))\nrefractor.register(require('./lang/apex.js'))\nrefractor.register(require('./lang/apl.js'))\nrefractor.register(require('./lang/applescript.js'))\nrefractor.register(require('./lang/aql.js'))\nrefractor.register(require('./lang/arduino.js'))\nrefractor.register(require('./lang/arff.js'))\nrefractor.register(require('./lang/asciidoc.js'))\nrefractor.register(require('./lang/asm6502.js'))\nrefractor.register(require('./lang/asmatmel.js'))\nrefractor.register(require('./lang/aspnet.js'))\nrefractor.register(require('./lang/autohotkey.js'))\nrefractor.register(require('./lang/autoit.js'))\nrefractor.register(require('./lang/avisynth.js'))\nrefractor.register(require('./lang/avro-idl.js'))\nrefractor.register(require('./lang/bash.js'))\nrefractor.register(require('./lang/basic.js'))\nrefractor.register(require('./lang/batch.js'))\nrefractor.register(require('./lang/bbcode.js'))\nrefractor.register(require('./lang/bicep.js'))\nrefractor.register(require('./lang/birb.js'))\nrefractor.register(require('./lang/bison.js'))\nrefractor.register(require('./lang/bnf.js'))\nrefractor.register(require('./lang/brainfuck.js'))\nrefractor.register(require('./lang/brightscript.js'))\nrefractor.register(require('./lang/bro.js'))\nrefractor.register(require('./lang/bsl.js'))\nrefractor.register(require('./lang/c.js'))\nrefractor.register(require('./lang/cfscript.js'))\nrefractor.register(require('./lang/chaiscript.js'))\nrefractor.register(require('./lang/cil.js'))\nrefractor.register(require('./lang/clojure.js'))\nrefractor.register(require('./lang/cmake.js'))\nrefractor.register(require('./lang/cobol.js'))\nrefractor.register(require('./lang/coffeescript.js'))\nrefractor.register(require('./lang/concurnas.js'))\nrefractor.register(require('./lang/coq.js'))\nrefractor.register(require('./lang/cpp.js'))\nrefractor.register(require('./lang/crystal.js'))\nrefractor.register(require('./lang/csharp.js'))\nrefractor.register(require('./lang/cshtml.js'))\nrefractor.register(require('./lang/csp.js'))\nrefractor.register(require('./lang/css-extras.js'))\nrefractor.register(require('./lang/csv.js'))\nrefractor.register(require('./lang/cypher.js'))\nrefractor.register(require('./lang/d.js'))\nrefractor.register(require('./lang/dart.js'))\nrefractor.register(require('./lang/dataweave.js'))\nrefractor.register(require('./lang/dax.js'))\nrefractor.register(require('./lang/dhall.js'))\nrefractor.register(require('./lang/diff.js'))\nrefractor.register(require('./lang/django.js'))\nrefractor.register(require('./lang/dns-zone-file.js'))\nrefractor.register(require('./lang/docker.js'))\nrefractor.register(require('./lang/dot.js'))\nrefractor.register(require('./lang/ebnf.js'))\nrefractor.register(require('./lang/editorconfig.js'))\nrefractor.register(require('./lang/eiffel.js'))\nrefractor.register(require('./lang/ejs.js'))\nrefractor.register(require('./lang/elixir.js'))\nrefractor.register(require('./lang/elm.js'))\nrefractor.register(require('./lang/erb.js'))\nrefractor.register(require('./lang/erlang.js'))\nrefractor.register(require('./lang/etlua.js'))\nrefractor.register(require('./lang/excel-formula.js'))\nrefractor.register(require('./lang/factor.js'))\nrefractor.register(require('./lang/false.js'))\nrefractor.register(require('./lang/firestore-security-rules.js'))\nrefractor.register(require('./lang/flow.js'))\nrefractor.register(require('./lang/fortran.js'))\nrefractor.register(require('./lang/fsharp.js'))\nrefractor.register(require('./lang/ftl.js'))\nrefractor.register(require('./lang/gap.js'))\nrefractor.register(require('./lang/gcode.js'))\nrefractor.register(require('./lang/gdscript.js'))\nrefractor.register(require('./lang/gedcom.js'))\nrefractor.register(require('./lang/gherkin.js'))\nrefractor.register(require('./lang/git.js'))\nrefractor.register(require('./lang/glsl.js'))\nrefractor.register(require('./lang/gml.js'))\nrefractor.register(require('./lang/gn.js'))\nrefractor.register(require('./lang/go-module.js'))\nrefractor.register(require('./lang/go.js'))\nrefractor.register(require('./lang/graphql.js'))\nrefractor.register(require('./lang/groovy.js'))\nrefractor.register(require('./lang/haml.js'))\nrefractor.register(require('./lang/handlebars.js'))\nrefractor.register(require('./lang/haskell.js'))\nrefractor.register(require('./lang/haxe.js'))\nrefractor.register(require('./lang/hcl.js'))\nrefractor.register(require('./lang/hlsl.js'))\nrefractor.register(require('./lang/hoon.js'))\nrefractor.register(require('./lang/hpkp.js'))\nrefractor.register(require('./lang/hsts.js'))\nrefractor.register(require('./lang/http.js'))\nrefractor.register(require('./lang/ichigojam.js'))\nrefractor.register(require('./lang/icon.js'))\nrefractor.register(require('./lang/icu-message-format.js'))\nrefractor.register(require('./lang/idris.js'))\nrefractor.register(require('./lang/iecst.js'))\nrefractor.register(require('./lang/ignore.js'))\nrefractor.register(require('./lang/inform7.js'))\nrefractor.register(require('./lang/ini.js'))\nrefractor.register(require('./lang/io.js'))\nrefractor.register(require('./lang/j.js'))\nrefractor.register(require('./lang/java.js'))\nrefractor.register(require('./lang/javadoc.js'))\nrefractor.register(require('./lang/javadoclike.js'))\nrefractor.register(require('./lang/javastacktrace.js'))\nrefractor.register(require('./lang/jexl.js'))\nrefractor.register(require('./lang/jolie.js'))\nrefractor.register(require('./lang/jq.js'))\nrefractor.register(require('./lang/js-extras.js'))\nrefractor.register(require('./lang/js-templates.js'))\nrefractor.register(require('./lang/jsdoc.js'))\nrefractor.register(require('./lang/json.js'))\nrefractor.register(require('./lang/json5.js'))\nrefractor.register(require('./lang/jsonp.js'))\nrefractor.register(require('./lang/jsstacktrace.js'))\nrefractor.register(require('./lang/jsx.js'))\nrefractor.register(require('./lang/julia.js'))\nrefractor.register(require('./lang/keepalived.js'))\nrefractor.register(require('./lang/keyman.js'))\nrefractor.register(require('./lang/kotlin.js'))\nrefractor.register(require('./lang/kumir.js'))\nrefractor.register(require('./lang/kusto.js'))\nrefractor.register(require('./lang/latex.js'))\nrefractor.register(require('./lang/latte.js'))\nrefractor.register(require('./lang/less.js'))\nrefractor.register(require('./lang/lilypond.js'))\nrefractor.register(require('./lang/liquid.js'))\nrefractor.register(require('./lang/lisp.js'))\nrefractor.register(require('./lang/livescript.js'))\nrefractor.register(require('./lang/llvm.js'))\nrefractor.register(require('./lang/log.js'))\nrefractor.register(require('./lang/lolcode.js'))\nrefractor.register(require('./lang/lua.js'))\nrefractor.register(require('./lang/magma.js'))\nrefractor.register(require('./lang/makefile.js'))\nrefractor.register(require('./lang/markdown.js'))\nrefractor.register(require('./lang/markup-templating.js'))\nrefractor.register(require('./lang/matlab.js'))\nrefractor.register(require('./lang/maxscript.js'))\nrefractor.register(require('./lang/mel.js'))\nrefractor.register(require('./lang/mermaid.js'))\nrefractor.register(require('./lang/mizar.js'))\nrefractor.register(require('./lang/mongodb.js'))\nrefractor.register(require('./lang/monkey.js'))\nrefractor.register(require('./lang/moonscript.js'))\nrefractor.register(require('./lang/n1ql.js'))\nrefractor.register(require('./lang/n4js.js'))\nrefractor.register(require('./lang/nand2tetris-hdl.js'))\nrefractor.register(require('./lang/naniscript.js'))\nrefractor.register(require('./lang/nasm.js'))\nrefractor.register(require('./lang/neon.js'))\nrefractor.register(require('./lang/nevod.js'))\nrefractor.register(require('./lang/nginx.js'))\nrefractor.register(require('./lang/nim.js'))\nrefractor.register(require('./lang/nix.js'))\nrefractor.register(require('./lang/nsis.js'))\nrefractor.register(require('./lang/objectivec.js'))\nrefractor.register(require('./lang/ocaml.js'))\nrefractor.register(require('./lang/opencl.js'))\nrefractor.register(require('./lang/openqasm.js'))\nrefractor.register(require('./lang/oz.js'))\nrefractor.register(require('./lang/parigp.js'))\nrefractor.register(require('./lang/parser.js'))\nrefractor.register(require('./lang/pascal.js'))\nrefractor.register(require('./lang/pascaligo.js'))\nrefractor.register(require('./lang/pcaxis.js'))\nrefractor.register(require('./lang/peoplecode.js'))\nrefractor.register(require('./lang/perl.js'))\nrefractor.register(require('./lang/php-extras.js'))\nrefractor.register(require('./lang/php.js'))\nrefractor.register(require('./lang/phpdoc.js'))\nrefractor.register(require('./lang/plsql.js'))\nrefractor.register(require('./lang/powerquery.js'))\nrefractor.register(require('./lang/powershell.js'))\nrefractor.register(require('./lang/processing.js'))\nrefractor.register(require('./lang/prolog.js'))\nrefractor.register(require('./lang/promql.js'))\nrefractor.register(require('./lang/properties.js'))\nrefractor.register(require('./lang/protobuf.js'))\nrefractor.register(require('./lang/psl.js'))\nrefractor.register(require('./lang/pug.js'))\nrefractor.register(require('./lang/puppet.js'))\nrefractor.register(require('./lang/pure.js'))\nrefractor.register(require('./lang/purebasic.js'))\nrefractor.register(require('./lang/purescript.js'))\nrefractor.register(require('./lang/python.js'))\nrefractor.register(require('./lang/q.js'))\nrefractor.register(require('./lang/qml.js'))\nrefractor.register(require('./lang/qore.js'))\nrefractor.register(require('./lang/qsharp.js'))\nrefractor.register(require('./lang/r.js'))\nrefractor.register(require('./lang/racket.js'))\nrefractor.register(require('./lang/reason.js'))\nrefractor.register(require('./lang/regex.js'))\nrefractor.register(require('./lang/rego.js'))\nrefractor.register(require('./lang/renpy.js'))\nrefractor.register(require('./lang/rest.js'))\nrefractor.register(require('./lang/rip.js'))\nrefractor.register(require('./lang/roboconf.js'))\nrefractor.register(require('./lang/robotframework.js'))\nrefractor.register(require('./lang/ruby.js'))\nrefractor.register(require('./lang/rust.js'))\nrefractor.register(require('./lang/sas.js'))\nrefractor.register(require('./lang/sass.js'))\nrefractor.register(require('./lang/scala.js'))\nrefractor.register(require('./lang/scheme.js'))\nrefractor.register(require('./lang/scss.js'))\nrefractor.register(require('./lang/shell-session.js'))\nrefractor.register(require('./lang/smali.js'))\nrefractor.register(require('./lang/smalltalk.js'))\nrefractor.register(require('./lang/smarty.js'))\nrefractor.register(require('./lang/sml.js'))\nrefractor.register(require('./lang/solidity.js'))\nrefractor.register(require('./lang/solution-file.js'))\nrefractor.register(require('./lang/soy.js'))\nrefractor.register(require('./lang/sparql.js'))\nrefractor.register(require('./lang/splunk-spl.js'))\nrefractor.register(require('./lang/sqf.js'))\nrefractor.register(require('./lang/sql.js'))\nrefractor.register(require('./lang/squirrel.js'))\nrefractor.register(require('./lang/stan.js'))\nrefractor.register(require('./lang/stylus.js'))\nrefractor.register(require('./lang/swift.js'))\nrefractor.register(require('./lang/systemd.js'))\nrefractor.register(require('./lang/t4-cs.js'))\nrefractor.register(require('./lang/t4-templating.js'))\nrefractor.register(require('./lang/t4-vb.js'))\nrefractor.register(require('./lang/tap.js'))\nrefractor.register(require('./lang/tcl.js'))\nrefractor.register(require('./lang/textile.js'))\nrefractor.register(require('./lang/toml.js'))\nrefractor.register(require('./lang/tremor.js'))\nrefractor.register(require('./lang/tsx.js'))\nrefractor.register(require('./lang/tt2.js'))\nrefractor.register(require('./lang/turtle.js'))\nrefractor.register(require('./lang/twig.js'))\nrefractor.register(require('./lang/typescript.js'))\nrefractor.register(require('./lang/typoscript.js'))\nrefractor.register(require('./lang/unrealscript.js'))\nrefractor.register(require('./lang/uorazor.js'))\nrefractor.register(require('./lang/uri.js'))\nrefractor.register(require('./lang/v.js'))\nrefractor.register(require('./lang/vala.js'))\nrefractor.register(require('./lang/vbnet.js'))\nrefractor.register(require('./lang/velocity.js'))\nrefractor.register(require('./lang/verilog.js'))\nrefractor.register(require('./lang/vhdl.js'))\nrefractor.register(require('./lang/vim.js'))\nrefractor.register(require('./lang/visual-basic.js'))\nrefractor.register(require('./lang/warpscript.js'))\nrefractor.register(require('./lang/wasm.js'))\nrefractor.register(require('./lang/web-idl.js'))\nrefractor.register(require('./lang/wiki.js'))\nrefractor.register(require('./lang/wolfram.js'))\nrefractor.register(require('./lang/wren.js'))\nrefractor.register(require('./lang/xeora.js'))\nrefractor.register(require('./lang/xml-doc.js'))\nrefractor.register(require('./lang/xojo.js'))\nrefractor.register(require('./lang/xquery.js'))\nrefractor.register(require('./lang/yaml.js'))\nrefractor.register(require('./lang/yang.js'))\nrefractor.register(require('./lang/zig.js'))\n","'use strict'\n\nmodule.exports = abap\nabap.displayName = 'abap'\nabap.aliases = []\nfunction abap(Prism) {\n  Prism.languages.abap = {\n    comment: /^\\*.*/m,\n    string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'string-template': {\n      pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    /* End Of Line comments should not interfere with strings when the\nquote character occurs within them. We assume a string being highlighted\ninside an EOL comment is more acceptable than the opposite.\n*/\n    'eol-comment': {\n      pattern: /(^|\\s)\".*/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    keyword: {\n      pattern:\n        /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n      lookbehind: true\n    },\n    /* Numbers can be only integers. Decimal or Hex appear only as strings */\n    number: /\\b\\d+\\b/,\n    /* Operators must always be surrounded by whitespace, they cannot be put\nadjacent to operands.\n*/\n    operator: {\n      pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n      lookbehind: true\n    },\n    'string-operator': {\n      pattern: /(\\s)&&?(?=\\s)/,\n      lookbehind: true,\n      /* The official editor highlights */\n      alias: 'keyword'\n    },\n    'token-operator': [\n      {\n        /* Special operators used to access structure components, class methods/attributes, etc. */\n        pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      {\n        /* Special tokens used do delimit string templates */\n        pattern: /[|{}]/,\n        alias: 'punctuation'\n      }\n    ],\n    punctuation: /[,.:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = abnf\nabnf.displayName = 'abnf'\nabnf.aliases = []\nfunction abnf(Prism) {\n  ;(function (Prism) {\n    var coreRules =\n      '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)'\n    Prism.languages.abnf = {\n      comment: /;.*/,\n      string: {\n        pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n        greedy: true,\n        inside: {\n          punctuation: /^%[is]/\n        }\n      },\n      range: {\n        pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n        alias: 'number'\n      },\n      terminal: {\n        pattern:\n          /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n        alias: 'number'\n      },\n      repetition: {\n        pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      definition: {\n        pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,\n        lookbehind: true,\n        alias: 'keyword',\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      'core-rule': {\n        pattern: RegExp(\n          '(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])',\n          'i'\n        ),\n        lookbehind: true,\n        alias: ['rule', 'constant'],\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      rule: {\n        pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      operator: /=\\/?|\\//,\n      punctuation: /[()\\[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = actionscript\nactionscript.displayName = 'actionscript'\nactionscript.aliases = []\nfunction actionscript(Prism) {\n  Prism.languages.actionscript = Prism.languages.extend('javascript', {\n    keyword:\n      /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\n    operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n  })\n  Prism.languages.actionscript['class-name'].alias = 'function' // doesn't work with AS because AS is too complex\n  delete Prism.languages.actionscript['parameter']\n  delete Prism.languages.actionscript['literal-property']\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('actionscript', 'string', {\n      xml: {\n        pattern:\n          /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      }\n    })\n  }\n}\n","'use strict'\n\nmodule.exports = ada\nada.displayName = 'ada'\nada.aliases = []\nfunction ada(Prism) {\n  Prism.languages.ada = {\n    comment: /--.*/,\n    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/,\n    number: [\n      {\n        pattern:\n          /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n      },\n      {\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n      }\n    ],\n    'attr-name': /\\b'\\w+/,\n    keyword:\n      /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n    punctuation: /\\.\\.?|[,;():]/,\n    char: /'.'/,\n    variable: /\\b[a-z](?:\\w)*\\b/i\n  }\n}\n","'use strict'\n\nmodule.exports = agda\nagda.displayName = 'agda'\nagda.aliases = []\nfunction agda(Prism) {\n  ;(function (Prism) {\n    Prism.languages.agda = {\n      comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      punctuation: /[(){}⦃⦄.;@]/,\n      'class-name': {\n        pattern: /((?:data|record) +)\\S+/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = al\nal.displayName = 'al'\nal.aliases = []\nfunction al(Prism) {\n  // based on https://github.com/microsoft/AL/blob/master/grammar/alsyntax.tmlanguage\n  Prism.languages.al = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    function: {\n      pattern:\n        /(\\b(?:event|procedure|trigger)\\s+|(?:^|[^.])\\.\\s*)[a-z_]\\w*(?=\\s*\\()/i,\n      lookbehind: true\n    },\n    keyword: [\n      // keywords\n      /\\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\\b/i, // objects and metadata that are used like keywords\n      /\\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\\b/i\n    ],\n    number:\n      /\\b(?:0x[\\da-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)(?:F|LL?|U(?:LL?)?)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    variable: /\\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\\b/,\n    'class-name':\n      /\\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\\b/i,\n    operator: /\\.\\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\\b(?:and|div|mod|not|or|xor)\\b/i,\n    punctuation: /[()\\[\\]{}:.;,]/\n  }\n}\n","'use strict'\n\nmodule.exports = antlr4\nantlr4.displayName = 'antlr4'\nantlr4.aliases = ['g4']\nfunction antlr4(Prism) {\n  Prism.languages.antlr4 = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    string: {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n      greedy: true\n    },\n    'character-class': {\n      pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\n      greedy: true,\n      alias: 'regex',\n      inside: {\n        range: {\n          pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\n          lookbehind: true,\n          alias: 'punctuation'\n        },\n        escape:\n          /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\n        punctuation: /[\\[\\]]/\n      }\n    },\n    action: {\n      pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\n      greedy: true,\n      inside: {\n        content: {\n          // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to\n          pattern: /(\\{)[\\s\\S]+(?=\\})/,\n          lookbehind: true\n        },\n        punctuation: /[{}]/\n      }\n    },\n    command: {\n      pattern:\n        /(->\\s*(?!\\s))(?:\\s*(?:,\\s*)?\\b[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\n      lookbehind: true,\n      inside: {\n        function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\n        punctuation: /[,()]/\n      }\n    },\n    annotation: {\n      pattern: /@\\w+(?:::\\w+)*/,\n      alias: 'keyword'\n    },\n    label: {\n      pattern: /#[ \\t]*\\w+/,\n      alias: 'punctuation'\n    },\n    keyword:\n      /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\n    definition: [\n      {\n        pattern: /\\b[a-z]\\w*(?=\\s*:)/,\n        alias: ['rule', 'class-name']\n      },\n      {\n        pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\n        alias: ['token', 'constant']\n      }\n    ],\n    constant: /\\b[A-Z][A-Z_]*\\b/,\n    operator: /\\.\\.|->|[|~]|[*+?]\\??/,\n    punctuation: /[;:()=]/\n  }\n  Prism.languages.g4 = Prism.languages.antlr4\n}\n","'use strict'\n\nmodule.exports = apacheconf\napacheconf.displayName = 'apacheconf'\napacheconf.aliases = []\nfunction apacheconf(Prism) {\n  Prism.languages.apacheconf = {\n    comment: /#.*/,\n    'directive-inline': {\n      pattern:\n        /(^[\\t ]*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n      lookbehind: true,\n      alias: 'property'\n    },\n    'directive-block': {\n      pattern:\n        /<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b.*>/i,\n      inside: {\n        'directive-block': {\n          pattern: /^<\\/?\\w+/,\n          inside: {\n            punctuation: /^<\\/?/\n          },\n          alias: 'tag'\n        },\n        'directive-block-parameter': {\n          pattern: /.*[^>]/,\n          inside: {\n            punctuation: /:/,\n            string: {\n              pattern: /(\"|').*\\1/,\n              inside: {\n                variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n              }\n            }\n          },\n          alias: 'attr-value'\n        },\n        punctuation: />/\n      },\n      alias: 'tag'\n    },\n    'directive-flags': {\n      pattern: /\\[(?:[\\w=],?)+\\]/,\n      alias: 'keyword'\n    },\n    string: {\n      pattern: /(\"|').*\\1/,\n      inside: {\n        variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n      }\n    },\n    variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n    regex: /\\^?.*\\$|\\^.*\\$?/\n  }\n}\n","'use strict'\nvar refractorSql = require('./sql.js')\nmodule.exports = apex\napex.displayName = 'apex'\napex.aliases = []\nfunction apex(Prism) {\n  Prism.register(refractorSql)\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i\n    var className =\n      /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(\n        /<keyword>/g,\n        function () {\n          return keywords.source\n        }\n      )\n    /** @param {string} pattern */\n    function insertClassName(pattern) {\n      return RegExp(\n        pattern.replace(/<CLASS-NAME>/g, function () {\n          return className\n        }),\n        'i'\n      )\n    }\n    var classNameInside = {\n      keyword: keywords,\n      punctuation: /[()\\[\\]{};,:.<>]/\n    }\n    Prism.languages.apex = {\n      comment: Prism.languages.clike.comment,\n      string: Prism.languages.clike.string,\n      sql: {\n        pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-sql',\n        inside: Prism.languages.sql\n      },\n      annotation: {\n        pattern: /@\\w+\\b/,\n        alias: 'punctuation'\n      },\n      'class-name': [\n        {\n          pattern: insertClassName(\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/\n              .source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // cast\n          pattern: insertClassName(\n            /(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // variable/parameter declaration and return types\n          pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\n          inside: classNameInside\n        }\n      ],\n      trigger: {\n        pattern: /(\\btrigger\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      keyword: keywords,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      boolean: /\\b(?:false|true)\\b/i,\n      number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\n      operator:\n        /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\n      punctuation: /[()\\[\\]{};,.]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = apl\napl.displayName = 'apl'\napl.aliases = []\nfunction apl(Prism) {\n  Prism.languages.apl = {\n    comment: /(?:⍝|#[! ]).*$/m,\n    string: {\n      pattern: /'(?:[^'\\r\\n]|'')*'/,\n      greedy: true\n    },\n    number:\n      /¯?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+)?|¯|∞))?/i,\n    statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n    'system-function': {\n      pattern: /⎕[A-Z]+/i,\n      alias: 'function'\n    },\n    constant: /[⍬⌾#⎕⍞]/,\n    function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n    'monadic-operator': {\n      pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n      alias: 'operator'\n    },\n    'dyadic-operator': {\n      pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,\n      alias: 'operator'\n    },\n    assignment: {\n      pattern: /←/,\n      alias: 'keyword'\n    },\n    punctuation: /[\\[;\\]()◇⋄]/,\n    dfn: {\n      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n      alias: 'builtin'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = applescript\napplescript.displayName = 'applescript'\napplescript.aliases = []\nfunction applescript(Prism) {\n  Prism.languages.applescript = {\n    comment: [\n      // Allow one level of nesting\n      /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n      /--.+/,\n      /#.+/\n    ],\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n    operator: [\n      /[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,\n      /\\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\\b/\n    ],\n    keyword:\n      /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n    'class-name':\n      /\\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\\b/,\n    punctuation: /[{}():,¬«»《》]/\n  }\n}\n","'use strict'\n\nmodule.exports = aql\naql.displayName = 'aql'\naql.aliases = []\nfunction aql(Prism) {\n  Prism.languages.aql = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    property: {\n      pattern:\n        /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /([´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    variable: /@@?\\w+/,\n    keyword: [\n      {\n        pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n        lookbehind: true\n      },\n      /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i, // pseudo keywords get a lookbehind to avoid false positives\n      {\n        pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n        lookbehind: true\n      },\n      {\n        pattern: /\\bOPTIONS(?=\\s*\\{)/i\n      }\n    ],\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    boolean: /\\b(?:false|true)\\b/i,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    number: [\n      /\\b0b[01]+/i,\n      /\\b0x[0-9a-f]+/i,\n      /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\n    ],\n    operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n    punctuation: /::|[?.:,;()[\\]{}]/\n  }\n}\n","'use strict'\nvar refractorCpp = require('./cpp.js')\nmodule.exports = arduino\narduino.displayName = 'arduino'\narduino.aliases = ['ino']\nfunction arduino(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.arduino = Prism.languages.extend('cpp', {\n    keyword:\n      /\\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\\b/,\n    constant:\n      /\\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\\b/,\n    builtin:\n      /\\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\\b/\n  })\n  Prism.languages.ino = Prism.languages.arduino\n}\n","'use strict'\n\nmodule.exports = arff\narff.displayName = 'arff'\narff.aliases = []\nfunction arff(Prism) {\n  Prism.languages.arff = {\n    comment: /%.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: /@(?:attribute|data|end|relation)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    punctuation: /[{},]/\n  }\n}\n","'use strict'\n\nmodule.exports = asciidoc\nasciidoc.displayName = 'asciidoc'\nasciidoc.aliases = ['adoc']\nfunction asciidoc(Prism) {\n  ;(function (Prism) {\n    var attributes = {\n      pattern:\n        /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n      lookbehind: true,\n      inside: {\n        quoted: {\n          pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          inside: {\n            punctuation: /^[$`]|[$`]$/\n          }\n        },\n        interpreted: {\n          pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n          inside: {\n            punctuation: /^'|'$/ // See rest below\n          }\n        },\n        string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        variable: /\\w+(?==)/,\n        punctuation: /^\\[|\\]$|,/,\n        operator: /=/,\n        // The negative look-ahead prevents blank matches\n        'attr-value': /(?!^\\s+$).+/\n      }\n    }\n    var asciidoc = (Prism.languages.asciidoc = {\n      'comment-block': {\n        pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n        alias: 'comment'\n      },\n      table: {\n        pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n        inside: {\n          specifiers: {\n            pattern:\n              /(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*](?:[<^>](?:\\.[<^>])?|\\.[<^>])?|[<^>](?:\\.[<^>])?|\\.[<^>])[a-z]*|[a-z]+)(?=\\|)/,\n            alias: 'attr-value'\n          },\n          punctuation: {\n            pattern: /(^|[^\\\\])[|!]=*/,\n            lookbehind: true\n          } // See rest below\n        }\n      },\n      'passthrough-block': {\n        pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^\\++|\\++$/ // See rest below\n        }\n      },\n      // Literal blocks and listing blocks\n      'literal-block': {\n        pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/ // See rest below\n        }\n      },\n      // Sidebar blocks, quote blocks, example blocks and open blocks\n      'other-block': {\n        pattern:\n          /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/ // See rest below\n        }\n      },\n      // list-punctuation and list-label must appear before indented-block\n      'list-punctuation': {\n        pattern:\n          /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'list-label': {\n        pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      'indented-block': {\n        pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n        lookbehind: true\n      },\n      comment: /^\\/\\/.*/m,\n      title: {\n        pattern:\n          /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n        alias: 'important',\n        inside: {\n          punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/ // See rest below\n        }\n      },\n      'attribute-entry': {\n        pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n        alias: 'tag'\n      },\n      attributes: attributes,\n      hr: {\n        pattern: /^'{3,}$/m,\n        alias: 'punctuation'\n      },\n      'page-break': {\n        pattern: /^<{3,}$/m,\n        alias: 'punctuation'\n      },\n      admonition: {\n        pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,\n        alias: 'keyword'\n      },\n      callout: [\n        {\n          pattern: /(^[ \\t]*)<?\\d*>/m,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        {\n          pattern: /<\\d+>/,\n          alias: 'symbol'\n        }\n      ],\n      macro: {\n        pattern:\n          /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n        inside: {\n          function: /^[a-z\\d-]+(?=:)/,\n          punctuation: /^::?/,\n          attributes: {\n            pattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n            inside: attributes.inside\n          }\n        }\n      },\n      inline: {\n        /*\nThe initial look-behind prevents the highlighting of escaped quoted text.\nQuoted text can be multi-line but cannot span an empty line.\nAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\nFirst, we handle the constrained quotes.\nThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\nThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\nThen we handle the unconstrained quotes.\nThose do not have the restrictions of the constrained quotes.\nThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n*/\n        pattern:\n          /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n        lookbehind: true,\n        inside: {\n          attributes: attributes,\n          url: {\n            pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n            inside: {\n              punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n            }\n          },\n          'attribute-ref': {\n            pattern: /^\\{.+\\}$/,\n            inside: {\n              variable: {\n                pattern: /(^\\{)[a-z\\d,+_-]+/,\n                lookbehind: true\n              },\n              operator: /^[=?!#%@$]|!(?=[:}])/,\n              punctuation: /^\\{|\\}$|::?/\n            }\n          },\n          italic: {\n            pattern: /^(['_])[\\s\\S]+\\1$/,\n            inside: {\n              punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n            }\n          },\n          bold: {\n            pattern: /^\\*[\\s\\S]+\\*$/,\n            inside: {\n              punctuation: /^\\*\\*?|\\*\\*?$/\n            }\n          },\n          punctuation:\n            /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n        }\n      },\n      replacement: {\n        pattern: /\\((?:C|R|TM)\\)/,\n        alias: 'builtin'\n      },\n      entity: /&#?[\\da-z]{1,8};/i,\n      'line-continuation': {\n        pattern: /(^| )\\+$/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    }) // Allow some nesting. There is no recursion though, so cloning should not be needed.\n    function copyFromAsciiDoc(keys) {\n      keys = keys.split(' ')\n      var o = {}\n      for (var i = 0, l = keys.length; i < l; i++) {\n        o[keys[i]] = asciidoc[keys[i]]\n      }\n      return o\n    }\n    attributes.inside['interpreted'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    )\n    asciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro')\n    asciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout')\n    asciidoc['table'].inside.rest = copyFromAsciiDoc(\n      'comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation'\n    )\n    asciidoc['other-block'].inside.rest = copyFromAsciiDoc(\n      'table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation'\n    )\n    asciidoc['title'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    ) // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type === 'entity') {\n        env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n      }\n    })\n    Prism.languages.adoc = Prism.languages.asciidoc\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = asm6502\nasm6502.displayName = 'asm6502'\nasm6502.aliases = []\nfunction asm6502(Prism) {\n  Prism.languages.asm6502 = {\n    comment: /;.*/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'property'\n    },\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'op-code': {\n      pattern:\n        /\\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\\b/,\n      alias: 'keyword'\n    },\n    'hex-number': {\n      pattern: /#?\\$[\\da-f]{1,4}\\b/i,\n      alias: 'number'\n    },\n    'binary-number': {\n      pattern: /#?%[01]+\\b/,\n      alias: 'number'\n    },\n    'decimal-number': {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'number'\n    },\n    register: {\n      pattern: /\\b[xya]\\b/i,\n      alias: 'variable'\n    },\n    punctuation: /[(),:]/\n  }\n}\n","'use strict'\n\nmodule.exports = asmatmel\nasmatmel.displayName = 'asmatmel'\nasmatmel.aliases = []\nfunction asmatmel(Prism) {\n  Prism.languages.asmatmel = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    constant: /\\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\\d|[0-2]\\d|3[01]))\\b/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'property'\n    },\n    'r-register': {\n      pattern: /\\br(?:\\d|[12]\\d|3[01])\\b/,\n      alias: 'variable'\n    },\n    'op-code': {\n      pattern:\n        /\\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\\b/,\n      alias: 'keyword'\n    },\n    'hex-number': {\n      pattern: /#?\\$[\\da-f]{2,4}\\b/i,\n      alias: 'number'\n    },\n    'binary-number': {\n      pattern: /#?%[01]+\\b/,\n      alias: 'number'\n    },\n    'decimal-number': {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'number'\n    },\n    register: {\n      pattern: /\\b[acznvshtixy]\\b/i,\n      alias: 'variable'\n    },\n    operator: />>=?|<<=?|&&?|\\|\\|?|[-+*/%&|^!=<>?]=?/,\n    punctuation: /[(),:]/\n  }\n}\n","'use strict'\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = aspnet\naspnet.displayName = 'aspnet'\naspnet.aliases = []\nfunction aspnet(Prism) {\n  Prism.register(refractorCsharp)\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\n    'page-directive': {\n      pattern: /<%\\s*@.*%>/,\n      alias: 'tag',\n      inside: {\n        'page-directive': {\n          pattern:\n            /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n          alias: 'tag'\n        },\n        rest: Prism.languages.markup.tag.inside\n      }\n    },\n    directive: {\n      pattern: /<%.*%>/,\n      alias: 'tag',\n      inside: {\n        directive: {\n          pattern: /<%\\s*?[$=%#:]{0,2}|%>/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.csharp\n      }\n    }\n  }) // Regexp copied from prism-markup, with a negative look-ahead added\n  Prism.languages.aspnet.tag.pattern =\n    /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/ // match directives of attribute value foo=\"<% Bar %>\"\n  Prism.languages.insertBefore(\n    'inside',\n    'punctuation',\n    {\n      directive: Prism.languages.aspnet['directive']\n    },\n    Prism.languages.aspnet.tag.inside['attr-value']\n  )\n  Prism.languages.insertBefore('aspnet', 'comment', {\n    'asp-comment': {\n      pattern: /<%--[\\s\\S]*?--%>/,\n      alias: ['asp', 'comment']\n    }\n  }) // script runat=\"server\" contains csharp, not javascript\n  Prism.languages.insertBefore(\n    'aspnet',\n    Prism.languages.javascript ? 'script' : 'tag',\n    {\n      'asp-script': {\n        pattern:\n          /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        alias: ['asp', 'script'],\n        inside: Prism.languages.csharp || {}\n      }\n    }\n  )\n}\n","'use strict'\n\nmodule.exports = autohotkey\nautohotkey.displayName = 'autohotkey'\nautohotkey.aliases = []\nfunction autohotkey(Prism) {\n  // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n  Prism.languages.autohotkey = {\n    comment: [\n      {\n        pattern: /(^|\\s);.*/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^[\\t ]*)\\/\\*(?:[\\r\\n](?![ \\t]*\\*\\/)|[^\\r\\n])*(?:[\\r\\n][ \\t]*\\*\\/)?/m,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    tag: {\n      // labels\n      pattern: /^([ \\t]*)[^\\s,`\":]+(?=:[ \\t]*$)/m,\n      lookbehind: true\n    },\n    string: /\"(?:[^\"\\n\\r]|\"\")*\"/,\n    variable: /%\\w+%/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator:\n      /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    selector:\n      /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n    constant:\n      /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\\b/i,\n    builtin:\n      /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\\b/i,\n    symbol:\n      /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n    important:\n      /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|DerefChar|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|If|IfTimeout|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InputLevel|InstallKeybdHook|InstallMouseHook|KeyHistory|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|MenuMaskKey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|Warn|WinActivateForce)\\b/i,\n    keyword:\n      /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i,\n    function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+(?=\\()/,\n    punctuation: /[{}[\\]():,]/\n  }\n}\n","'use strict'\n\nmodule.exports = autoit\nautoit.displayName = 'autoit'\nautoit.aliases = []\nfunction autoit(Prism) {\n  Prism.languages.autoit = {\n    comment: [\n      /;.*/,\n      {\n        // The multi-line comments delimiters can actually be commented out with \";\"\n        pattern:\n          /(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:ce|comments-end)/m,\n        lookbehind: true\n      }\n    ],\n    url: {\n      pattern: /(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        variable: /([%$@])\\w+\\1/\n      }\n    },\n    directive: {\n      pattern: /(^[\\t ]*)#[\\w-]+/m,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b\\w+(?=\\()/,\n    // Variables and macros\n    variable: /[$@]\\w+/,\n    keyword:\n      /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[\\[\\]().,:]/\n  }\n}\n","'use strict'\n\nmodule.exports = avisynth\navisynth.displayName = 'avisynth'\navisynth.aliases = ['avs']\nfunction avisynth(Prism) {\n  // http://avisynth.nl/index.php/The_full_AviSynth_grammar\n  ;(function (Prism) {\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return replacements[+index]\n      })\n    }\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    var types = /bool|clip|float|int|string|val/.source\n    var internals = [\n      // bools\n      /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/\n        .source, // control\n      /apply|assert|default|eval|import|nop|select|undefined/.source, // global\n      /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/\n        .source, // conv\n      /hex(?:value)?|value/.source, // numeric\n      /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/\n        .source, // trig\n      /a?sinh?|a?cosh?|a?tan[2h]?/.source, // bit\n      /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/\n        .source, // runtime\n      /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/\n        .source, // script\n      /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/\n        .source, // string\n      /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/\n        .source, // version\n      /isversionorgreater|version(?:number|string)/.source, // helper\n      /buildpixeltype|colorspacenametopixeltype/.source, // avsplus\n      /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source\n    ].join('|')\n    var properties = [\n      // content\n      /has(?:audio|video)/.source, // resolution\n      /height|width/.source, // framerate\n      /frame(?:count|rate)|framerate(?:denominator|numerator)/.source, // interlacing\n      /getparity|is(?:field|frame)based/.source, // color format\n      /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/\n        .source, // audio\n      /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/\n        .source\n    ].join('|')\n    var filters = [\n      // source\n      /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/\n        .source, // color\n      /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/\n        .source, // overlay\n      /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source, // geometry\n      /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/\n        .source, // pixel\n      /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/\n        .source, // timeline\n      /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/\n        .source, // interlace\n      /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/\n        .source, // audio\n      /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/\n        .source, // conditional\n      /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/\n        .source, // export\n      /imagewriter/.source, // debug\n      /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/\n        .source\n    ].join('|')\n    var allinternals = [internals, properties, filters].join('|')\n    Prism.languages.avisynth = {\n      comment: [\n        {\n          // Matches [* *] nestable block comments, but only supports 1 level of nested comments\n          // /\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|<self>)*\\*\\]/\n          pattern:\n            /(^|[^\\\\])\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\]))*\\*\\])*\\*\\]/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // Matches /* */ block comments\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // Matches # comments\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // Handle before strings because optional arguments are surrounded by double quotes\n      argument: {\n        pattern: re(/\\b(?:<<0>>)\\s+(\"?)\\w+\\1/.source, [types], 'i'),\n        inside: {\n          keyword: /^\\w+/\n        }\n      },\n      // Optional argument assignment\n      'argument-label': {\n        pattern: /([,(][\\s\\\\]*)\\w+\\s*=(?!=)/,\n        lookbehind: true,\n        inside: {\n          'argument-name': {\n            pattern: /^\\w+/,\n            alias: 'punctuation'\n          },\n          punctuation: /=$/\n        }\n      },\n      string: [\n        {\n          // triple double-quoted\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true\n        },\n        {\n          // single double-quoted\n          pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n          greedy: true,\n          inside: {\n            constant: {\n              // These *are* case-sensitive!\n              pattern:\n                /\\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\\b/\n            }\n          }\n        }\n      ],\n      // The special \"last\" variable that takes the value of the last implicitly returned clip\n      variable: /\\b(?:last)\\b/i,\n      boolean: /\\b(?:false|no|true|yes)\\b/i,\n      keyword:\n        /\\b(?:catch|else|for|function|global|if|return|try|while|__END__)\\b/i,\n      constant: /\\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\\b/,\n      // AviSynth's internal functions, filters, and properties\n      'builtin-function': {\n        pattern: re(/\\b(?:<<0>>)\\b/.source, [allinternals], 'i'),\n        alias: 'function'\n      },\n      'type-cast': {\n        pattern: re(/\\b(?:<<0>>)(?=\\s*\\()/.source, [types], 'i'),\n        alias: 'keyword'\n      },\n      // External/user-defined filters\n      function: {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()|(\\.)[a-z_]\\w*\\b/i,\n        lookbehind: true\n      },\n      // Matches a \\ as the first or last character on a line\n      'line-continuation': {\n        pattern: /(^[ \\t]*)\\\\|\\\\(?=[ \\t]*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      number:\n        /\\B\\$(?:[\\da-f]{6}|[\\da-f]{8})\\b|(?:(?:\\b|\\B-)\\d+(?:\\.\\d*)?\\b|\\B\\.\\d+\\b)/i,\n      operator: /\\+\\+?|[!=<>]=?|&&|\\|\\||[?:*/%-]/,\n      punctuation: /[{}\\[\\]();,.]/\n    }\n    Prism.languages.avs = Prism.languages.avisynth\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = avroIdl\navroIdl.displayName = 'avroIdl'\navroIdl.aliases = []\nfunction avroIdl(Prism) {\n  // GitHub: https://github.com/apache/avro\n  // Docs: https://avro.apache.org/docs/current/idl.html\n  Prism.languages['avro-idl'] = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    annotation: {\n      pattern: /@(?:[$\\w.-]|`[^\\r\\n`]+`)+/,\n      greedy: true,\n      alias: 'function'\n    },\n    'function-identifier': {\n      pattern: /`[^\\r\\n`]+`(?=\\s*\\()/,\n      greedy: true,\n      alias: 'function'\n    },\n    identifier: {\n      pattern: /`[^\\r\\n`]+`/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|error|protocol|record|throws)\\b\\s+)[$\\w]+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: [\n      {\n        pattern:\n          /(^|[^\\w.])-?(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|0x(?:[a-f0-9]+(?:\\.[a-f0-9]*)?|\\.[a-f0-9]+)(?:p[+-]?\\d+)?)[dfl]?(?![\\w.])/i,\n        lookbehind: true\n      },\n      /-?\\b(?:Infinity|NaN)\\b/\n    ],\n    operator: /=/,\n    punctuation: /[()\\[\\]{}<>.:,;-]/\n  }\n  Prism.languages.avdl = Prism.languages['avro-idl']\n}\n","'use strict'\n\nmodule.exports = bash\nbash.displayName = 'bash'\nbash.aliases = ['shell']\nfunction bash(Prism) {\n  ;(function (Prism) {\n    // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n    // + LC_ALL, RANDOM, REPLY, SECONDS.\n    // + make sure PS1..4 are here as they are not always set,\n    // - some useless things.\n    var envVars =\n      '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b'\n    var commandAfterHeredoc = {\n      pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n      lookbehind: true,\n      alias: 'punctuation',\n      // this looks reasonably well in all themes\n      inside: null // see below\n    }\n    var insideString = {\n      bash: commandAfterHeredoc,\n      environment: {\n        pattern: RegExp('\\\\$' + envVars),\n        alias: 'constant'\n      },\n      variable: [\n        // [0]: Arithmetic Environment\n        {\n          pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n          greedy: true,\n          inside: {\n            // If there is a $ sign at the beginning highlight $(( and )) as variable\n            variable: [\n              {\n                pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n                lookbehind: true\n              },\n              /^\\$\\(\\(/\n            ],\n            number:\n              /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n            // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n            operator:\n              /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n            // If there is no $ sign at the beginning highlight (( and )) as punctuation\n            punctuation: /\\(\\(?|\\)\\)?|,|;/\n          }\n        }, // [1]: Command Substitution\n        {\n          pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n          greedy: true,\n          inside: {\n            variable: /^\\$\\(|^`|\\)$|`$/\n          }\n        }, // [2]: Brace expansion\n        {\n          pattern: /\\$\\{[^}]+\\}/,\n          greedy: true,\n          inside: {\n            operator: /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n            punctuation: /[\\[\\]]/,\n            environment: {\n              pattern: RegExp('(\\\\{)' + envVars),\n              lookbehind: true,\n              alias: 'constant'\n            }\n          }\n        },\n        /\\$(?:\\w+|[#?*!@$])/\n      ],\n      // Escape sequences from echo and printf's manuals, and escaped quotes.\n      entity:\n        /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n    }\n    Prism.languages.bash = {\n      shebang: {\n        pattern: /^#!\\s*\\/.*/,\n        alias: 'important'\n      },\n      comment: {\n        pattern: /(^|[^\"{\\\\$])#.*/,\n        lookbehind: true\n      },\n      'function-name': [\n        // a) function foo {\n        // b) foo() {\n        // c) function foo() {\n        // but not “foo {”\n        {\n          // a) and c)\n          pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n          lookbehind: true,\n          alias: 'function'\n        },\n        {\n          // b)\n          pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n          alias: 'function'\n        }\n      ],\n      // Highlight variable names as variables in for and select beginnings.\n      'for-or-select': {\n        pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n        alias: 'variable',\n        lookbehind: true\n      },\n      // Highlight variable names as variables in the left-hand part\n      // of assignments (“=” and “+=”).\n      'assign-left': {\n        pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n        inside: {\n          environment: {\n            pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n            lookbehind: true,\n            alias: 'constant'\n          }\n        },\n        alias: 'variable',\n        lookbehind: true\n      },\n      string: [\n        // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        }, // Here-document with quotes around the tag\n        // → No expansion (so no “inside”).\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            bash: commandAfterHeredoc\n          }\n        }, // “Normal” string\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n          pattern:\n            /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n          pattern: /(^|[^$\\\\])'[^']*'/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n          pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n          greedy: true,\n          inside: {\n            entity: insideString.entity\n          }\n        }\n      ],\n      environment: {\n        pattern: RegExp('\\\\$?' + envVars),\n        alias: 'constant'\n      },\n      variable: insideString.variable,\n      function: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n      builtin: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n        lookbehind: true,\n        // Alias added to make those easier to distinguish from strings.\n        alias: 'class-name'\n      },\n      boolean: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      'file-descriptor': {\n        pattern: /\\B&\\d\\b/,\n        alias: 'important'\n      },\n      operator: {\n        // Lots of redirections here, but not just that.\n        pattern:\n          /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n        inside: {\n          'file-descriptor': {\n            pattern: /^\\d/,\n            alias: 'important'\n          }\n        }\n      },\n      punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n      number: {\n        pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n        lookbehind: true\n      }\n    }\n    commandAfterHeredoc.inside = Prism.languages.bash\n    /* Patterns in command substitution. */\n    var toBeCopied = [\n      'comment',\n      'function-name',\n      'for-or-select',\n      'assign-left',\n      'string',\n      'environment',\n      'function',\n      'keyword',\n      'builtin',\n      'boolean',\n      'file-descriptor',\n      'operator',\n      'punctuation',\n      'number'\n    ]\n    var inside = insideString.variable[1].inside\n    for (var i = 0; i < toBeCopied.length; i++) {\n      inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]]\n    }\n    Prism.languages.shell = Prism.languages.bash\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = basic\nbasic.displayName = 'basic'\nbasic.aliases = []\nfunction basic(Prism) {\n  Prism.languages.basic = {\n    comment: {\n      pattern: /(?:!|REM\\b).+/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n    punctuation: /[,;:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = batch\nbatch.displayName = 'batch'\nbatch.aliases = []\nfunction batch(Prism) {\n  ;(function (Prism) {\n    var variable = /%%?[~:\\w]+%?|!\\S+!/\n    var parameter = {\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n      alias: 'attr-name',\n      inside: {\n        punctuation: /:/\n      }\n    }\n    var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/\n    var number = /(?:\\b|-)\\d+\\b/\n    Prism.languages.batch = {\n      comment: [\n        /^::.*/m,\n        {\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true\n        }\n      ],\n      label: {\n        pattern: /^:.*/m,\n        alias: 'property'\n      },\n      command: [\n        {\n          // FOR command\n          pattern:\n            /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n          lookbehind: true,\n          inside: {\n            keyword: /\\b(?:do|in)\\b|^for\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // IF command\n          pattern:\n            /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n          lookbehind: true,\n          inside: {\n            keyword:\n              /\\b(?:cmdextversion|defined|errorlevel|exist|not)\\b|^if\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            operator: /\\^|==|\\b(?:equ|geq|gtr|leq|lss|neq)\\b/i\n          }\n        },\n        {\n          // ELSE command\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^else\\b/i\n          }\n        },\n        {\n          // SET command\n          pattern:\n            /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^set\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n            number: number,\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // Other commands\n          pattern:\n            /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\w+\\b/,\n            string: string,\n            parameter: parameter,\n            label: {\n              pattern: /(^\\s*):\\S+/m,\n              lookbehind: true,\n              alias: 'property'\n            },\n            variable: variable,\n            number: number,\n            operator: /\\^/\n          }\n        }\n      ],\n      operator: /[&@]/,\n      punctuation: /[()']/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = bbcode\nbbcode.displayName = 'bbcode'\nbbcode.aliases = ['shortcode']\nfunction bbcode(Prism) {\n  Prism.languages.bbcode = {\n    tag: {\n      pattern:\n        /\\[\\/?[^\\s=\\]]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))?(?:\\s+[^\\s=\\]]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))*\\s*\\]/,\n      inside: {\n        tag: {\n          pattern: /^\\[\\/?[^\\s=\\]]+/,\n          inside: {\n            punctuation: /^\\[\\/?/\n          }\n        },\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+)/,\n          inside: {\n            punctuation: [\n              /^=/,\n              {\n                pattern: /^(\\s*)[\"']|[\"']$/,\n                lookbehind: true\n              }\n            ]\n          }\n        },\n        punctuation: /\\]/,\n        'attr-name': /[^\\s=\\]]+/\n      }\n    }\n  }\n  Prism.languages.shortcode = Prism.languages.bbcode\n}\n","'use strict'\n\nmodule.exports = bicep\nbicep.displayName = 'bicep'\nbicep.aliases = []\nfunction bicep(Prism) {\n  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n  Prism.languages.bicep = {\n    comment: [\n      {\n        // multiline comments eg /* ASDF */\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        // singleline comments eg // ASDF\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    property: [\n      {\n        pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n        lookbehind: true\n      },\n      {\n        pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: /'''[^'][\\s\\S]*?'''/,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'interpolated-string': {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true\n            },\n            punctuation: /^\\$\\{|\\}$/\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    datatype: {\n      pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n    keyword:\n      /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n    decorator: /@\\w+\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.bicep\n}\n","'use strict'\n\nmodule.exports = birb\nbirb.displayName = 'birb'\nbirb.aliases = []\nfunction birb(Prism) {\n  Prism.languages.birb = Prism.languages.extend('clike', {\n    string: {\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    'class-name': [\n      /\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/, // matches variable and function return types (parameters as well).\n      /\\b(?:[A-Z]\\w*|(?!(?:var|void)\\b)[a-z]\\w*)(?=\\s+\\w+\\s*[;,=()])/\n    ],\n    keyword:\n      /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\\b/,\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\n    variable: /\\b[a-z_]\\w*\\b/\n  })\n  Prism.languages.insertBefore('birb', 'function', {\n    metadata: {\n      pattern: /<\\w+>/,\n      greedy: true,\n      alias: 'symbol'\n    }\n  })\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = bison\nbison.displayName = 'bison'\nbison.aliases = []\nfunction bison(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.bison = Prism.languages.extend('c', {})\n  Prism.languages.insertBefore('bison', 'comment', {\n    bison: {\n      // This should match all the beginning of the file\n      // including the prologue(s), the bison declarations and\n      // the grammar rules.\n      pattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\n      inside: {\n        c: {\n          // Allow for one level of nested braces\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^%?\\{|%?\\}$/,\n              alias: 'punctuation'\n            },\n            'bison-variable': {\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n              alias: 'variable',\n              inside: {\n                punctuation: /<|>/\n              }\n            },\n            rest: Prism.languages.c\n          }\n        },\n        comment: Prism.languages.c.comment,\n        string: Prism.languages.c.string,\n        property: /\\S+(?=:)/,\n        keyword: /%\\w+/,\n        number: {\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n          lookbehind: true\n        },\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = bnf\nbnf.displayName = 'bnf'\nbnf.aliases = ['rbnf']\nfunction bnf(Prism) {\n  Prism.languages.bnf = {\n    string: {\n      pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n    },\n    definition: {\n      pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n      alias: ['rule', 'keyword'],\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    rule: {\n      pattern: /<[^<>\\r\\n\\t]+>/,\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    operator: /::=|[|()[\\]{}*+?]|\\.{3}/\n  }\n  Prism.languages.rbnf = Prism.languages.bnf\n}\n","'use strict'\n\nmodule.exports = brainfuck\nbrainfuck.displayName = 'brainfuck'\nbrainfuck.aliases = []\nfunction brainfuck(Prism) {\n  Prism.languages.brainfuck = {\n    pointer: {\n      pattern: /<|>/,\n      alias: 'keyword'\n    },\n    increment: {\n      pattern: /\\+/,\n      alias: 'inserted'\n    },\n    decrement: {\n      pattern: /-/,\n      alias: 'deleted'\n    },\n    branching: {\n      pattern: /\\[|\\]/,\n      alias: 'important'\n    },\n    operator: /[.,]/,\n    comment: /\\S+/\n  }\n}\n","'use strict'\n\nmodule.exports = brightscript\nbrightscript.displayName = 'brightscript'\nbrightscript.aliases = []\nfunction brightscript(Prism) {\n  Prism.languages.brightscript = {\n    comment: /(?:\\brem|').*/i,\n    'directive-statement': {\n      pattern: /(^[\\t ]*)#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if).*/im,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        'error-message': {\n          pattern: /(^#error).+/,\n          lookbehind: true\n        },\n        directive: {\n          pattern: /^#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if)/,\n          alias: 'keyword'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    },\n    property: {\n      pattern:\n        /([\\r\\n{,][\\t ]*)(?:(?!\\d)\\w+|\"(?:[^\"\\r\\n]|\"\")*\"(?!\"))(?=[ \\t]*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\bAs[\\t ]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\b(?!\\d)\\w+(?=[\\t ]*\\()/,\n    number: /(?:\\b\\d+(?:\\.\\d+)?(?:[ed][+-]\\d+)?|&h[a-f\\d]+)\\b[%&!#]?/i,\n    operator:\n      /--|\\+\\+|>>=?|<<=?|<>|[-+*/\\\\<>]=?|[:^=?]|\\b(?:and|mod|not|or)\\b/i,\n    punctuation: /[.,;()[\\]{}]/,\n    constant: /\\b(?:LINE_NUM)\\b/i\n  }\n  Prism.languages.brightscript['directive-statement'].inside.expression.inside =\n    Prism.languages.brightscript\n}\n","'use strict'\n\nmodule.exports = bro\nbro.displayName = 'bro'\nbro.aliases = []\nfunction bro(Prism) {\n  Prism.languages.bro = {\n    comment: {\n      pattern: /(^|[^\\\\$])#.*/,\n      lookbehind: true,\n      inside: {\n        italic: /\\b(?:FIXME|TODO|XXX)\\b/\n      }\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    boolean: /\\b[TF]\\b/,\n    function: {\n      pattern: /(\\b(?:event|function|hook)[ \\t]+)\\w+(?:::\\w+)?/,\n      lookbehind: true\n    },\n    builtin:\n      /(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,\n    constant: {\n      pattern: /(\\bconst[ \\t]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\\b/,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = bsl\nbsl.displayName = 'bsl'\nbsl.aliases = []\nfunction bsl(Prism) {\n  /* eslint-disable no-misleading-character-class */\n  // 1C:Enterprise\n  // https://github.com/Diversus23/\n  //\n  Prism.languages.bsl = {\n    comment: /\\/\\/.*/,\n    string: [\n      // Строки\n      // Strings\n      {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      }, // Дата и время\n      // Date & time\n      {\n        pattern: /'(?:[^'\\r\\n\\\\]|\\\\.)*'/\n      }\n    ],\n    keyword: [\n      {\n        // RU\n        pattern:\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n        lookbehind: true\n      },\n      {\n        // EN\n        pattern:\n          /\\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\\b/i\n      }\n    ],\n    number: {\n      pattern:\n        /(^(?=\\d)|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:E[+-]?\\d+)?/i,\n      lookbehind: true\n    },\n    operator: [\n      /[<>+\\-*/]=?|[%=]/, // RU\n      {\n        pattern:\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:и|или|не)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n        lookbehind: true\n      }, // EN\n      {\n        pattern: /\\b(?:and|not|or)\\b/i\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/,\n    directive: [\n      // Теги препроцессора вида &Клиент, &Сервер, ...\n      // Preprocessor tags of the type &Client, &Server, ...\n      {\n        pattern: /^([ \\t]*)&.*/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'important'\n      }, // Инструкции препроцессора вида:\n      // #Если Сервер Тогда\n      // ...\n      // #КонецЕсли\n      // Preprocessor instructions of the form:\n      // #If Server Then\n      // ...\n      // #EndIf\n      {\n        pattern: /^([ \\t]*)#.*/gm,\n        lookbehind: true,\n        greedy: true,\n        alias: 'important'\n      }\n    ]\n  }\n  Prism.languages.oscript = Prism.languages['bsl']\n}\n","'use strict'\n\nmodule.exports = c\nc.displayName = 'c'\nc.aliases = []\nfunction c(Prism) {\n  Prism.languages.c = Prism.languages.extend('clike', {\n    comment: {\n      pattern:\n        /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    string: {\n      // https://en.cppreference.com/w/c/language/string_literal\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number:\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    char: {\n      // https://en.cppreference.com/w/c/language/character_constant\n      pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern:\n        /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        string: [\n          {\n            // highlight the path of the include statement as a string\n            pattern: /^(#\\s*include\\s*)<[^>]+>/,\n            lookbehind: true\n          },\n          Prism.languages.c['string']\n        ],\n        char: Prism.languages.c['char'],\n        comment: Prism.languages.c['comment'],\n        'macro-name': [\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n            lookbehind: true\n          },\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n            lookbehind: true,\n            alias: 'function'\n          }\n        ],\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /^(#\\s*)[a-z]+/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'directive-hash': /^#/,\n        punctuation: /##|\\\\(?=[\\r\\n])/,\n        expression: {\n          pattern: /\\S[\\s\\S]*/,\n          inside: Prism.languages.c\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('c', 'function', {\n    // highlight predefined macros as constants\n    constant:\n      /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n  })\n  delete Prism.languages.c['boolean']\n}\n","'use strict'\n\nmodule.exports = cfscript\ncfscript.displayName = 'cfscript'\ncfscript.aliases = []\nfunction cfscript(Prism) {\n  // https://cfdocs.org/script\n  Prism.languages.cfscript = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        inside: {\n          annotation: {\n            pattern: /(?:^|[^.])@[\\w\\.]+/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\n    operator: [\n      /\\+\\+|--|&&|\\|\\||::|=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|[?:]/,\n      /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/\n    ],\n    scope: {\n      pattern:\n        /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\n      alias: 'global'\n    },\n    type: {\n      pattern:\n        /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\n      alias: 'builtin'\n    }\n  })\n  Prism.languages.insertBefore('cfscript', 'keyword', {\n    // This must be declared before keyword because we use \"function\" inside the lookahead\n    'function-variable': {\n      pattern:\n        /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    }\n  })\n  delete Prism.languages.cfscript['class-name']\n  Prism.languages.cfc = Prism.languages['cfscript']\n}\n","'use strict'\nvar refractorCpp = require('./cpp.js')\nmodule.exports = chaiscript\nchaiscript.displayName = 'chaiscript'\nchaiscript.aliases = []\nfunction chaiscript(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.chaiscript = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': [\n      {\n        // e.g. class Rectangle { ... }\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      },\n      {\n        // e.g. attr Rectangle::height, def Rectangle::area() { ... }\n        pattern: /(\\b(?:attr|def)\\s+)\\w+(?=\\s*::)/,\n        lookbehind: true\n      }\n    ],\n    keyword:\n      /\\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\\b/,\n    number: [Prism.languages.cpp.number, /\\b(?:Infinity|NaN)\\b/],\n    operator:\n      />>=?|<<=?|\\|\\||&&|:[:=]?|--|\\+\\+|[=!<>+\\-*/%|&^]=?|[?~]|`[^`\\r\\n]{1,4}`/\n  })\n  Prism.languages.insertBefore('chaiscript', 'operator', {\n    'parameter-type': {\n      // e.g. def foo(int x, Vector y) {...}\n      pattern: /([,(]\\s*)\\w+(?=\\s+\\w)/,\n      lookbehind: true,\n      alias: 'class-name'\n    }\n  })\n  Prism.languages.insertBefore('chaiscript', 'string', {\n    'string-interpolation': {\n      pattern:\n        /(^|[^\\\\])\"(?:[^\"$\\\\]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-expression': {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              inside: Prism.languages.chaiscript\n            },\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = cil\ncil.displayName = 'cil'\ncil.aliases = []\nfunction cil(Prism) {\n  Prism.languages.cil = {\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    directive: {\n      pattern: /(^|\\W)\\.[a-z]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    // Actually an assembly reference\n    variable: /\\[[\\w\\.]+\\]/,\n    keyword:\n      /\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,\n    function:\n      /\\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.\\d+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.\\d+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|castclass|ldvirtftn|beq(?:\\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b-?(?:0x[0-9a-f]+|\\d+)(?:\\.[0-9a-f]+)?\\b/i,\n    punctuation: /[{}[\\];(),:=]|IL_[0-9A-Za-z]+/\n  }\n}\n","'use strict'\n\nmodule.exports = clike\nclike.displayName = 'clike'\nclike.aliases = []\nfunction clike(Prism) {\n  Prism.languages.clike = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword:\n      /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b\\w+(?=\\()/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = clojure\nclojure.displayName = 'clojure'\nclojure.aliases = []\nfunction clojure(Prism) {\n  // Copied from https://github.com/jeluard/prism-clojure\n  Prism.languages.clojure = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: true\n    },\n    char: /\\\\\\w+/,\n    symbol: {\n      pattern: /(^|[\\s()\\[\\]{},])::?[\\w*+!?'<>=/.-]+/,\n      lookbehind: true\n    },\n    keyword: {\n      pattern:\n        /(\\()(?:-|->|->>|\\.|\\.\\.|\\*|\\/|\\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|nil|true)\\b/,\n    number: {\n      pattern:\n        /(^|[^\\w$@])(?:\\d+(?:[/.]\\d+)?(?:e[+-]?\\d+)?|0x[a-f0-9]+|[1-9]\\d?r[a-z0-9]+)[lmn]?(?![\\w$@])/i,\n      lookbehind: true\n    },\n    function: {\n      pattern: /((?:^|[^'])\\()[\\w*+!?'<>=/.-]+(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    operator: /[#@^`~]/,\n    punctuation: /[{}\\[\\](),]/\n  }\n}\n","'use strict'\n\nmodule.exports = cmake\ncmake.displayName = 'cmake'\ncmake.aliases = []\nfunction cmake(Prism) {\n  Prism.languages.cmake = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{(?:[^{}$]|\\$\\{[^{}$]*\\})*\\}/,\n          inside: {\n            punctuation: /\\$\\{|\\}/,\n            variable: /\\w+/\n          }\n        }\n      }\n    },\n    variable:\n      /\\b(?:CMAKE_\\w+|\\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\\b/,\n    property:\n      /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\n    keyword:\n      /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\n    boolean: /\\b(?:FALSE|OFF|ON|TRUE)\\b/,\n    namespace:\n      /\\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\\b/,\n    operator:\n      /\\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\\b/,\n    inserted: {\n      pattern: /\\b\\w+::\\w+\\b/,\n      alias: 'class-name'\n    },\n    number: /\\b\\d+(?:\\.\\d+)*\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\n    punctuation: /[()>}]|\\$[<{]/\n  }\n}\n","'use strict'\n\nmodule.exports = cobol\ncobol.displayName = 'cobol'\ncobol.aliases = []\nfunction cobol(Prism) {\n  Prism.languages.cobol = {\n    comment: {\n      pattern: /\\*>.*|(^[ \\t]*)\\*.*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /[xzgn]?(?:\"(?:[^\\r\\n\"]|\"\")*\"(?!\")|'(?:[^\\r\\n']|'')*'(?!'))/i,\n      greedy: true\n    },\n    level: {\n      pattern: /(^[ \\t]*)\\d+\\b/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'number'\n    },\n    'class-name': {\n      // https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015\n      pattern:\n        /(\\bpic(?:ture)?\\s+)(?:(?:[-\\w$/,:*+<>]|\\.(?!\\s|$))(?:\\(\\d+\\))?)+/i,\n      lookbehind: true,\n      inside: {\n        number: {\n          pattern: /(\\()\\d+/,\n          lookbehind: true\n        },\n        punctuation: /[()]/\n      }\n    },\n    keyword: {\n      pattern:\n        /(^|[^\\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\\w-])/i,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[^\\w-])(?:false|true)(?![\\w-])/i,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^\\w-])(?:[+-]?(?:(?:\\d+(?:[.,]\\d+)?|[.,]\\d+)(?:e[+-]?\\d+)?|zero))(?![\\w-])/i,\n      lookbehind: true\n    },\n    operator: [\n      /<>|[<>]=?|[=+*/&]/,\n      {\n        pattern: /(^|[^\\w-])(?:-|and|equal|greater|less|not|or|than)(?![\\w-])/i,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[.:,()]/\n  }\n}\n","'use strict'\n\nmodule.exports = coffeescript\ncoffeescript.displayName = 'coffeescript'\ncoffeescript.aliases = ['coffee']\nfunction coffeescript(Prism) {\n  ;(function (Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      alias: 'variable'\n    }\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        },\n        {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ],\n      keyword:\n        /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          script: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-javascript',\n            inside: Prism.languages.javascript\n          }\n        }\n      },\n      // Block strings\n      'multiline-string': [\n        {\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        },\n        {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ]\n    })\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    })\n    delete Prism.languages.coffeescript['template-string']\n    Prism.languages.coffee = Prism.languages.coffeescript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = concurnas\nconcurnas.displayName = 'concurnas'\nconcurnas.aliases = ['conc']\nfunction concurnas(Prism) {\n  Prism.languages.concurnas = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    langext: {\n      pattern: /\\b\\w+\\s*\\|\\|[\\s\\S]+?\\|\\|/,\n      greedy: true,\n      inside: {\n        'class-name': /^\\w+/,\n        string: {\n          pattern: /(^\\s*\\|\\|)[\\s\\S]+(?=\\|\\|$)/,\n          lookbehind: true\n        },\n        punctuation: /\\|\\|/\n      }\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /\\b0b[01][01_]*L?\\b|\\b0x(?:[\\da-f_]*\\.)?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfls]?/i,\n    punctuation: /[{}[\\];(),.:]/,\n    operator:\n      /<==|>==|=>|->|<-|<>|&==|&<>|\\?:?|\\.\\?|\\+\\+|--|[-+*/=<>]=?|[!^~]|\\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\\b=?/,\n    annotation: {\n      pattern: /@(?:\\w+:)?(?:\\w+|\\[[^\\]]+\\])?/,\n      alias: 'builtin'\n    }\n  }\n  Prism.languages.insertBefore('concurnas', 'langext', {\n    'regex-literal': {\n      pattern: /\\br(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        regex: /[\\s\\S]+/\n      }\n    },\n    'string-literal': {\n      pattern: /(?:\\B|\\bs)(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.conc = Prism.languages.concurnas\n}\n","'use strict'\n\nmodule.exports = coq\ncoq.displayName = 'coq'\ncoq.aliases = []\nfunction coq(Prism) {\n  ;(function (Prism) {\n    // https://github.com/coq/coq\n    var commentSource = /\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source\n    for (var i = 0; i < 2; i++) {\n      commentSource = commentSource.replace(/<self>/g, function () {\n        return commentSource\n      })\n    }\n    commentSource = commentSource.replace(/<self>/g, '[]')\n    Prism.languages.coq = {\n      comment: RegExp(commentSource),\n      string: {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      },\n      attribute: [\n        {\n          pattern: RegExp(\n            /#\\[(?:[^\\[\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(\n              /<comment>/g,\n              function () {\n                return commentSource\n              }\n            )\n          ),\n          greedy: true,\n          alias: 'attr-name',\n          inside: {\n            comment: RegExp(commentSource),\n            string: {\n              pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n              greedy: true\n            },\n            operator: /=/,\n            punctuation: /^#\\[|\\]$|[,()]/\n          }\n        },\n        {\n          pattern:\n            /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\n          alias: 'attr-name'\n        }\n      ],\n      keyword:\n        /\\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\\b/,\n      number:\n        /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\n      punct: {\n        pattern: /@\\{|\\{\\||\\[=|:>/,\n        alias: 'punctuation'\n      },\n      operator:\n        /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\n      punctuation: /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = cpp\ncpp.displayName = 'cpp'\ncpp.aliases = []\nfunction cpp(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    var keyword =\n      /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/\n    var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(\n      /<keyword>/g,\n      function () {\n        return keyword.source\n      }\n    )\n    Prism.languages.cpp = Prism.languages.extend('c', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(\n              /<keyword>/g,\n              function () {\n                return keyword.source\n              }\n            )\n          ),\n          lookbehind: true\n        }, // This is intended to capture the class name of method implementations like:\n        //   void foo::bar() const {}\n        // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n        // it starts with an uppercase letter. This approximation should give decent results.\n        /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n        //   Foo::~Foo() {}\n        /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n        // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n        /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n      ],\n      keyword: keyword,\n      number: {\n        pattern:\n          /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n        greedy: true\n      },\n      operator:\n        />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n      boolean: /\\b(?:false|true)\\b/\n    })\n    Prism.languages.insertBefore('cpp', 'string', {\n      module: {\n        // https://en.cppreference.com/w/cpp/language/modules\n        pattern: RegExp(\n          /(\\b(?:import|module)\\s+)/.source +\n            '(?:' + // header-name\n            /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\n            '|' + // module name or partition or both\n            /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(\n              /<mod-name>/g,\n              function () {\n                return modName\n              }\n            ) +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: /^[<\"][\\s\\S]+/,\n          operator: /:/,\n          punctuation: /\\./\n        }\n      },\n      'raw-string': {\n        pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n        alias: 'string',\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'keyword', {\n      'generic-function': {\n        pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            alias: 'class-name',\n            inside: Prism.languages.cpp\n          }\n        }\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'class-name', {\n      // the base clause is an optional list of parent classes\n      // https://en.cppreference.com/w/cpp/language/class\n      'base-clause': {\n        pattern:\n          /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: Prism.languages.extend('cpp', {})\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'double-colon',\n      {\n        // All untokenized words that are not namespaces should be class names\n        'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n      },\n      Prism.languages.cpp['base-clause']\n    )\n  })(Prism)\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = crystal\ncrystal.displayName = 'crystal'\ncrystal.aliases = []\nfunction crystal(Prism) {\n  Prism.register(refractorRuby)\n  ;(function (Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [\n        /\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/,\n        {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,\n      operator: [/->/, Prism.languages.ruby.operator],\n      punctuation: /[(){}[\\].,;\\\\]/\n    })\n    Prism.languages.insertBefore('crystal', 'string-literal', {\n      attribute: {\n        pattern: /@\\[.*?\\]/,\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          attribute: {\n            pattern: /^(\\s*)\\w+/,\n            lookbehind: true,\n            alias: 'class-name'\n          },\n          args: {\n            pattern: /\\S(?:[\\s\\S]*\\S)?/,\n            inside: Prism.languages.crystal\n          }\n        }\n      },\n      expansion: {\n        pattern: /\\{(?:\\{.*?\\}|%.*?%)\\}/,\n        inside: {\n          content: {\n            pattern: /^(\\{.)[\\s\\S]+(?=.\\}$)/,\n            lookbehind: true,\n            inside: Prism.languages.crystal\n          },\n          delimiter: {\n            pattern: /^\\{[\\{%]|[\\}%]\\}$/,\n            alias: 'operator'\n          }\n        }\n      },\n      char: {\n        pattern:\n          /'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csharp\ncsharp.displayName = 'csharp'\ncsharp.aliases = ['dotnet', 'cs']\nfunction csharp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    } // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n      // keywords which are used to declare a type\n      typeDeclaration: 'class enum interface record struct',\n      // contextual keywords\n      // (\"var\" and \"dynamic\" are missing because they are used like types)\n      contextual:\n        'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\n      // all other keywords\n      other:\n        'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n    } // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var typeDeclarationKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration\n    )\n    var keywords = RegExp(\n      keywordsToPattern(\n        keywordKinds.type +\n          ' ' +\n          keywordKinds.typeDeclaration +\n          ' ' +\n          keywordKinds.contextual +\n          ' ' +\n          keywordKinds.other\n      )\n    )\n    var nonTypeKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.contextual +\n        ' ' +\n        keywordKinds.other\n    )\n    var nonContextualKeywords = keywordsToPattern(\n      keywordKinds.type +\n        ' ' +\n        keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.other\n    ) // types\n    var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2) // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n    var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2)\n    var name = /@?\\b[A-Za-z_]\\w*\\b/.source\n    var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic])\n    var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\n      nonTypeKeywords,\n      genericName\n    ])\n    var array = /\\[\\s*(?:,\\s*)*\\]/.source\n    var typeExpressionWithoutTuple = replace(\n      /<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source,\n      [identifier, array]\n    )\n    var tupleElement = replace(\n      /[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,\n      [generic, nestedRound, array]\n    )\n    var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement])\n    var typeExpression = replace(\n      /(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source,\n      [tuple, identifier, array]\n    )\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    } // strings & characters\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n    var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source // simplified pattern\n    var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source\n    var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source\n    Prism.languages.csharp = Prism.languages.extend('clike', {\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // Using static\n          // using static System.Math;\n          pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [\n            identifier\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (type)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\n            name,\n            typeExpression\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (alias)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Type declarations\n          // class Foo<A, B>\n          // interface Foo<out A, B>\n          pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\n            typeDeclarationKeywords,\n            genericName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Single catch exception declaration\n          // catch(Foo)\n          // (things like catch(Foo e) is covered by variable declaration)\n          pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Name of the type parameter of generic constraints\n          // where Foo : class\n          pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Casts and checks via as and is.\n          // as Foo<A>, is Bar<B>\n          // (things like if(a is Foo b) is covered by variable declaration)\n          pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [\n            typeExpressionWithoutTuple\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Variable, field and parameter declaration\n          // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n          pattern: re(\n            /\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/\n              .source,\n            [typeExpression, nonContextualKeywords, name]\n          ),\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n      number:\n        /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\n      operator: />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n      punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('csharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'punctuation', {\n      'named-parameter': {\n        pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      namespace: {\n        // namespace Foo.Bar {}\n        // using Foo.Bar;\n        pattern: re(\n          /(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source,\n          [name]\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      'type-expression': {\n        // default(Foo), typeof(Foo<Bar>), sizeof(int)\n        pattern: re(\n          /(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/\n            .source,\n          [nestedRound]\n        ),\n        lookbehind: true,\n        alias: 'class-name',\n        inside: typeInside\n      },\n      'return-type': {\n        // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n        // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n        // int Foo => 0; int Foo { get; set } = 0;\n        pattern: re(\n          /<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source,\n          [typeExpression, identifier]\n        ),\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      'constructor-invocation': {\n        // new List<Foo<Bar[]>> { }\n        pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n        lookbehind: true,\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      /*'explicit-implementation': {\n// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\npattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\ninside: classNameInside,\nalias: 'class-name'\n},*/\n      'generic-method': {\n        // foo<Bar>()\n        pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\n        inside: {\n          function: re(/^<<0>>/.source, [name]),\n          generic: {\n            pattern: RegExp(generic),\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      },\n      'type-list': {\n        // The list of types inherited or of generic constraints\n        // class Foo<F> : Bar, IList<FooBar>\n        // where F : Bar, IList<int>\n        pattern: re(\n          /\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/\n            .source,\n          [\n            typeDeclarationKeywords,\n            genericName,\n            name,\n            typeExpression,\n            keywords.source,\n            nestedRound,\n            /\\bnew\\s*\\(\\s*\\)/.source\n          ]\n        ),\n        lookbehind: true,\n        inside: {\n          'record-arguments': {\n            pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [\n              genericName,\n              nestedRound\n            ]),\n            lookbehind: true,\n            greedy: true,\n            inside: Prism.languages.csharp\n          },\n          keyword: keywords,\n          'class-name': {\n            pattern: RegExp(typeExpression),\n            greedy: true,\n            inside: typeInside\n          },\n          punctuation: /[,()]/\n        }\n      },\n      preprocessor: {\n        pattern: /(^[\\t ]*)#.*/m,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight preprocessor directives as keywords\n          directive: {\n            pattern:\n              /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    }) // attributes\n    var regularStringOrCharacter = regularString + '|' + character\n    var regularStringCharacterOrComment = replace(\n      /\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source,\n      [regularStringOrCharacter]\n    )\n    var roundExpression = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    ) // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n    var attrTarget =\n      /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/\n        .source\n    var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\n      identifier,\n      roundExpression\n    ])\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      attribute: {\n        // Attributes\n        // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n        pattern: re(\n          /((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/\n            .source,\n          [attrTarget, attr]\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          target: {\n            pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n            alias: 'keyword'\n          },\n          'attribute-arguments': {\n            pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n            inside: Prism.languages.csharp\n          },\n          'class-name': {\n            pattern: RegExp(identifier),\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          punctuation: /[:,]/\n        }\n      }\n    }) // string interpolation\n    var formatString = /:[^}\\r\\n]+/.source // multi line\n    var mInterpolationRound = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    )\n    var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      mInterpolationRound,\n      formatString\n    ]) // single line\n    var sInterpolationRound = nested(\n      replace(\n        /[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/\n          .source,\n        [regularStringOrCharacter]\n      ),\n      2\n    )\n    var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      sInterpolationRound,\n      formatString\n    ])\n    function createInterpolationInside(interpolation, interpolationRound) {\n      return {\n        interpolation: {\n          pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n          lookbehind: true,\n          inside: {\n            'format-string': {\n              pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\n                interpolationRound,\n                formatString\n              ]),\n              lookbehind: true,\n              inside: {\n                punctuation: /^:/\n              }\n            },\n            punctuation: /^\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              alias: 'language-csharp',\n              inside: Prism.languages.csharp\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.insertBefore('csharp', 'string', {\n      'interpolation-string': [\n        {\n          pattern: re(\n            /(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source,\n            [mInterpolation]\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n        },\n        {\n          pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [\n            sInterpolation\n          ]),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n        }\n      ],\n      char: {\n        pattern: RegExp(character),\n        greedy: true\n      }\n    })\n    Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp\n  })(Prism)\n}\n","'use strict'\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = cshtml\ncshtml.displayName = 'cshtml'\ncshtml.aliases = ['razor']\nfunction cshtml(Prism) {\n  Prism.register(refractorCsharp)\n  // Docs:\n  // https://docs.microsoft.com/en-us/aspnet/core/razor-pages/?view=aspnetcore-5.0&tabs=visual-studio\n  // https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-5.0\n  ;(function (Prism) {\n    var commentLike = /\\/(?![/*])|\\/\\/.*[\\r\\n]|\\/\\*[^*]*(?:\\*(?!\\/)[^*]*)*\\*\\//\n      .source\n    var stringLike =\n      /@(?!\")|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|@\"(?:[^\\\\\"]|\"\"|\\\\[\\s\\S])*\"(?!\")/.source +\n      '|' +\n      /'(?:(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'|(?=[^\\\\](?!')))/.source\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<self>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern\n        .replace(/<self>/g, '[^\\\\s\\\\S]')\n        .replace(/<str>/g, '(?:' + stringLike + ')')\n        .replace(/<comment>/g, '(?:' + commentLike + ')')\n    }\n    var round = nested(/\\((?:[^()'\"@/]|<str>|<comment>|<self>)*\\)/.source, 2)\n    var square = nested(/\\[(?:[^\\[\\]'\"@/]|<str>|<comment>|<self>)*\\]/.source, 2)\n    var curly = nested(/\\{(?:[^{}'\"@/]|<str>|<comment>|<self>)*\\}/.source, 2)\n    var angle = nested(/<(?:[^<>'\"@/]|<str>|<comment>|<self>)*>/.source, 2) // Note about the above bracket patterns:\n    // They all ignore HTML expressions that might be in the C# code. This is a problem because HTML (like strings and\n    // comments) is parsed differently. This is a huge problem because HTML might contain brackets and quotes which\n    // messes up the bracket and string counting implemented by the above patterns.\n    //\n    // This problem is not fixable because 1) HTML expression are highly context sensitive and very difficult to detect\n    // and 2) they require one capturing group at every nested level. See the `tagRegion` pattern to admire the\n    // complexity of an HTML expression.\n    //\n    // To somewhat alleviate the problem a bit, the patterns for characters (e.g. 'a') is very permissive, it also\n    // allows invalid characters to support HTML expressions like this: <p>That's it!</p>.\n    var tagAttrs =\n      /(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?/\n        .source\n    var tagContent = /(?!\\d)[^\\s>\\/=$<%]+/.source + tagAttrs + /\\s*\\/?>/.source\n    var tagRegion =\n      /\\B@?/.source +\n      '(?:' +\n      /<([a-zA-Z][\\w:]*)/.source +\n      tagAttrs +\n      /\\s*>/.source +\n      '(?:' +\n      (/[^<]/.source +\n        '|' + // all tags that are not the start tag\n        // eslint-disable-next-line regexp/strict\n        /<\\/?(?!\\1\\b)/.source +\n        tagContent +\n        '|' + // nested start tag\n        nested(\n          // eslint-disable-next-line regexp/strict\n          /<\\1/.source +\n            tagAttrs +\n            /\\s*>/.source +\n            '(?:' +\n            (/[^<]/.source +\n              '|' + // all tags that are not the start tag\n              // eslint-disable-next-line regexp/strict\n              /<\\/?(?!\\1\\b)/.source +\n              tagContent +\n              '|' +\n              '<self>') +\n            ')*' + // eslint-disable-next-line regexp/strict\n            /<\\/\\1\\s*>/.source,\n          2\n        )) +\n      ')*' + // eslint-disable-next-line regexp/strict\n      /<\\/\\1\\s*>/.source +\n      '|' +\n      /</.source +\n      tagContent +\n      ')' // Now for the actual language definition(s):\n    //\n    // Razor as a language has 2 parts:\n    //  1) CSHTML: A markup-like language that has been extended with inline C# code expressions and blocks.\n    //  2) C#+HTML: A variant of C# that can contain CSHTML tags as expressions.\n    //\n    // In the below code, both CSHTML and C#+HTML will be create as separate language definitions that reference each\n    // other. However, only CSHTML will be exported via `Prism.languages`.\n    Prism.languages.cshtml = Prism.languages.extend('markup', {})\n    var csharpWithHtml = Prism.languages.insertBefore(\n      'csharp',\n      'string',\n      {\n        html: {\n          pattern: RegExp(tagRegion),\n          greedy: true,\n          inside: Prism.languages.cshtml\n        }\n      },\n      {\n        csharp: Prism.languages.extend('csharp', {})\n      }\n    )\n    var cs = {\n      pattern: /\\S[\\s\\S]*/,\n      alias: 'language-csharp',\n      inside: csharpWithHtml\n    }\n    Prism.languages.insertBefore('cshtml', 'prolog', {\n      'razor-comment': {\n        pattern: /@\\*[\\s\\S]*?\\*@/,\n        greedy: true,\n        alias: 'comment'\n      },\n      block: {\n        pattern: RegExp(\n          /(^|[^@])@/.source +\n            '(?:' +\n            [\n              // @{ ... }\n              curly, // @code{ ... }\n              /(?:code|functions)\\s*/.source + curly, // @for (...) { ... }\n              /(?:for|foreach|lock|switch|using|while)\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly, // @do { ... } while (...);\n              /do\\s*/.source +\n                curly +\n                /\\s*while\\s*/.source +\n                round +\n                /(?:\\s*;)?/.source, // @try { ... } catch (...) { ... } finally { ... }\n              /try\\s*/.source +\n                curly +\n                /\\s*catch\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                /\\s*finally\\s*/.source +\n                curly, // @if (...) {...} else if (...) {...} else {...}\n              /if\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                '(?:' +\n                /\\s*else/.source +\n                '(?:' +\n                /\\s+if\\s*/.source +\n                round +\n                ')?' +\n                /\\s*/.source +\n                curly +\n                ')*'\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w*/,\n          csharp: cs\n        }\n      },\n      directive: {\n        pattern:\n          /^([ \\t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\\s).*/m,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w+/,\n          csharp: cs\n        }\n      },\n      value: {\n        pattern: RegExp(\n          /(^|[^@])@/.source +\n            /(?:await\\b\\s*)?/.source +\n            '(?:' +\n            /\\w+\\b/.source +\n            '|' +\n            round +\n            ')' +\n            '(?:' +\n            /[?!]?\\.\\w+\\b/.source +\n            '|' +\n            round +\n            '|' +\n            square +\n            '|' +\n            angle +\n            round +\n            ')*'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'variable',\n        inside: {\n          keyword: /^@/,\n          csharp: cs\n        }\n      },\n      'delegate-operator': {\n        pattern: /(^|[^@])@(?=<)/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.razor = Prism.languages.cshtml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csp\ncsp.displayName = 'csp'\ncsp.aliases = []\nfunction csp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n   *\n   * Supports the following:\n   *  - https://www.w3.org/TR/CSP1/\n   *  - https://www.w3.org/TR/CSP2/\n   *  - https://www.w3.org/TR/CSP3/\n   */\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @returns {RegExp}\n     */\n    function value(source) {\n      return RegExp(\n        /([ \\t])/.source + '(?:' + source + ')' + /(?=[\\s;]|$)/.source,\n        'i'\n      )\n    }\n    Prism.languages.csp = {\n      directive: {\n        pattern:\n          /(^|[\\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\\s;]|$)/i,\n        lookbehind: true,\n        alias: 'property'\n      },\n      scheme: {\n        pattern: value(/[a-z][a-z0-9.+-]*:/.source),\n        lookbehind: true\n      },\n      none: {\n        pattern: value(/'none'/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      nonce: {\n        pattern: value(/'nonce-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      hash: {\n        pattern: value(/'sha(?:256|384|512)-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      host: {\n        pattern: value(\n          /[a-z][a-z0-9.+-]*:\\/\\/[^\\s;,']*/.source +\n            '|' +\n            /\\*[^\\s;,']*/.source +\n            '|' +\n            /[a-z0-9-]+(?:\\.[a-z0-9-]+)+(?::[\\d*]+)?(?:\\/[^\\s;,']*)?/.source\n        ),\n        lookbehind: true,\n        alias: 'url',\n        inside: {\n          important: /\\*/\n        }\n      },\n      keyword: [\n        {\n          pattern: value(/'unsafe-[a-z-]+'/.source),\n          lookbehind: true,\n          alias: 'unsafe'\n        },\n        {\n          pattern: value(/'[a-z-]+'/.source),\n          lookbehind: true,\n          alias: 'safe'\n        }\n      ],\n      punctuation: /;/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = cssExtras\ncssExtras.displayName = 'cssExtras'\ncssExtras.aliases = []\nfunction cssExtras(Prism) {\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var selectorInside\n    Prism.languages.css.selector = {\n      pattern: Prism.languages.css.selector.pattern,\n      lookbehind: true,\n      inside: (selectorInside = {\n        'pseudo-element':\n          /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+/,\n        class: /\\.[-\\w]+/,\n        id: /#[-\\w]+/,\n        attribute: {\n          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n          greedy: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            'case-sensitivity': {\n              pattern: /(\\s)[si]$/i,\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            namespace: {\n              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n              lookbehind: true,\n              inside: {\n                punctuation: /\\|$/\n              }\n            },\n            'attr-name': {\n              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n              lookbehind: true\n            },\n            'attr-value': [\n              string,\n              {\n                pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n                lookbehind: true\n              }\n            ],\n            operator: /[|~*^$]?=/\n          }\n        },\n        'n-th': [\n          {\n            pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n            lookbehind: true,\n            inside: {\n              number: /[\\dn]+/,\n              operator: /[+-]/\n            }\n          },\n          {\n            pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n            lookbehind: true\n          }\n        ],\n        combinator: />|\\+|~|\\|\\|/,\n        // the `tag` token has been existed and removed.\n        // because we can't find a perfect tokenize to match it.\n        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n        punctuation: /[(),]/\n      })\n    }\n    Prism.languages.css['atrule'].inside['selector-function-argument'].inside =\n      selectorInside\n    Prism.languages.insertBefore('css', 'property', {\n      variable: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n        lookbehind: true\n      }\n    })\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n      lookbehind: true\n    } // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    Prism.languages.insertBefore('css', 'function', {\n      operator: {\n        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n        lookbehind: true\n      },\n      // CAREFUL!\n      // Previewers and Inline color use hexcode and color.\n      hexcode: {\n        pattern: /\\B#[\\da-f]{3,8}\\b/i,\n        alias: 'color'\n      },\n      color: [\n        {\n          pattern:\n            /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      // it's important that there is no boundary assertion after the hex digits\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      number: number\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = css\ncss.displayName = 'css'\ncss.aliases = []\nfunction css(Prism) {\n  ;(function (Prism) {\n    var string =\n      /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n        inside: {\n          rule: /^@[\\w-]+/,\n          'selector-function-argument': {\n            pattern:\n              /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n            lookbehind: true,\n            alias: 'selector'\n          },\n          keyword: {\n            pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n            lookbehind: true\n          } // See rest below\n        }\n      },\n      url: {\n        // https://drafts.csswg.org/css-values-3/#urls\n        pattern: RegExp(\n          '\\\\burl\\\\((?:' +\n            string.source +\n            '|' +\n            /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source +\n            ')\\\\)',\n          'i'\n        ),\n        greedy: true,\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/,\n          string: {\n            pattern: RegExp('^' + string.source + '$'),\n            alias: 'url'\n          }\n        }\n      },\n      selector: {\n        pattern: RegExp(\n          '(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' +\n            string.source +\n            ')*(?=\\\\s*\\\\{)'\n        ),\n        lookbehind: true\n      },\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      property: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n        lookbehind: true\n      },\n      important: /!important\\b/i,\n      function: {\n        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n        lookbehind: true\n      },\n      punctuation: /[(){};:,]/\n    }\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css\n    var markup = Prism.languages.markup\n    if (markup) {\n      markup.tag.addInlined('style', 'css')\n      markup.tag.addAttribute('style', 'css')\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csv\ncsv.displayName = 'csv'\ncsv.aliases = []\nfunction csv(Prism) {\n  // https://tools.ietf.org/html/rfc4180\n  Prism.languages.csv = {\n    value: /[^\\r\\n,\"]+|\"(?:[^\"]|\"\")*\"(?!\")/,\n    punctuation: /,/\n  }\n}\n","'use strict'\n\nmodule.exports = cypher\ncypher.displayName = 'cypher'\ncypher.aliases = []\nfunction cypher(Prism) {\n  Prism.languages.cypher = {\n    // https://neo4j.com/docs/cypher-manual/current/syntax/comments/\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)(?=\\s*[{):])/,\n      lookbehind: true,\n      greedy: true\n    },\n    relationship: {\n      pattern:\n        /(-\\[\\s*(?:\\w+\\s*|`(?:[^`\\\\\\r\\n])*`\\s*)?:\\s*|\\|\\s*:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    identifier: {\n      pattern: /`(?:[^`\\\\\\r\\n])*`/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/reserved/\n    keyword:\n      /\\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\\b/i,\n    function: /\\b\\w+\\b(?=\\s*\\()/,\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: /\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)\\b/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/operators/\n    operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\\.\\.\\.?/,\n    punctuation: /[()[\\]{},;.]/\n  }\n}\n","'use strict'\n\nmodule.exports = d\nd.displayName = 'd'\nd.aliases = []\nfunction d(Prism) {\n  Prism.languages.d = Prism.languages.extend('clike', {\n    comment: [\n      {\n        // Shebang\n        pattern: /^\\s*#!.+/,\n        greedy: true\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\\\\])/.source +\n            '(?:' +\n            [\n              // /+ comment +/\n              // Allow one level of nesting\n              /\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source, // // comment\n              /\\/\\/.*/.source, // /* comment */\n              /\\/\\*[\\s\\S]*?\\*\\//.source\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: RegExp(\n          [\n            // r\"\", x\"\"\n            /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source, // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n            /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source, // q\"IDENT\n            // ...\n            // IDENT\"\n            /\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source, // q\"//\", q\"||\", etc.\n            // eslint-disable-next-line regexp/strict\n            /\\bq\"(.)[\\s\\S]*?\\2\"/.source, // eslint-disable-next-line regexp/strict\n            /([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source\n          ].join('|'),\n          'm'\n        ),\n        greedy: true\n      },\n      {\n        pattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\n        greedy: true,\n        alias: 'token-string'\n      }\n    ],\n    // In order: $, keywords and special tokens, globally defined symbols\n    keyword:\n      /\\$|\\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\\b/,\n    number: [\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,\n      {\n        pattern:\n          /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\n        lookbehind: true\n      }\n    ],\n    operator:\n      /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n  })\n  Prism.languages.insertBefore('d', 'string', {\n    // Characters\n    // 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\n    char: /'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/\n  })\n  Prism.languages.insertBefore('d', 'keyword', {\n    property: /\\B@\\w*/\n  })\n  Prism.languages.insertBefore('d', 'function', {\n    register: {\n      // Iasm registers\n      pattern:\n        /\\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n      alias: 'variable'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = dart\ndart.displayName = 'dart'\ndart.aliases = []\nfunction dart(Prism) {\n  ;(function (Prism) {\n    var keywords = [\n      /\\b(?:async|sync|yield)\\*/,\n      /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\n    ] // Handles named imports, such as http.Client\n    var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the dart naming conventions\n    var className = {\n      pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        }\n      }\n    }\n    Prism.languages.dart = Prism.languages.extend('clike', {\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      operator:\n        /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n    })\n    Prism.languages.insertBefore('dart', 'string', {\n      'string-literal': {\n        pattern:\n          /r?(?:(\"\"\"|''')[\\s\\S]*?\\1|([\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2(?!\\2))/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\$\\{?|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages.dart\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      },\n      string: undefined\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      metadata: {\n        pattern: /@\\w+/,\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dataweave\ndataweave.displayName = 'dataweave'\ndataweave.aliases = []\nfunction dataweave(Prism) {\n  ;(function (Prism) {\n    Prism.languages.dataweave = {\n      url: /\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,\n      property: {\n        pattern: /(?:\\b\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\b\\w+)(?=\\s*[:@])/,\n        greedy: true\n      },\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      'mime-type':\n        /\\b(?:application|audio|image|multipart|text|video)\\/[\\w+-]+/,\n      date: {\n        pattern: /\\|[\\w:+-]+\\|/,\n        greedy: true\n      },\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      regex: {\n        pattern: /\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\\b/,\n      function: /\\b[A-Z_]\\w*(?=\\s*\\()/i,\n      number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n      punctuation: /[{}[\\];(),.:@]/,\n      operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|!|\\?/,\n      boolean: /\\b(?:false|true)\\b/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dax\ndax.displayName = 'dax'\ndax.aliases = []\nfunction dax(Prism) {\n  Prism.languages.dax = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/).*)/,\n      lookbehind: true\n    },\n    'data-field': {\n      pattern:\n        /'(?:[^']|'')*'(?!')(?:\\[[ \\w\\xA0-\\uFFFF]+\\])?|\\w+\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'symbol'\n    },\n    measure: {\n      pattern: /\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'constant'\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    function:\n      /\\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\\.DIST|BETA\\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\\.DIST|CHISQ\\.DIST\\.RT|CHISQ\\.INV|CHISQ\\.INV\\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\\.NORM|CONFIDENCE\\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\\.DIST|NORM\\.INV|NORM\\.S\\.DIST|NORM\\.S\\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\\.EXC|PERCENTILE\\.INC|PERCENTILEX\\.EXC|PERCENTILEX\\.INC|PERMUT|PI|POISSON\\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\\.P|STDEV\\.S|STDEVX\\.P|STDEVX\\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\\.DIST|T\\.DIST\\.2T|T\\.DIST\\.RT|T\\.INV|T\\.INV\\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\\.P|VAR\\.S|VARX\\.P|VARX\\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\\s*\\()/i,\n    keyword:\n      /\\b(?:DEFINE|EVALUATE|MEASURE|ORDER\\s+BY|RETURN|VAR|START\\s+AT|ASC|DESC)\\b/i,\n    boolean: {\n      pattern: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n      alias: 'constant'\n    },\n    number: /\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/,\n    operator: /:=|[-+*\\/=^]|&&?|\\|\\||<(?:=>?|<|>)?|>[>=]?|\\b(?:IN|NOT)\\b/i,\n    punctuation: /[;\\[\\](){}`,.]/\n  }\n}\n","'use strict'\n\nmodule.exports = dhall\ndhall.displayName = 'dhall'\ndhall.aliases = []\nfunction dhall(Prism) {\n  // ABNF grammar:\n  // https://github.com/dhall-lang/dhall-lang/blob/master/standard/dhall.abnf\n  Prism.languages.dhall = {\n    // Multi-line comments can be nested. E.g. {- foo {- bar -} -}\n    // The multi-line pattern is essentially this:\n    //   \\{-(?:[^-{]|-(?!\\})|\\{(?!-)|<SELF>)*-\\}\n    comment:\n      /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              alias: 'language-dhall',\n              inside: null // see blow\n            },\n            punctuation: /\\$\\{|\\}/\n          }\n        }\n      }\n    },\n    label: {\n      pattern: /`[^`]*`/,\n      greedy: true\n    },\n    url: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596\n      pattern:\n        /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n      greedy: true\n    },\n    env: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661\n      pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n      greedy: true,\n      inside: {\n        function: /^env/,\n        operator: /^:/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    hash: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725\n      pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n      inside: {\n        function: /sha256/,\n        operator: /:/,\n        number: /[\\da-fA-F]{64}/\n      }\n    },\n    // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359\n    keyword:\n      /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n    builtin: /\\b(?:None|Some)\\b/,\n    boolean: /\\b(?:False|True)\\b/,\n    number:\n      /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n    operator:\n      /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n    punctuation: /\\.\\.|[{}\\[\\](),./]/,\n    // we'll just assume that every capital word left is a type name\n    'class-name': /\\b[A-Z]\\w*\\b/\n  }\n  Prism.languages.dhall.string.inside.interpolation.inside.expression.inside =\n    Prism.languages.dhall\n}\n","'use strict'\n\nmodule.exports = diff\ndiff.displayName = 'diff'\ndiff.aliases = []\nfunction diff(Prism) {\n  ;(function (Prism) {\n    Prism.languages.diff = {\n      coord: [\n        // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n        /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n        /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n        /^\\d.*$/m\n      ] // deleted, inserted, unchanged, diff\n    }\n    /**\n     * A map from the name of a block to its line prefix.\n     *\n     * @type {Object<string, string>}\n     */\n    var PREFIXES = {\n      'deleted-sign': '-',\n      'deleted-arrow': '<',\n      'inserted-sign': '+',\n      'inserted-arrow': '>',\n      unchanged: ' ',\n      diff: '!'\n    } // add a token for each prefix\n    Object.keys(PREFIXES).forEach(function (name) {\n      var prefix = PREFIXES[name]\n      var alias = []\n      if (!/^\\w+$/.test(name)) {\n        // \"deleted-sign\" -> \"deleted\"\n        alias.push(/\\w+/.exec(name)[0])\n      }\n      if (name === 'diff') {\n        alias.push('bold')\n      }\n      Prism.languages.diff[name] = {\n        pattern: RegExp(\n          '^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+',\n          'm'\n        ),\n        alias: alias,\n        inside: {\n          line: {\n            pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n            lookbehind: true\n          },\n          prefix: {\n            pattern: /[\\s\\S]/,\n            alias: /\\w+/.exec(name)[0]\n          }\n        }\n      }\n    }) // make prefixes available to Diff plugin\n    Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n      value: PREFIXES\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = django\ndjango.displayName = 'django'\ndjango.aliases = ['jinja2']\nfunction django(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n  ;(function (Prism) {\n    Prism.languages.django = {\n      comment: /^\\{#[\\s\\S]*?#\\}$/,\n      tag: {\n        pattern: /(^\\{%[+-]?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      delimiter: {\n        pattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\n        alias: 'punctuation'\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      filter: {\n        pattern: /(\\|)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      test: {\n        pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\n      keyword:\n        /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      boolean: /[Ff]alse|[Nn]one|[Tt]rue/,\n      variable: /\\b\\w+\\b/,\n      punctuation: /[{}[\\](),.:;]/\n    }\n    var pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g\n    var markupTemplating = Prism.languages['markup-templating']\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'django', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'django')\n    }) // Add an Jinja2 alias\n    Prism.languages.jinja2 = Prism.languages.django\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'jinja2', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'jinja2')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dnsZoneFile\ndnsZoneFile.displayName = 'dnsZoneFile'\ndnsZoneFile.aliases = []\nfunction dnsZoneFile(Prism) {\n  Prism.languages['dns-zone-file'] = {\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(^\\$ORIGIN[ \\t]+)\\S+/m,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|\\s)@(?=\\s|$)/,\n        lookbehind: true\n      }\n    ],\n    keyword: /^\\$(?:INCLUDE|ORIGIN|TTL)(?=\\s|$)/m,\n    class: {\n      // https://tools.ietf.org/html/rfc1035#page-13\n      pattern: /(^|\\s)(?:CH|CS|HS|IN)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      // https://en.wikipedia.org/wiki/List_of_DNS_record_types\n      pattern:\n        /(^|\\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    punctuation: /[()]/\n  }\n  Prism.languages['dns-zone'] = Prism.languages['dns-zone-file']\n}\n","'use strict'\n\nmodule.exports = docker\ndocker.displayName = 'docker'\ndocker.aliases = ['dockerfile']\nfunction docker(Prism) {\n  ;(function (Prism) {\n    // Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n    // that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n    var spaceAfterBackSlash =\n      /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source // At least one space, comment, or line break\n    var space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(\n      /<SP_BS>/g,\n      function () {\n        return spaceAfterBackSlash\n      }\n    )\n    var string =\n      /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/\n        .source\n    var option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(\n      /<STR>/g,\n      function () {\n        return string\n      }\n    )\n    var stringRule = {\n      pattern: RegExp(string),\n      greedy: true\n    }\n    var commentRule = {\n      pattern: /(^[ \\t]*)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<OPT>/g, function () {\n          return option\n        })\n        .replace(/<SP>/g, function () {\n          return space\n        })\n      return RegExp(source, flags)\n    }\n    Prism.languages.docker = {\n      instruction: {\n        pattern:\n          /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          options: {\n            pattern: re(\n              /(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,\n              'i'\n            ),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              property: {\n                pattern: /(^|\\s)--[\\w-]+/,\n                lookbehind: true\n              },\n              string: [\n                stringRule,\n                {\n                  pattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n                  lookbehind: true\n                }\n              ],\n              operator: /\\\\$/m,\n              punctuation: /=/\n            }\n          },\n          keyword: [\n            {\n              // https://docs.docker.com/engine/reference/builder/#healthcheck\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#from\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#onbuild\n              pattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              pattern: /^\\w+/,\n              greedy: true\n            }\n          ],\n          comment: commentRule,\n          string: stringRule,\n          variable: /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n          operator: /\\\\$/m\n        }\n      },\n      comment: commentRule\n    }\n    Prism.languages.dockerfile = Prism.languages.docker\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dot\ndot.displayName = 'dot'\ndot.aliases = ['gv']\nfunction dot(Prism) {\n  // https://www.graphviz.org/doc/info/lang.html\n  ;(function (Prism) {\n    var ID =\n      '(?:' +\n      [\n        // an identifier\n        /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source, // a number\n        /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source, // a double-quoted string\n        /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source, // HTML-like string\n        /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/\n          .source\n      ].join('|') +\n      ')'\n    var IDInside = {\n      markup: {\n        pattern: /(^<)[\\s\\S]+(?=>$)/,\n        lookbehind: true,\n        alias: ['language-markup', 'language-html', 'language-xml'],\n        inside: Prism.languages.markup\n      }\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function withID(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return ID\n        }),\n        flags\n      )\n    }\n    Prism.languages.dot = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n        greedy: true\n      },\n      'graph-name': {\n        pattern: withID(\n          /(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source,\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name',\n        inside: IDInside\n      },\n      'attr-value': {\n        pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      'attr-name': {\n        pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n      'compass-point': {\n        pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n        lookbehind: true,\n        alias: 'builtin'\n      },\n      node: {\n        pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      operator: /[=:]|-[->]/,\n      punctuation: /[\\[\\]{};,]/\n    }\n    Prism.languages.gv = Prism.languages.dot\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ebnf\nebnf.displayName = 'ebnf'\nebnf.aliases = []\nfunction ebnf(Prism) {\n  Prism.languages.ebnf = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    special: {\n      pattern: /\\?[^?\\r\\n]*\\?/,\n      greedy: true,\n      alias: 'class-name'\n    },\n    definition: {\n      pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n      lookbehind: true,\n      alias: ['rule', 'keyword']\n    },\n    rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n    operator: /[-=|*/!]/\n  }\n}\n","'use strict'\n\nmodule.exports = editorconfig\neditorconfig.displayName = 'editorconfig'\neditorconfig.aliases = []\nfunction editorconfig(Prism) {\n  Prism.languages.editorconfig = {\n    // https://editorconfig-specification.readthedocs.io\n    comment: /[;#].*/,\n    section: {\n      pattern: /(^[ \\t]*)\\[.+\\]/m,\n      lookbehind: true,\n      alias: 'selector',\n      inside: {\n        regex: /\\\\\\\\[\\[\\]{},!?.*]/,\n        // Escape special characters with '\\\\'\n        operator: /[!?]|\\.\\.|\\*{1,2}/,\n        punctuation: /[\\[\\]{},]/\n      }\n    },\n    key: {\n      pattern: /(^[ \\t]*)[^\\s=]+(?=[ \\t]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /=.*/,\n      alias: 'attr-value',\n      inside: {\n        punctuation: /^=/\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = eiffel\neiffel.displayName = 'eiffel'\neiffel.aliases = []\nfunction eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      }, // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      }, // Single-line string\n      {\n        pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }\n    ],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword:\n      /\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': /\\b[A-Z][\\dA-Z_]*\\b/,\n    number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i, // Decimal\n      /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i\n    ],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  }\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ejs\nejs.displayName = 'ejs'\nejs.aliases = ['eta']\nfunction ejs(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.ejs = {\n      delimiter: {\n        pattern: /^<%[-_=]?|[-_]?%>$/,\n        alias: 'punctuation'\n      },\n      comment: /^#[\\s\\S]*/,\n      'language-javascript': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.javascript\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var ejsPattern = /<%(?!%)[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ejs',\n        ejsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ejs')\n    })\n    Prism.languages.eta = Prism.languages.ejs\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = elixir\nelixir.displayName = 'elixir'\nelixir.aliases = []\nfunction elixir(Prism) {\n  Prism.languages.elixir = {\n    doc: {\n      pattern:\n        /@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,\n      inside: {\n        attribute: /^@\\w+/,\n        string: /['\"][\\s\\S]+/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n    regex: {\n      pattern:\n        /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n      greedy: true\n    },\n    string: [\n      {\n        // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n        pattern:\n          /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        // Multi-line strings are allowed\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }\n    ],\n    atom: {\n      // Look-behind prevents bad highlighting of the :: operator\n      pattern: /(^|[^:]):\\w+/,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    module: {\n      pattern: /\\b[A-Z]\\w*\\b/,\n      alias: 'class-name'\n    },\n    // Look-ahead prevents bad highlighting of the :: operator\n    'attr-name': /\\b\\w+\\??:(?!:)/,\n    argument: {\n      // Look-behind prevents bad highlighting of the && operator\n      pattern: /(^|[^&])&\\d+/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'variable'\n    },\n    function: /\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,\n    number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n    keyword:\n      /\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    operator: [\n      /\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\n      {\n        // We don't want to match <<\n        pattern: /([^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /([^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,%\\[\\]{}()]/\n  }\n  Prism.languages.elixir.string.forEach(function (o) {\n    o.inside = {\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.elixir\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = elm\nelm.displayName = 'elm'\nelm.aliases = []\nfunction elm(Prism) {\n  Prism.languages.elm = {\n    comment: /--.*|\\{-[\\s\\S]*?-\\}/,\n    char: {\n      pattern:\n        /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+|u\\{[0-9a-fA-F]+\\}))'/,\n      greedy: true\n    },\n    string: [\n      {\n        // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      },\n      {\n        pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      }\n    ],\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|exposing|import)\\b/\n      }\n    },\n    keyword:\n      /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n    // decimal integers and floating point numbers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n    // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n    operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n    // In Elm, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n    constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n    punctuation: /[{}[\\]|(),.:]/\n  }\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = erb\nerb.displayName = 'erb'\nerb.aliases = []\nfunction erb(Prism) {\n  Prism.register(refractorRuby)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.erb = {\n      delimiter: {\n        pattern: /^(\\s*)<%=?|%>(?=\\s*$)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      ruby: {\n        pattern: /\\s*\\S[\\s\\S]*/,\n        alias: 'language-ruby',\n        inside: Prism.languages.ruby\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var erbPattern =\n        /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s(?:[^\\r\\n]|[\\r\\n](?!=end))*[\\r\\n]=end)+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'erb',\n        erbPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = erlang\nerlang.displayName = 'erlang'\nerlang.aliases = []\nfunction erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\b(?:after|case|catch|end|fun|if|of|receive|try|when)\\b/,\n    number: [\n      /\\$\\\\?./,\n      /\\b\\d+#[a-z0-9]+/i,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    ],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [\n      /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  }\n}\n","'use strict'\nvar refractorLua = require('./lua.js')\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = etlua\netlua.displayName = 'etlua'\netlua.aliases = []\nfunction etlua(Prism) {\n  Prism.register(refractorLua)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.etlua = {\n      delimiter: {\n        pattern: /^<%[-=]?|-?%>$/,\n        alias: 'punctuation'\n      },\n      'language-lua': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.lua\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var pattern = /<%[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'etlua',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'etlua')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = excelFormula\nexcelFormula.displayName = 'excelFormula'\nexcelFormula.aliases = []\nfunction excelFormula(Prism) {\n  Prism.languages['excel-formula'] = {\n    comment: {\n      pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    reference: {\n      // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n      // Sales!B2\n      // 'Winter sales'!B2\n      // [Sales.xlsx]Jan!B2:B5\n      // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n      // '[Sales.xlsx]Jan sales'!B2:B5\n      // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n      pattern:\n        /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        operator: /!$/,\n        punctuation: /'/,\n        sheet: {\n          pattern: /[^[\\]]+$/,\n          alias: 'function'\n        },\n        file: {\n          pattern: /\\[[^[\\]]+\\]$/,\n          inside: {\n            punctuation: /[[\\]]/\n          }\n        },\n        path: /[\\s\\S]+/\n      }\n    },\n    'function-name': {\n      pattern: /\\b[A-Z]\\w*(?=\\()/i,\n      alias: 'keyword'\n    },\n    range: {\n      pattern:\n        /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n      alias: 'property',\n      inside: {\n        operator: /:/,\n        cell: /\\$?[A-Z]+\\$?\\d+/i,\n        column: /\\$?[A-Z]+/i,\n        row: /\\$?\\d+/\n      }\n    },\n    cell: {\n      // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n      // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n      pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n      alias: 'property'\n    },\n    number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    operator: /[-+*/^%=&,]|<[=>]?|>=?/,\n    punctuation: /[[\\]();{}|]/\n  }\n  Prism.languages['xlsx'] = Prism.languages['xls'] =\n    Prism.languages['excel-formula']\n}\n","'use strict'\n\nmodule.exports = factor\nfactor.displayName = 'factor'\nfactor.aliases = []\nfunction factor(Prism) {\n  ;(function (Prism) {\n    var comment_inside = {\n      function:\n        /\\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\\?{2,}|!{2,})\\b/\n    }\n    var string_inside = {\n      number: /\\\\[^\\s']|%\\w/\n    }\n    var factor = {\n      comment: [\n        {\n          // ! single-line exclamation point comments with whitespace after/around the !\n          pattern: /(^|\\s)(?:! .*|!$)/,\n          lookbehind: true,\n          inside: comment_inside\n        },\n        /* from basis/multiline: */\n        {\n          // /* comment */, /* comment*/\n          pattern: /(^|\\s)\\/\\*\\s[\\s\\S]*?\\*\\/(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        },\n        {\n          // ![[ comment ]] , ![===[ comment]===]\n          pattern: /(^|\\s)!\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        }\n      ],\n      number: [\n        {\n          // basic base 10 integers 9, -9\n          pattern: /(^|\\s)[+-]?\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // base prefix integers 0b010 0o70 0xad 0d10 0XAD -0xa9\n          pattern: /(^|\\s)[+-]?0(?:b[01]+|o[0-7]+|d\\d+|x[\\dA-F]+)(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // fractional ratios 1/5 -1/5 and the literal float approximations 1/5. -1/5.\n          pattern: /(^|\\s)[+-]?\\d+\\/\\d+\\.?(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // positive mixed numbers 23+1/5 +23+1/5\n          pattern: /(^|\\s)\\+?\\d+\\+\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // negative mixed numbers -23-1/5\n          pattern: /(^|\\s)-\\d+-\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // basic decimal floats -0.01 0. .0 .1 -.1 -1. -12.13 +12.13\n          // and scientific notation with base 10 exponents 3e4 3e-4 .3e-4\n          pattern:\n            /(^|\\s)[+-]?(?:\\d*\\.\\d+|\\d+\\.\\d*|\\d+)(?:e[+-]?\\d+)?(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // NAN literal syntax NAN: 80000deadbeef, NAN: a\n          pattern: /(^|\\s)NAN:\\s+[\\da-fA-F]+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          /*\nbase prefix floats 0x1.0p3 (8.0) 0b1.010p2 (5.0) 0x1.p1 0b1.11111111p11111...\n\"The normalized hex form ±0x1.MMMMMMMMMMMMM[pP]±EEEE allows any floating-point number to be specified precisely.\nThe values of MMMMMMMMMMMMM and EEEE map directly to the mantissa and exponent fields of the binary IEEE 754 representation.\"\n<https://docs.factorcode.org/content/article-syntax-floats.html>\n*/\n          pattern:\n            /(^|\\s)[+-]?0(?:b1\\.[01]*|o1\\.[0-7]*|d1\\.\\d*|x1\\.[\\dA-F]*)p\\d+(?=\\s|$)/i,\n          lookbehind: true\n        }\n      ],\n      // R/ regexp?\\/\\\\/\n      regexp: {\n        pattern:\n          /(^|\\s)R\\/\\s(?:\\\\\\S|[^\\\\/])*\\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'number',\n        inside: {\n          variable: /\\\\\\S/,\n          keyword: /[+?*\\[\\]^$(){}.|]/,\n          operator: {\n            pattern: /(\\/)[idmsr]+(?:-[idmsr]+)?/,\n            lookbehind: true\n          }\n        }\n      },\n      boolean: {\n        pattern: /(^|\\s)[tf](?=\\s|$)/,\n        lookbehind: true\n      },\n      // SBUF\" asd\", URL\" ://...\", P\" /etc/\"\n      'custom-string': {\n        pattern: /(^|\\s)[A-Z0-9\\-]+\"\\s(?:\\\\\\S|[^\"\\\\])*\"/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          number: /\\\\\\S|%\\w|\\//\n        }\n      },\n      'multiline-string': [\n        {\n          // STRING: name \\n content \\n ; -> CONSTANT: name \"content\" (symbol)\n          pattern: /(^|\\s)STRING:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*;(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            number: string_inside.number,\n            // trailing semicolon on its own line\n            'semicolon-or-setlocal': {\n              pattern: /([\\r\\n][ \\t]*);(?=\\s|$)/,\n              lookbehind: true,\n              alias: 'function'\n            }\n          }\n        },\n        {\n          // HEREDOC: marker \\n content \\n marker ; -> \"content\" (immediate)\n          pattern: /(^|\\s)HEREDOC:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*\\S+(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        },\n        {\n          // [[ string ]], [==[ string]==]\n          pattern: /(^|\\s)\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        }\n      ],\n      'special-using': {\n        pattern: /(^|\\s)USING:(?:\\s\\S+)*(?=\\s+;(?:\\s|$))/,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          // this is essentially a regex for vocab names, which i don't want to specify\n          // but the USING: gets picked up as a vocab name\n          string: {\n            pattern: /(\\s)[^:\\s]+/,\n            lookbehind: true\n          }\n        }\n      },\n      /* this description of stack effect literal syntax is not complete and not as specific as theoretically possible\ntrying to do better is more work and regex-computation-time than it's worth though.\n- we'd like to have the \"delimiter\" parts of the stack effect [ (, --, and ) ] be a different (less-important or comment-like) colour to the stack effect contents\n- we'd like if nested stack effects were treated as such rather than just appearing flat (with `inside`)\n- we'd like if the following variable name conventions were recognised specifically:\nspecial row variables = ..a b..\ntype and stack effect annotations end with a colon = ( quot: ( a: ( -- ) -- b ) -- x ), ( x: number -- )\nword throws unconditional error = *\nany other word-like variable name = a ? q' etc\nhttps://docs.factorcode.org/content/article-effects.html\nthese are pretty complicated to highlight properly without a real parser, and therefore out of scope\nthe old pattern, which may be later useful, was: (^|\\s)(?:call|execute|eval)?\\((?:\\s+[^\"\\r\\n\\t ]\\S*)*?\\s+--(?:\\s+[^\"\\n\\t ]\\S*)*?\\s+\\)(?=\\s|$)\n*/\n      // current solution is not great\n      'stack-effect-delimiter': [\n        {\n          // opening parenthesis\n          pattern: /(^|\\s)(?:call|eval|execute)?\\((?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // middle --\n          pattern: /(\\s)--(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing parenthesis\n          pattern: /(\\s)\\)(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      combinators: {\n        pattern: null,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'kernel-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'sequences-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'math-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'constructor-word': {\n        // <array> but not <=>\n        pattern: /(^|\\s)<(?!=+>|-+>)\\S+>(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'other-builtin-syntax': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      /*\nfull list of supported word naming conventions: (the convention appears outside of the [brackets])\nset-[x]\nchange-[x]\nwith-[x]\nnew-[x]\n>[string]\n[base]>\n[string]>[number]\n+[symbol]+\n[boolean-word]?\n?[of]\n[slot-reader]>>\n>>[slot-setter]\n[slot-writer]<<\n([implementation-detail])\n[mutater]!\n[variant]*\n[prettyprint].\n$[help-markup]\n<constructors>, SYNTAX:, etc are supported by their own patterns.\n`with` and `new` from `kernel` are their own builtins.\nsee <https://docs.factorcode.org/content/article-conventions.html>\n*/\n      'conventionally-named-word': {\n        pattern:\n          /(^|\\s)(?!\")(?:(?:change|new|set|with)-\\S+|\\$\\S+|>[^>\\s]+|[^:>\\s]+>|[^>\\s]+>[^>\\s]+|\\+[^+\\s]+\\+|[^?\\s]+\\?|\\?[^?\\s]+|[^>\\s]+>>|>>[^>\\s]+|[^<\\s]+<<|\\([^()\\s]+\\)|[^!\\s]+!|[^*\\s]\\S*\\*|[^.\\s]\\S*\\.)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'colon-syntax': {\n        pattern: /(^|\\s)(?:[A-Z0-9\\-]+#?)?:{1,2}\\s+(?:;\\S+|(?!;)\\S+)(?=\\s|$)/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'semicolon-or-setlocal': {\n        pattern: /(\\s)(?:;|:>)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      // do not highlight leading } or trailing X{ at the begin/end of the file as it's invalid syntax\n      'curly-brace-literal-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)[a-z]*\\{(?=\\s)/i,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\}(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      // do not highlight leading ] or trailing [ at the begin/end of the file as it's invalid syntax\n      'quotation-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)\\[(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\](?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      'normal-word': {\n        pattern: /(^|\\s)[^\"\\s]\\S*(?=\\s|$)/,\n        lookbehind: true\n      },\n      /*\nbasic first-class string \"a\"\nwith escaped double-quote \"a\\\"\"\nescaped backslash \"\\\\\"\nand general escapes since Factor has so many \"\\N\"\nsyntax that works in the reference implementation that isn't fully\nsupported because it's an implementation detail:\n\"string 1\"\"string 2\" -> 2 strings (works anyway)\n\"string\"5 -> string, 5\n\"string\"[ ] -> string, quotation\n{ \"a\"} -> array<string>\nthe rest of those examples all properly recognise the string, but not\nthe other object (number, quotation, etc)\nthis is fine for a regex-only implementation.\n*/\n      string: {\n        pattern: /\"(?:\\\\\\S|[^\"\\\\])*\"/,\n        greedy: true,\n        inside: string_inside\n      }\n    }\n    var escape = function (str) {\n      return (str + '').replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, '\\\\$1')\n    }\n    var arrToWordsRegExp = function (arr) {\n      return new RegExp('(^|\\\\s)(?:' + arr.map(escape).join('|') + ')(?=\\\\s|$)')\n    }\n    var builtins = {\n      'kernel-builtin': [\n        'or',\n        '2nipd',\n        '4drop',\n        'tuck',\n        'wrapper',\n        'nip',\n        'wrapper?',\n        'callstack>array',\n        'die',\n        'dupd',\n        'callstack',\n        'callstack?',\n        '3dup',\n        'hashcode',\n        'pick',\n        '4nip',\n        'build',\n        '>boolean',\n        'nipd',\n        'clone',\n        '5nip',\n        'eq?',\n        '?',\n        '=',\n        'swapd',\n        '2over',\n        'clear',\n        '2dup',\n        'get-retainstack',\n        'not',\n        'tuple?',\n        'dup',\n        '3nipd',\n        'call',\n        '-rotd',\n        'object',\n        'drop',\n        'assert=',\n        'assert?',\n        '-rot',\n        'execute',\n        'boa',\n        'get-callstack',\n        'curried?',\n        '3drop',\n        'pickd',\n        'overd',\n        'over',\n        'roll',\n        '3nip',\n        'swap',\n        'and',\n        '2nip',\n        'rotd',\n        'throw',\n        '(clone)',\n        'hashcode*',\n        'spin',\n        'reach',\n        '4dup',\n        'equal?',\n        'get-datastack',\n        'assert',\n        '2drop',\n        '<wrapper>',\n        'boolean?',\n        'identity-hashcode',\n        'identity-tuple?',\n        'null',\n        'composed?',\n        'new',\n        '5drop',\n        'rot',\n        '-roll',\n        'xor',\n        'identity-tuple',\n        'boolean'\n      ],\n      'other-builtin-syntax': [\n        // syntax\n        '=======',\n        'recursive',\n        'flushable',\n        '>>',\n        '<<<<<<',\n        'M\\\\',\n        'B',\n        'PRIVATE>',\n        '\\\\',\n        '======',\n        'final',\n        'inline',\n        'delimiter',\n        'deprecated',\n        '<PRIVATE',\n        '>>>>>>',\n        '<<<<<<<',\n        'parse-complex',\n        'malformed-complex',\n        'read-only',\n        '>>>>>>>',\n        'call-next-method',\n        '<<',\n        'foldable', // literals\n        '$',\n        '$[',\n        '${'\n      ],\n      'sequences-builtin': [\n        'member-eq?',\n        'mismatch',\n        'append',\n        'assert-sequence=',\n        'longer',\n        'repetition',\n        'clone-like',\n        '3sequence',\n        'assert-sequence?',\n        'last-index-from',\n        'reversed',\n        'index-from',\n        'cut*',\n        'pad-tail',\n        'join-as',\n        'remove-eq!',\n        'concat-as',\n        'but-last',\n        'snip',\n        'nths',\n        'nth',\n        'sequence',\n        'longest',\n        'slice?',\n        '<slice>',\n        'remove-nth',\n        'tail-slice',\n        'empty?',\n        'tail*',\n        'member?',\n        'virtual-sequence?',\n        'set-length',\n        'drop-prefix',\n        'iota',\n        'unclip',\n        'bounds-error?',\n        'unclip-last-slice',\n        'non-negative-integer-expected',\n        'non-negative-integer-expected?',\n        'midpoint@',\n        'longer?',\n        '?set-nth',\n        '?first',\n        'rest-slice',\n        'prepend-as',\n        'prepend',\n        'fourth',\n        'sift',\n        'subseq-start',\n        'new-sequence',\n        '?last',\n        'like',\n        'first4',\n        '1sequence',\n        'reverse',\n        'slice',\n        'virtual@',\n        'repetition?',\n        'set-last',\n        'index',\n        '4sequence',\n        'max-length',\n        'set-second',\n        'immutable-sequence',\n        'first2',\n        'first3',\n        'supremum',\n        'unclip-slice',\n        'suffix!',\n        'insert-nth',\n        'tail',\n        '3append',\n        'short',\n        'suffix',\n        'concat',\n        'flip',\n        'immutable?',\n        'reverse!',\n        '2sequence',\n        'sum',\n        'delete-all',\n        'indices',\n        'snip-slice',\n        '<iota>',\n        'check-slice',\n        'sequence?',\n        'head',\n        'append-as',\n        'halves',\n        'sequence=',\n        'collapse-slice',\n        '?second',\n        'slice-error?',\n        'product',\n        'bounds-check?',\n        'bounds-check',\n        'immutable',\n        'virtual-exemplar',\n        'harvest',\n        'remove',\n        'pad-head',\n        'last',\n        'set-fourth',\n        'cartesian-product',\n        'remove-eq',\n        'shorten',\n        'shorter',\n        'reversed?',\n        'shorter?',\n        'shortest',\n        'head-slice',\n        'pop*',\n        'tail-slice*',\n        'but-last-slice',\n        'iota?',\n        'append!',\n        'cut-slice',\n        'new-resizable',\n        'head-slice*',\n        'sequence-hashcode',\n        'pop',\n        'set-nth',\n        '?nth',\n        'second',\n        'join',\n        'immutable-sequence?',\n        '<reversed>',\n        '3append-as',\n        'virtual-sequence',\n        'subseq?',\n        'remove-nth!',\n        'length',\n        'last-index',\n        'lengthen',\n        'assert-sequence',\n        'copy',\n        'move',\n        'third',\n        'first',\n        'tail?',\n        'set-first',\n        'prefix',\n        'bounds-error',\n        '<repetition>',\n        'exchange',\n        'surround',\n        'cut',\n        'min-length',\n        'set-third',\n        'push-all',\n        'head?',\n        'subseq-start-from',\n        'delete-slice',\n        'rest',\n        'sum-lengths',\n        'head*',\n        'infimum',\n        'remove!',\n        'glue',\n        'slice-error',\n        'subseq',\n        'push',\n        'replace-slice',\n        'subseq-as',\n        'unclip-last'\n      ],\n      'math-builtin': [\n        'number=',\n        'next-power-of-2',\n        '?1+',\n        'fp-special?',\n        'imaginary-part',\n        'float>bits',\n        'number?',\n        'fp-infinity?',\n        'bignum?',\n        'fp-snan?',\n        'denominator',\n        'gcd',\n        '*',\n        '+',\n        'fp-bitwise=',\n        '-',\n        'u>=',\n        '/',\n        '>=',\n        'bitand',\n        'power-of-2?',\n        'log2-expects-positive',\n        'neg?',\n        '<',\n        'log2',\n        '>',\n        'integer?',\n        'number',\n        'bits>double',\n        '2/',\n        'zero?',\n        'bits>float',\n        'float?',\n        'shift',\n        'ratio?',\n        'rect>',\n        'even?',\n        'ratio',\n        'fp-sign',\n        'bitnot',\n        '>fixnum',\n        'complex?',\n        '/i',\n        'integer>fixnum',\n        '/f',\n        'sgn',\n        '>bignum',\n        'next-float',\n        'u<',\n        'u>',\n        'mod',\n        'recip',\n        'rational',\n        '>float',\n        '2^',\n        'integer',\n        'fixnum?',\n        'neg',\n        'fixnum',\n        'sq',\n        'bignum',\n        '>rect',\n        'bit?',\n        'fp-qnan?',\n        'simple-gcd',\n        'complex',\n        '<fp-nan>',\n        'real',\n        '>fraction',\n        'double>bits',\n        'bitor',\n        'rem',\n        'fp-nan-payload',\n        'real-part',\n        'log2-expects-positive?',\n        'prev-float',\n        'align',\n        'unordered?',\n        'float',\n        'fp-nan?',\n        'abs',\n        'bitxor',\n        'integer>fixnum-strict',\n        'u<=',\n        'odd?',\n        '<=',\n        '/mod',\n        '>integer',\n        'real?',\n        'rational?',\n        'numerator'\n      ] // that's all for now\n    }\n    Object.keys(builtins).forEach(function (k) {\n      factor[k].pattern = arrToWordsRegExp(builtins[k])\n    })\n    var combinators = [\n      // kernel\n      '2bi',\n      'while',\n      '2tri',\n      'bi*',\n      '4dip',\n      'both?',\n      'same?',\n      'tri@',\n      'curry',\n      'prepose',\n      '3bi',\n      '?if',\n      'tri*',\n      '2keep',\n      '3keep',\n      'curried',\n      '2keepd',\n      'when',\n      '2bi*',\n      '2tri*',\n      '4keep',\n      'bi@',\n      'keepdd',\n      'do',\n      'unless*',\n      'tri-curry',\n      'if*',\n      'loop',\n      'bi-curry*',\n      'when*',\n      '2bi@',\n      '2tri@',\n      'with',\n      '2with',\n      'either?',\n      'bi',\n      'until',\n      '3dip',\n      '3curry',\n      'tri-curry*',\n      'tri-curry@',\n      'bi-curry',\n      'keepd',\n      'compose',\n      '2dip',\n      'if',\n      '3tri',\n      'unless',\n      'tuple',\n      'keep',\n      '2curry',\n      'tri',\n      'most',\n      'while*',\n      'dip',\n      'composed',\n      'bi-curry@', // sequences\n      'find-last-from',\n      'trim-head-slice',\n      'map-as',\n      'each-from',\n      'none?',\n      'trim-tail',\n      'partition',\n      'if-empty',\n      'accumulate*',\n      'reject!',\n      'find-from',\n      'accumulate-as',\n      'collector-for-as',\n      'reject',\n      'map',\n      'map-sum',\n      'accumulate!',\n      '2each-from',\n      'follow',\n      'supremum-by',\n      'map!',\n      'unless-empty',\n      'collector',\n      'padding',\n      'reduce-index',\n      'replicate-as',\n      'infimum-by',\n      'trim-tail-slice',\n      'count',\n      'find-index',\n      'filter',\n      'accumulate*!',\n      'reject-as',\n      'map-integers',\n      'map-find',\n      'reduce',\n      'selector',\n      'interleave',\n      '2map',\n      'filter-as',\n      'binary-reduce',\n      'map-index-as',\n      'find',\n      'produce',\n      'filter!',\n      'replicate',\n      'cartesian-map',\n      'cartesian-each',\n      'find-index-from',\n      'map-find-last',\n      '3map-as',\n      '3map',\n      'find-last',\n      'selector-as',\n      '2map-as',\n      '2map-reduce',\n      'accumulate',\n      'each',\n      'each-index',\n      'accumulate*-as',\n      'when-empty',\n      'all?',\n      'collector-as',\n      'push-either',\n      'new-like',\n      'collector-for',\n      '2selector',\n      'push-if',\n      '2all?',\n      'map-reduce',\n      '3each',\n      'any?',\n      'trim-slice',\n      '2reduce',\n      'change-nth',\n      'produce-as',\n      '2each',\n      'trim',\n      'trim-head',\n      'cartesian-find',\n      'map-index', // math\n      'if-zero',\n      'each-integer',\n      'unless-zero',\n      '(find-integer)',\n      'when-zero',\n      'find-last-integer',\n      '(all-integers?)',\n      'times',\n      '(each-integer)',\n      'find-integer',\n      'all-integers?', // math.combinators\n      'unless-negative',\n      'if-positive',\n      'when-positive',\n      'when-negative',\n      'unless-positive',\n      'if-negative', // combinators\n      'case',\n      '2cleave',\n      'cond>quot',\n      'case>quot',\n      '3cleave',\n      'wrong-values',\n      'to-fixed-point',\n      'alist>quot',\n      'cond',\n      'cleave',\n      'call-effect',\n      'recursive-hashcode',\n      'spread',\n      'deep-spread>quot', // combinators.short-circuit\n      '2||',\n      '0||',\n      'n||',\n      '0&&',\n      '2&&',\n      '3||',\n      '1||',\n      '1&&',\n      'n&&',\n      '3&&', // combinators.smart\n      'smart-unless*',\n      'keep-inputs',\n      'reduce-outputs',\n      'smart-when*',\n      'cleave>array',\n      'smart-with',\n      'smart-apply',\n      'smart-if',\n      'inputs/outputs',\n      'output>sequence-n',\n      'map-outputs',\n      'map-reduce-outputs',\n      'dropping',\n      'output>array',\n      'smart-map-reduce',\n      'smart-2map-reduce',\n      'output>array-n',\n      'nullary',\n      'input<sequence',\n      'append-outputs',\n      'drop-inputs',\n      'inputs',\n      'smart-2reduce',\n      'drop-outputs',\n      'smart-reduce',\n      'preserving',\n      'smart-when',\n      'outputs',\n      'append-outputs-as',\n      'smart-unless',\n      'smart-if*',\n      'sum-outputs',\n      'input<sequence-unsafe',\n      'output>sequence' // tafn\n    ]\n    factor.combinators.pattern = arrToWordsRegExp(combinators)\n    Prism.languages.factor = factor\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = $false\n$false.displayName = '$false'\n$false.aliases = []\nfunction $false(Prism) {\n  ;(function (Prism) {\n    /**\n     * Based on the manual by Wouter van Oortmerssen.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2801#issue-829717504}\n     */\n    Prism.languages['false'] = {\n      comment: {\n        pattern: /\\{[^}]*\\}/\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      'character-code': {\n        pattern: /'(?:[^\\r]|\\r\\n?)/,\n        alias: 'number'\n      },\n      'assembler-code': {\n        pattern: /\\d+`/,\n        alias: 'important'\n      },\n      number: /\\d+/,\n      operator: /[-!#$%&'*+,./:;=>?@\\\\^_`|~ßø]/,\n      punctuation: /\\[|\\]/,\n      variable: /[a-z]/,\n      'non-standard': {\n        pattern: /[()<BDO®]/,\n        alias: 'bold'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = firestoreSecurityRules\nfirestoreSecurityRules.displayName = 'firestoreSecurityRules'\nfirestoreSecurityRules.aliases = []\nfunction firestoreSecurityRules(Prism) {\n  Prism.languages['firestore-security-rules'] = Prism.languages.extend(\n    'clike',\n    {\n      comment: /\\/\\/.*/,\n      keyword:\n        /\\b(?:allow|function|if|match|null|return|rules_version|service)\\b/,\n      operator: /&&|\\|\\||[<>!=]=?|[-+*/%]|\\b(?:in|is)\\b/\n    }\n  )\n  delete Prism.languages['firestore-security-rules']['class-name']\n  Prism.languages.insertBefore('firestore-security-rules', 'keyword', {\n    path: {\n      pattern:\n        /(^|[\\s(),])(?:\\/(?:[\\w\\xA0-\\uFFFF]+|\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)))+/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)/,\n          inside: {\n            operator: /=/,\n            keyword: /\\*\\*/,\n            punctuation: /[.$(){}]/\n          }\n        },\n        punctuation: /\\//\n      }\n    },\n    method: {\n      // to make the pattern shorter, the actual method names are omitted\n      pattern: /(\\ballow\\s+)[a-z]+(?:\\s*,\\s*[a-z]+)*(?=\\s*[:;])/,\n      lookbehind: true,\n      alias: 'builtin',\n      inside: {\n        punctuation: /,/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = flow\nflow.displayName = 'flow'\nflow.aliases = []\nfunction flow(Prism) {\n  ;(function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [\n        {\n          pattern:\n            /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|any|mixed|null|void)\\b/,\n          alias: 'tag'\n        }\n      ]\n    })\n    Prism.languages.flow['function-variable'].pattern =\n      /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i\n    delete Prism.languages.flow['parameter']\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    })\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\n    }\n    Prism.languages.flow.keyword.unshift(\n      {\n        pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n        lookbehind: true\n      }\n    )\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = fortran\nfortran.displayName = 'fortran'\nfortran.aliases = []\nfunction fortran(Prism) {\n  Prism.languages.fortran = {\n    'quoted-number': {\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n      alias: 'number'\n    },\n    string: {\n      pattern:\n        /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\n      inside: {\n        comment: {\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n          lookbehind: true\n        }\n      }\n    },\n    comment: {\n      pattern: /!.*/,\n      greedy: true\n    },\n    boolean: /\\.(?:FALSE|TRUE)\\.(?:_\\w+)?/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n    keyword: [\n      // Types\n      /\\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\\b/i, // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n    ],\n    operator: [\n      /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\n      {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n  }\n}\n","'use strict'\n\nmodule.exports = fsharp\nfsharp.displayName = 'fsharp'\nfsharp.aliases = []\nfunction fsharp(Prism) {\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n      lookbehind: true,\n      inside: {\n        operator: /->|\\*/,\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\\b/,\n    number: [\n      /\\b0x[\\da-fA-F]+(?:LF|lf|un)?\\b/,\n      /\\b0b[01]+(?:uy|y)?\\b/,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n      /\\b\\d+(?:[IlLsy]|UL|u[lsy]?)?\\b/\n    ],\n    operator:\n      /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n  })\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /(^[\\t ]*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'punctuation', {\n    'computation-expression': {\n      pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'string', {\n    annotation: {\n      pattern: /\\[<.+?>\\]/,\n      greedy: true,\n      inside: {\n        punctuation: /^\\[<|>\\]$/,\n        'class-name': {\n          pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n          lookbehind: true\n        },\n        'annotation-content': {\n          pattern: /[\\s\\S]+/,\n          inside: Prism.languages.fsharp\n        }\n      }\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n      greedy: true\n    }\n  })\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ftl\nftl.displayName = 'ftl'\nftl.aliases = []\nfunction ftl(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\n    // FTL expression with 4 levels of nesting supported\n    var FTL_EXPR =\n      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\n        .source\n    for (var i = 0; i < 2; i++) {\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n        return FTL_EXPR\n      })\n    }\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var ftl = {\n      comment: /<#--[\\s\\S]*?-->/,\n      string: [\n        {\n          // raw string\n          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\n              /<expr>/g,\n              function () {\n                return FTL_EXPR\n              }\n            )\n          ),\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: RegExp(\n                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\n                  /<expr>/g,\n                  function () {\n                    return FTL_EXPR\n                  }\n                )\n              ),\n              lookbehind: true,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^\\$\\{|\\}$/,\n                  alias: 'punctuation'\n                },\n                rest: null\n              }\n            }\n          }\n        }\n      ],\n      keyword: /\\b(?:as)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      'builtin-function': {\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      operator:\n        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n      punctuation: /[,;.:()[\\]{}]/\n    }\n    ftl.string[1].inside.interpolation.inside.rest = ftl\n    Prism.languages.ftl = {\n      'ftl-comment': {\n        // the pattern is shortened to be more efficient\n        pattern: /^<#--[\\s\\S]*/,\n        alias: 'comment'\n      },\n      'ftl-directive': {\n        pattern: /^<[\\s\\S]+>$/,\n        inside: {\n          directive: {\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          punctuation: /^<\\/?|\\/?>$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      },\n      'ftl-interpolation': {\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n        inside: {\n          punctuation: /^\\$\\{|\\}$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      // eslint-disable-next-line regexp/no-useless-lazy\n      var pattern = RegExp(\n        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\n          /<expr>/g,\n          function () {\n            return FTL_EXPR\n          }\n        ),\n        'gi'\n      )\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ftl',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = gap\ngap.displayName = 'gap'\ngap.aliases = []\nfunction gap(Prism) {\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n  Prism.languages.gap = {\n    shell: {\n      pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n      greedy: true,\n      inside: {\n        gap: {\n          pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        punctuation: /^gap>/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        continuation: {\n          pattern: /([\\r\\n])>/,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n      }\n    },\n    keyword:\n      /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    continuation: {\n      pattern: /([\\r\\n])>/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n    punctuation: /[()[\\]{},;.:]/\n  }\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap\n}\n","'use strict'\n\nmodule.exports = gcode\ngcode.displayName = 'gcode'\ngcode.aliases = []\nfunction gcode(Prism) {\n  Prism.languages.gcode = {\n    comment: /;.*|\\B\\(.*?\\)\\B/,\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    keyword: /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n    property: /\\b[A-Z]/,\n    checksum: {\n      pattern: /(\\*)\\d+/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    // T0:0:0\n    punctuation: /[:*]/\n  }\n}\n","'use strict'\n\nmodule.exports = gdscript\ngdscript.displayName = 'gdscript'\ngdscript.aliases = []\nfunction gdscript(Prism) {\n  Prism.languages.gdscript = {\n    comment: /#.*/,\n    string: {\n      pattern:\n        /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\n      greedy: true\n    },\n    'class-name': {\n      // class_name Foo, extends Bar, class InnerClass\n      // export(int) var baz, export(int, 0) var i\n      // as Node\n      // const FOO: int = 9, var bar: bool = true\n      // func add(reference: Item, amount: int) -> Item:\n      pattern:\n        /(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    variable: /\\$\\w+/,\n    number: [\n      /\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,\n      /\\b(?:INF|NAN|PI|TAU)\\b/\n    ],\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\n    punctuation: /[.:,;()[\\]{}]/\n  }\n}\n","'use strict'\n\nmodule.exports = gedcom\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    tag: {\n      // Preceded by level and optional pointer\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'string'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = gherkin\ngherkin.displayName = 'gherkin'\ngherkin.aliases = []\nfunction gherkin(Prism) {\n  ;(function (Prism) {\n    var tableRow = /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|(?:(?!\\|).)*/.source\n    Prism.languages.gherkin = {\n      pystring: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        alias: 'string'\n      },\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[ \\t]*)@\\S*/m,\n        lookbehind: true\n      },\n      feature: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\\r\\n]+(?:\\r?\\n|\\r|$))*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]+/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      scenario: {\n        pattern:\n          /(^[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/m,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]*/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      'table-body': {\n        // Look-behind is used to skip the table head, which has the same format as any table row\n        pattern: RegExp('(' + tableRow + ')(?:' + tableRow + ')+'),\n        lookbehind: true,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          },\n          td: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'string'\n          },\n          punctuation: /\\|/\n        }\n      },\n      'table-head': {\n        pattern: RegExp(tableRow),\n        inside: {\n          th: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'variable'\n          },\n          punctuation: /\\|/\n        }\n      },\n      atrule: {\n        pattern:\n          /(^[ \\t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t])/m,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          }\n        }\n      },\n      outline: {\n        pattern: /<[^>]+>/,\n        alias: 'variable'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = git\ngit.displayName = 'git'\ngit.aliases = []\nfunction git(Prism) {\n  Prism.languages.git = {\n    /*\n     * A simple one line comment like in a git status command\n     * For instance:\n     * $ git status\n     * # On branch infinite-scroll\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n     * # and have 1 and 2 different commits each, respectively.\n     * nothing to commit (working directory clean)\n     */\n    comment: /^#.*/m,\n    /*\n     * Regexp to match the changed lines in a git diff output. Check the example below.\n     */\n    deleted: /^[-–].*/m,\n    inserted: /^\\+.*/m,\n    /*\n     * a string (double and simple quote)\n     */\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    /*\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n     * For instance:\n     * $ git add file.txt\n     */\n    command: {\n      pattern: /^.*\\$ git .*$/m,\n      inside: {\n        /*\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\n         * For instance:\n         * $ git diff --cached\n         * $ git log -p\n         */\n        parameter: /\\s--?\\w+/\n      }\n    },\n    /*\n     * Coordinates displayed in a git diff command\n     * For instance:\n     * $ git diff\n     * diff --git file.txt file.txt\n     * index 6214953..1d54a52 100644\n     * --- file.txt\n     * +++ file.txt\n     * @@ -1 +1,2 @@\n     * -Here's my tetx file\n     * +Here's my text file\n     * +And this is the second line\n     */\n    coord: /^@@.*@@$/m,\n    /*\n     * Match a \"commit [SHA1]\" line in a git log output.\n     * For instance:\n     * $ git log\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n     * Author: lgiraudel\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\n     *\n     *     Add of a new line\n     */\n    'commit-sha1': /^commit \\w{40}$/m\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = glsl\nglsl.displayName = 'glsl'\nglsl.aliases = []\nfunction glsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.glsl = Prism.languages.extend('c', {\n    keyword:\n      /\\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = gml\ngml.displayName = 'gml'\ngml.aliases = []\nfunction gml(Prism) {\n  Prism.languages.gamemakerlanguage = Prism.languages.gml =\n    Prism.languages.extend('clike', {\n      keyword:\n        /\\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\\b/,\n      number:\n        /(?:\\b0x[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]{0,4}/i,\n      operator:\n        /--|\\+\\+|[-+%/=]=?|!=|\\*\\*?=?|<[<=>]?|>[=>]?|&&?|\\^\\^?|\\|\\|?|~|\\b(?:and|at|not|or|with|xor)\\b/,\n      constant:\n        /\\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\\d|numpad\\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\\w+)\\b/,\n      variable:\n        /\\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\\d)|argument|global|local|other|self)\\b/\n    })\n}\n","'use strict'\n\nmodule.exports = gn\ngn.displayName = 'gn'\ngn.aliases = ['gni']\nfunction gn(Prism) {\n  // https://gn.googlesource.com/gn/+/refs/heads/main/docs/reference.md#grammar\n  Prism.languages.gn = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'string-literal': {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[\\s\\S]*?\\}|[a-zA-Z_]\\w*|0x[a-fA-F0-9]{2})/,\n          lookbehind: true,\n          inside: {\n            number: /^\\$0x[\\s\\S]{2}$/,\n            variable: /^\\$\\w+$/,\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    keyword: /\\b(?:else|if)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    'builtin-function': {\n      // a few functions get special highlighting to improve readability\n      pattern:\n        /\\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\\s*\\()/i,\n      alias: 'keyword'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant:\n      /\\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\\b/,\n    number: /-?\\b\\d+\\b/,\n    operator: /[-+!=<>]=?|&&|\\|\\|/,\n    punctuation: /[(){}[\\],.]/\n  }\n  Prism.languages.gn['string-literal'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.gn\n  Prism.languages.gni = Prism.languages.gn\n}\n","'use strict'\n\nmodule.exports = goModule\ngoModule.displayName = 'goModule'\ngoModule.aliases = []\nfunction goModule(Prism) {\n  // https://go.dev/ref/mod#go-mod-file-module\n  Prism.languages['go-mod'] = Prism.languages['go-module'] = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    version: {\n      pattern: /(^|[\\s()[\\],])v\\d+\\.\\d+\\.\\d+(?:[+-][-+.\\w]*)?(?![^\\s()[\\],])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    'go-version': {\n      pattern: /((?:^|\\s)go\\s+)\\d+(?:\\.\\d+){1,2}/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    keyword: {\n      pattern: /^([ \\t]*)(?:exclude|go|module|replace|require|retract)\\b/m,\n      lookbehind: true\n    },\n    operator: /=>/,\n    punctuation: /[()[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = go\ngo.displayName = 'go'\ngo.aliases = []\nfunction go(Prism) {\n  Prism.languages.go = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n    boolean: /\\b(?:_|false|iota|nil|true)\\b/,\n    number: [\n      // binary and octal integers\n      /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n      /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n      /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i\n    ],\n    operator:\n      /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n    builtin:\n      /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n  })\n  Prism.languages.insertBefore('go', 'string', {\n    char: {\n      pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n      greedy: true\n    }\n  })\n  delete Prism.languages.go['class-name']\n}\n","'use strict'\n\nmodule.exports = graphql\ngraphql.displayName = 'graphql'\ngraphql.aliases = []\nfunction graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    description: {\n      pattern:\n        /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'language-markdown': {\n          pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: Prism.languages.markdown\n        }\n      }\n    },\n    string: {\n      pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'atom-input': {\n      pattern: /\\b[A-Z]\\w*Input\\b/,\n      alias: 'class-name'\n    },\n    scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-mutation': {\n      pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-query': {\n      pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword:\n      /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n    operator: /[!=|&]|\\.{3}/,\n    'property-query': /\\w+(?=\\s*\\()/,\n    object: /\\w+(?=\\s*\\{)/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    property: /\\w+/\n  }\n  Prism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n    if (env.language !== 'graphql') {\n      return\n    }\n    /**\n     * get the graphql token stream that we want to customize\n     *\n     * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n     * @type {Token[]}\n     */\n    var validTokens = env.tokens.filter(function (token) {\n      return (\n        typeof token !== 'string' &&\n        token.type !== 'comment' &&\n        token.type !== 'scalar'\n      )\n    })\n    var currentIndex = 0\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {number} offset\n     * @returns {Token | undefined}\n     */\n    function getToken(offset) {\n      return validTokens[currentIndex + offset]\n    }\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {readonly string[]} types\n     * @param {number} [offset=0]\n     * @returns {boolean}\n     */\n    function isTokenType(types, offset) {\n      offset = offset || 0\n      for (var i = 0; i < types.length; i++) {\n        var token = getToken(i + offset)\n        if (!token || token.type !== types[i]) {\n          return false\n        }\n      }\n      return true\n    }\n    /**\n     * Returns the index of the closing bracket to an opening bracket.\n     *\n     * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n     *\n     * If no closing bracket could be found, `-1` will be returned.\n     *\n     * @param {RegExp} open\n     * @param {RegExp} close\n     * @returns {number}\n     */\n    function findClosingBracket(open, close) {\n      var stackHeight = 1\n      for (var i = currentIndex; i < validTokens.length; i++) {\n        var token = validTokens[i]\n        var content = token.content\n        if (token.type === 'punctuation' && typeof content === 'string') {\n          if (open.test(content)) {\n            stackHeight++\n          } else if (close.test(content)) {\n            stackHeight--\n            if (stackHeight === 0) {\n              return i\n            }\n          }\n        }\n      }\n      return -1\n    }\n    /**\n     * Adds an alias to the given token.\n     *\n     * @param {Token} token\n     * @param {string} alias\n     * @returns {void}\n     */\n    function addAlias(token, alias) {\n      var aliases = token.alias\n      if (!aliases) {\n        token.alias = aliases = []\n      } else if (!Array.isArray(aliases)) {\n        token.alias = aliases = [aliases]\n      }\n      aliases.push(alias)\n    }\n    for (; currentIndex < validTokens.length; ) {\n      var startToken = validTokens[currentIndex++] // add special aliases for mutation tokens\n      if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n        // any array of the names of all input variables (if any)\n        var inputVariables = []\n        if (\n          isTokenType(['definition-mutation', 'punctuation']) &&\n          getToken(1).content === '('\n        ) {\n          // definition\n          currentIndex += 2 // skip 'definition-mutation' and 'punctuation'\n          var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/)\n          if (definitionEnd === -1) {\n            continue\n          } // find all input variables\n          for (; currentIndex < definitionEnd; currentIndex++) {\n            var t = getToken(0)\n            if (t.type === 'variable') {\n              addAlias(t, 'variable-input')\n              inputVariables.push(t.content)\n            }\n          }\n          currentIndex = definitionEnd + 1\n        }\n        if (\n          isTokenType(['punctuation', 'property-query']) &&\n          getToken(0).content === '{'\n        ) {\n          currentIndex++ // skip opening bracket\n          addAlias(getToken(0), 'property-mutation')\n          if (inputVariables.length > 0) {\n            var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/)\n            if (mutationEnd === -1) {\n              continue\n            } // give references to input variables a special alias\n            for (var i = currentIndex; i < mutationEnd; i++) {\n              var varToken = validTokens[i]\n              if (\n                varToken.type === 'variable' &&\n                inputVariables.indexOf(varToken.content) >= 0\n              ) {\n                addAlias(varToken, 'variable-input')\n              }\n            }\n          }\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = groovy\ngroovy.displayName = 'groovy'\ngroovy.aliases = []\nfunction groovy(Prism) {\n  Prism.languages.groovy = Prism.languages.extend('clike', {\n    string: [\n      {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern:\n          /(\"\"\"|''')(?:[^\\\\]|\\\\[\\s\\S])*?\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true\n      },\n      {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern: /([\"'/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n    number:\n      /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n    operator: {\n      pattern:\n        /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n      lookbehind: true\n    },\n    punctuation: /\\.+|[{}[\\];(),:$]/\n  })\n  Prism.languages.insertBefore('groovy', 'string', {\n    shebang: {\n      pattern: /#!.+/,\n      alias: 'comment'\n    }\n  })\n  Prism.languages.insertBefore('groovy', 'punctuation', {\n    'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n  })\n  Prism.languages.insertBefore('groovy', 'function', {\n    annotation: {\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true,\n      alias: 'punctuation'\n    }\n  }) // Handle string interpolation\n  Prism.hooks.add('wrap', function (env) {\n    if (env.language === 'groovy' && env.type === 'string') {\n      var delimiter = env.content.value[0]\n      if (delimiter != \"'\") {\n        var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        if (delimiter === '$') {\n          pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        } // To prevent double HTML-encoding we have to decode env.content first\n        env.content.value = env.content.value\n          .replace(/&lt;/g, '<')\n          .replace(/&amp;/g, '&')\n        env.content = Prism.highlight(env.content.value, {\n          expression: {\n            pattern: pattern,\n            lookbehind: true,\n            inside: Prism.languages.groovy\n          }\n        })\n        env.classes.push(delimiter === '/' ? 'regex' : 'gstring')\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = haml\nhaml.displayName = 'haml'\nhaml.aliases = []\nfunction haml(Prism) {\n  Prism.register(refractorRuby)\n  /* TODO\nHandle multiline code after tag\n%foo= some |\nmultiline |\ncode |\n*/\n  ;(function (Prism) {\n    Prism.languages.haml = {\n      // Multiline stuff should appear before the rest\n      'multiline-comment': {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      'multiline-code': [\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*\\|[\\t ]*)*/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        }\n      ],\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'symbol'\n          }\n        }\n      },\n      markup: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n        lookbehind: true\n      },\n      tag: {\n        // Allows for one nested group of braces\n        pattern:\n          /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^{}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              // Lookbehind tries to prevent interpolations from breaking it all\n              // Allows for one nested group of braces\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^{}])+\\}/,\n              lookbehind: true,\n              inside: Prism.languages.ruby\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                  lookbehind: true\n                },\n                'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[=(),]/\n              }\n            },\n            {\n              pattern: /\\[[^\\]]+\\]/,\n              inside: Prism.languages.ruby\n            }\n          ],\n          punctuation: /[<>]/\n        }\n      },\n      code: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n        lookbehind: true,\n        inside: Prism.languages.ruby\n      },\n      // Interpolations in plain text\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          ruby: {\n            pattern: /[\\s\\S]+/,\n            inside: Prism.languages.ruby\n          }\n        }\n      },\n      punctuation: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n        lookbehind: true\n      }\n    }\n    var filter_pattern =\n      '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ].+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+' // Non exhaustive list of available filters and associated languages\n    var filters = [\n      'css',\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'erb',\n      'javascript',\n      'less',\n      'markdown',\n      'ruby',\n      'scss',\n      'textile'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('{{filter_name}}', function () {\n              return filter.filter\n            })\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'symbol'\n            },\n            text: {\n              pattern: /[\\s\\S]+/,\n              alias: [filter.language, 'language-' + filter.language],\n              inside: Prism.languages[filter.language]\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('haml', 'filter', all_filters)\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = handlebars\nhandlebars.displayName = 'handlebars'\nhandlebars.aliases = ['hbs']\nfunction handlebars(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.handlebars = {\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n      delimiter: {\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      boolean: /\\b(?:false|true)\\b/,\n      block: {\n        pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      brackets: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          punctuation: /\\[|\\]/,\n          variable: /[\\s\\S]+/\n        }\n      },\n      punctuation: /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n      variable: /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'handlebars',\n        handlebarsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(\n        env,\n        'handlebars'\n      )\n    })\n    Prism.languages.hbs = Prism.languages.handlebars\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = haskell\nhaskell.displayName = 'haskell'\nhaskell.aliases = ['hs']\nfunction haskell(Prism) {\n  Prism.languages.haskell = {\n    comment: {\n      pattern:\n        /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|$)|\\{-[\\s\\S]*?-\\})/m,\n      lookbehind: true\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\(?:\\S|\\s+\\\\))*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|hiding|import|qualified)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n    // decimal integers and floating point numbers | octal integers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n    operator: [\n      {\n        // infix operator\n        pattern: /`(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n        greedy: true\n      },\n      {\n        // function composition\n        pattern: /(\\s)\\.(?=\\s)/,\n        lookbehind: true\n      }, // Most of this is needed because of the meaning of a single '.'.\n      // If it stands alone freely, it is the function composition.\n      // It may also be a separator between a module name and an identifier => no\n      // operator. If it comes together with other special characters it is an\n      // operator too.\n      //\n      // This regex means: /[-!#$%*+=?&@|~.:<>^\\\\\\/]+/ without /\\./.\n      /[-!#$%*+=?&@|~:<>^\\\\\\/][-!#$%*+=?&@|~.:<>^\\\\\\/]*|\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+/\n    ],\n    // In Haskell, nearly everything is a variable, do not highlight these.\n    hvariable: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    constant: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.hs = Prism.languages.haskell\n}\n","'use strict'\n\nmodule.exports = haxe\nhaxe.displayName = 'haxe'\nhaxe.aliases = []\nfunction haxe(Prism) {\n  Prism.languages.haxe = Prism.languages.extend('clike', {\n    string: {\n      // Strings can be multi-line\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    'class-name': [\n      {\n        pattern:\n          /(\\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\\s+)[A-Z_]\\w*/,\n        lookbehind: true\n      }, // based on naming convention\n      /\\b[A-Z]\\w*/\n    ],\n    // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n    keyword:\n      /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\\.)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:<[^<>]*>\\s*)?\\()/i,\n      greedy: true\n    },\n    operator: /\\.{3}|\\+\\+|--|&&|\\|\\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/\n  })\n  Prism.languages.insertBefore('haxe', 'string', {\n    'string-interpolation': {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^{}]+\\})/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{?|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.haxe\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'class-name', {\n    regex: {\n      pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[a-z]*/,\n      greedy: true,\n      inside: {\n        'regex-flags': /\\b[a-z]+$/,\n        'regex-source': {\n          pattern: /^(~\\/)[\\s\\S]+(?=\\/$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^~\\/|\\/$/\n      }\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'keyword', {\n    preprocessor: {\n      pattern: /#(?:else|elseif|end|if)\\b.*/,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /@:?[\\w.]+/,\n      alias: 'symbol'\n    },\n    reification: {\n      pattern: /\\$(?:\\w+|(?=\\{))/,\n      alias: 'important'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = hcl\nhcl.displayName = 'hcl'\nhcl.aliases = []\nfunction hcl(Prism) {\n  Prism.languages.hcl = {\n    comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    heredoc: {\n      pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n      greedy: true,\n      alias: 'string'\n    },\n    keyword: [\n      {\n        pattern:\n          /(?:data|resource)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\n        inside: {\n          type: {\n            pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      {\n        pattern:\n          /(?:backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\n        inside: {\n          type: {\n            pattern:\n              /(backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      /[\\w-]+(?=\\s+\\{)/\n    ],\n    property: [/[-\\w\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n    string: {\n      pattern:\n        /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n          lookbehind: true,\n          inside: {\n            type: {\n              pattern:\n                /(\\b(?:count|data|local|module|path|self|terraform|var)\\b\\.)[\\w\\*]+/i,\n              lookbehind: true,\n              alias: 'variable'\n            },\n            keyword: /\\b(?:count|data|local|module|path|self|terraform|var)\\b/i,\n            function: /\\w+(?=\\()/,\n            string: {\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              greedy: true\n            },\n            number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n            punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n          }\n        }\n      }\n    },\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    punctuation: /[=\\[\\]{}]/\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = hlsl\nhlsl.displayName = 'hlsl'\nhlsl.aliases = []\nfunction hlsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.hlsl = Prism.languages.extend('c', {\n    // Regarding keywords and class names:\n    // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\n    'class-name': [\n      Prism.languages.c['class-name'],\n      /\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\n    ],\n    keyword: [\n      // HLSL keyword\n      /\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/, // scalar, vector, and matrix types\n      /\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\n    ],\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\n    boolean: /\\b(?:false|true)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = hoon\nhoon.displayName = 'hoon'\nhoon.aliases = []\nfunction hoon(Prism) {\n  Prism.languages.hoon = {\n    comment: {\n      pattern: /::.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    constant: /%(?:\\.[ny]|[\\w-]+)/,\n    'class-name': /@(?:[a-z0-9-]*[a-z0-9])?|\\*/i,\n    function: /(?:\\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,\n    keyword:\n      /\\.[\\^\\+\\*=\\?]|![><:\\.=\\?!]|=[>|:,\\.\\-\\^<+;/~\\*\\?]|\\?[>|:\\.\\-\\^<\\+&~=@!]|\\|[\\$_%:\\.\\-\\^~\\*=@\\?]|\\+[|\\$\\+\\*]|:[_\\-\\^\\+~\\*]|%[_:\\.\\-\\^\\+~\\*=]|\\^[|:\\.\\-\\+&~\\*=\\?]|\\$[|_%:<>\\-\\^&~@=\\?]|;[:<\\+;\\/~\\*=]|~[>|\\$_%<\\+\\/&=\\?!]|--|==/\n  }\n}\n","'use strict'\n\nmodule.exports = hpkp\nhpkp.displayName = 'hpkp'\nhpkp.aliases = []\nfunction hpkp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */\n  Prism.languages.hpkp = {\n    directive: {\n      pattern:\n        /\\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","'use strict'\n\nmodule.exports = hsts\nhsts.displayName = 'hsts'\nhsts.aliases = []\nfunction hsts(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */\n  Prism.languages.hsts = {\n    directive: {\n      pattern: /\\b(?:includeSubDomains|max-age|preload)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","'use strict'\n\nmodule.exports = http\nhttp.displayName = 'http'\nhttp.aliases = []\nfunction http(Prism) {\n  ;(function (Prism) {\n    /**\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function headerValueOf(name) {\n      return RegExp('(^(?:' + name + '):[ \\t]*(?![ \\t]))[^]+', 'i')\n    }\n    Prism.languages.http = {\n      'request-line': {\n        pattern:\n          /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[\\d.]+/m,\n        inside: {\n          // HTTP Method\n          method: {\n            pattern: /^[A-Z]+\\b/,\n            alias: 'property'\n          },\n          // Request Target e.g. http://example.com, /path/to/file\n          'request-target': {\n            pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n            lookbehind: true,\n            alias: 'url',\n            inside: Prism.languages.uri\n          },\n          // HTTP Version\n          'http-version': {\n            pattern: /^(\\s)HTTP\\/[\\d.]+/,\n            lookbehind: true,\n            alias: 'property'\n          }\n        }\n      },\n      'response-status': {\n        pattern: /^HTTP\\/[\\d.]+ \\d+ .+/m,\n        inside: {\n          // HTTP Version\n          'http-version': {\n            pattern: /^HTTP\\/[\\d.]+/,\n            alias: 'property'\n          },\n          // Status Code\n          'status-code': {\n            pattern: /^(\\s)\\d+(?=\\s)/,\n            lookbehind: true,\n            alias: 'number'\n          },\n          // Reason Phrase\n          'reason-phrase': {\n            pattern: /^(\\s).+/,\n            lookbehind: true,\n            alias: 'string'\n          }\n        }\n      },\n      header: {\n        pattern: /^[\\w-]+:.+(?:(?:\\r\\n?|\\n)[ \\t].+)*/m,\n        inside: {\n          'header-value': [\n            {\n              pattern: headerValueOf(/Content-Security-Policy/.source),\n              lookbehind: true,\n              alias: ['csp', 'languages-csp'],\n              inside: Prism.languages.csp\n            },\n            {\n              pattern: headerValueOf(/Public-Key-Pins(?:-Report-Only)?/.source),\n              lookbehind: true,\n              alias: ['hpkp', 'languages-hpkp'],\n              inside: Prism.languages.hpkp\n            },\n            {\n              pattern: headerValueOf(/Strict-Transport-Security/.source),\n              lookbehind: true,\n              alias: ['hsts', 'languages-hsts'],\n              inside: Prism.languages.hsts\n            },\n            {\n              pattern: headerValueOf(/[^:]+/.source),\n              lookbehind: true\n            }\n          ],\n          'header-name': {\n            pattern: /^[^:]+/,\n            alias: 'keyword'\n          },\n          punctuation: /^:/\n        }\n      }\n    } // Create a mapping of Content-Type headers to language definitions\n    var langs = Prism.languages\n    var httpLanguages = {\n      'application/javascript': langs.javascript,\n      'application/json': langs.json || langs.javascript,\n      'application/xml': langs.xml,\n      'text/xml': langs.xml,\n      'text/html': langs.html,\n      'text/css': langs.css,\n      'text/plain': langs.plain\n    } // Declare which types can also be suffixes\n    var suffixTypes = {\n      'application/json': true,\n      'application/xml': true\n    }\n    /**\n     * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n     *\n     * @param {string} contentType\n     * @returns {string}\n     */\n    function getSuffixPattern(contentType) {\n      var suffix = contentType.replace(/^[a-z]+\\//, '')\n      var suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])'\n      return '(?:' + contentType + '|' + suffixPattern + ')'\n    } // Insert each content type parser that has its associated language\n    // currently loaded.\n    var options\n    for (var contentType in httpLanguages) {\n      if (httpLanguages[contentType]) {\n        options = options || {}\n        var pattern = suffixTypes[contentType]\n          ? getSuffixPattern(contentType)\n          : contentType\n        options[contentType.replace(/\\//g, '-')] = {\n          pattern: RegExp(\n            '(' +\n              /content-type:\\s*/.source +\n              pattern +\n              /(?:(?:\\r\\n?|\\n)[\\w-].*)*(?:\\r(?:\\n|(?!\\n))|\\n)/.source +\n              ')' + // This is a little interesting:\n              // The HTTP format spec required 1 empty line before the body to make everything unambiguous.\n              // However, when writing code by hand (e.g. to display on a website) people can forget about this,\n              // so we want to be liberal here. We will allow the empty line to be omitted if the first line of\n              // the body does not start with a [\\w-] character (as headers do).\n              /[^ \\t\\w-][\\s\\S]*/.source,\n            'i'\n          ),\n          lookbehind: true,\n          inside: httpLanguages[contentType]\n        }\n      }\n    }\n    if (options) {\n      Prism.languages.insertBefore('http', 'header', options)\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ichigojam\nichigojam.displayName = 'ichigojam'\nichigojam.aliases = []\nfunction ichigojam(Prism) {\n  // according to the offical reference (EN)\n  // https://ichigojam.net/IchigoJam-en.html\n  Prism.languages.ichigojam = {\n    comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n    label: /(?:\\B@\\S+)/,\n    operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n    punctuation: /[\\[,;:()\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = icon\nicon.displayName = 'icon'\nicon.aliases = []\nfunction icon(Prism) {\n  Prism.languages.icon = {\n    comment: /#.*/,\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n    'builtin-keyword': {\n      pattern:\n        /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\$\\w+/,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n    operator:\n      /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n    punctuation: /[\\[\\](){},;]/\n  }\n}\n","'use strict'\n\nmodule.exports = icuMessageFormat\nicuMessageFormat.displayName = 'icuMessageFormat'\nicuMessageFormat.aliases = []\nfunction icuMessageFormat(Prism) {\n  // https://unicode-org.github.io/icu/userguide/format_parse/messages/\n  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @param {number} level\n     * @returns {string}\n     */\n    function nested(source, level) {\n      if (level <= 0) {\n        return /[]/.source\n      } else {\n        return source.replace(/<SELF>/g, function () {\n          return nested(source, level - 1)\n        })\n      }\n    }\n    var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/\n    var escape = {\n      pattern: /''/,\n      greedy: true,\n      alias: 'operator'\n    }\n    var string = {\n      pattern: stringPattern,\n      greedy: true,\n      inside: {\n        escape: escape\n      }\n    }\n    var argumentSource = nested(\n      /\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(\n        /<STR>/g,\n        function () {\n          return stringPattern.source\n        }\n      ),\n      8\n    )\n    var nestedMessage = {\n      pattern: RegExp(argumentSource),\n      inside: {\n        message: {\n          pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        'message-delimiter': {\n          pattern: /./,\n          alias: 'punctuation'\n        }\n      }\n    }\n    Prism.languages['icu-message-format'] = {\n      argument: {\n        pattern: RegExp(argumentSource),\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            inside: {\n              'argument-name': {\n                pattern: /^(\\s*)[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'choice-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\n                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  punctuation: /\\|/,\n                  range: {\n                    pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\n                    lookbehind: true,\n                    inside: {\n                      operator: /[<#\\u2264]/,\n                      number: /\\S+/\n                    }\n                  },\n                  rest: null // see below\n                }\n              },\n              'plural-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern:\n                  /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  offset: /^offset:\\s*\\d+/,\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /=\\d+|[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^(?:few|many|one|other|two|zero)$/\n                    }\n                  }\n                }\n              },\n              'select-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^other$/\n                    }\n                  }\n                }\n              },\n              keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\n              'arg-type': {\n                pattern: /\\b(?:date|duration|number|ordinal|spellout|time)\\b/,\n                alias: 'keyword'\n              },\n              'arg-skeleton': {\n                pattern: /(,\\s*)::[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'arg-style': {\n                pattern:\n                  /(,\\s*)(?:currency|full|integer|long|medium|percent|short)(?=\\s*$)/,\n                lookbehind: true\n              },\n              'arg-style-text': {\n                pattern: RegExp(\n                  /(^\\s*,\\s*(?=\\S))/.source +\n                    nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) +\n                    '$'\n                ),\n                lookbehind: true,\n                alias: 'string'\n              },\n              punctuation: /,/\n            }\n          },\n          'argument-delimiter': {\n            pattern: /./,\n            alias: 'operator'\n          }\n        }\n      },\n      escape: escape,\n      string: string\n    }\n    nestedMessage.inside.message.inside = Prism.languages['icu-message-format']\n    Prism.languages['icu-message-format'].argument.inside.content.inside[\n      'choice-style'\n    ].inside.rest = Prism.languages['icu-message-format']\n  })(Prism)\n}\n","'use strict'\nvar refractorHaskell = require('./haskell.js')\nmodule.exports = idris\nidris.displayName = 'idris'\nidris.aliases = ['idr']\nfunction idris(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.idris = Prism.languages.extend('haskell', {\n    comment: {\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n    },\n    keyword:\n      /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n    builtin: undefined\n  })\n  Prism.languages.insertBefore('idris', 'keyword', {\n    'import-statement': {\n      pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }\n  })\n  Prism.languages.idr = Prism.languages.idris\n}\n","'use strict'\n\nmodule.exports = iecst\niecst.displayName = 'iecst'\niecst.aliases = []\nfunction iecst(Prism) {\n  Prism.languages.iecst = {\n    comment: [\n      {\n        pattern:\n          /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\(\\*[\\s\\S]*?(?:\\*\\)|$)|\\{[\\s\\S]*?(?:\\}|$))/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: [\n      /\\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\\b/i,\n      /\\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\\b/\n    ],\n    'class-name':\n      /\\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\\b/,\n    address: {\n      pattern: /%[IQM][XBWDL][\\d.]*|%[IQ][\\d.]*/,\n      alias: 'symbol'\n    },\n    number:\n      /\\b(?:16#[\\da-f]+|2#[01_]+|0x[\\da-f]+)\\b|\\b(?:D|DT|T|TOD)#[\\d_shmd:]*|\\b[A-Z]*#[\\d.,_]*|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/,\n    operator:\n      /S?R?:?=>?|&&?|\\*\\*?|<[=>]?|>=?|[-:^/+#]|\\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    punctuation: /[()[\\].,;]/\n  }\n}\n","'use strict'\n\nmodule.exports = ignore\nignore.displayName = 'ignore'\nignore.aliases = ['gitignore', 'hgignore', 'npmignore']\nfunction ignore(Prism) {\n  ;(function (Prism) {\n    Prism.languages.ignore = {\n      // https://git-scm.com/docs/gitignore\n      comment: /^#.*/m,\n      entry: {\n        pattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\n        alias: 'string',\n        inside: {\n          operator: /^!|\\*\\*?|\\?/,\n          regex: {\n            pattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\n            lookbehind: true\n          },\n          punctuation: /\\//\n        }\n      }\n    }\n    Prism.languages.gitignore = Prism.languages.ignore\n    Prism.languages.hgignore = Prism.languages.ignore\n    Prism.languages.npmignore = Prism.languages.ignore\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = inform7\ninform7.displayName = 'inform7'\ninform7.aliases = []\nfunction inform7(Prism) {\n  Prism.languages.inform7 = {\n    string: {\n      pattern: /\"[^\"]*\"/,\n      inside: {\n        substitution: {\n          pattern: /\\[[^\\[\\]]+\\]/,\n          inside: {\n            delimiter: {\n              pattern: /\\[|\\]/,\n              alias: 'punctuation'\n            } // See rest below\n          }\n        }\n      }\n    },\n    comment: {\n      pattern: /\\[[^\\[\\]]+\\]/,\n      greedy: true\n    },\n    title: {\n      pattern: /^[ \\t]*(?:book|chapter|part(?! of)|section|table|volume)\\b.+/im,\n      alias: 'important'\n    },\n    number: {\n      pattern:\n        /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?(?:(?!\\d)\\w+)?|\\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\\b(?!-)/i,\n      lookbehind: true\n    },\n    verb: {\n      pattern:\n        /(^|[^-])\\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    keyword: {\n      pattern:\n        /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n      lookbehind: true\n    },\n    property: {\n      pattern:\n        /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    position: {\n      pattern:\n        /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      pattern:\n        /(^|[^-])\\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    punctuation: /[.,:;(){}]/\n  }\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest =\n    Prism.languages.inform7 // We don't want the remaining text in the substitution to be highlighted as the string.\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\n    pattern: /\\S(?:\\s*\\S)*/,\n    alias: 'comment'\n  }\n}\n","'use strict'\n\nmodule.exports = ini\nini.displayName = 'ini'\nini.aliases = []\nfunction ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n","'use strict'\n\nmodule.exports = io\nio.displayName = 'io'\nio.aliases = []\nfunction io(Prism) {\n  Prism.languages.io = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*|#.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'triple-quoted-string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n    builtin:\n      /\\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?/i,\n    operator:\n      /[=!*/%+\\-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|\\b(?:and|not|or|return)\\b|@@?|\\?\\??|\\.\\./,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = j\nj.displayName = 'j'\nj.aliases = []\nfunction j(Prism) {\n  Prism.languages.j = {\n    comment: {\n      pattern: /\\bNB\\..*/,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n    verb: {\n      // Negative look-ahead prevents bad highlighting\n      // of ^: ;. =. =: !. !:\n      pattern:\n        /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:ad|ar|[ejpx])_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_\\b(?!\\.))/,\n    adverb: {\n      pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n      alias: 'builtin'\n    },\n    operator: /[=a][.:]|_\\./,\n    conjunction: {\n      pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n      alias: 'variable'\n    },\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = java\njava.displayName = 'java'\njava.aliases = []\nfunction java(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/ // full package (optional) + parent classes (optional)\n    var classNamePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the java naming conventions\n    var className = {\n      pattern: RegExp(classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /\\./\n      }\n    }\n    Prism.languages.java = Prism.languages.extend('clike', {\n      string: {\n        pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        lookbehind: true,\n        greedy: true\n      },\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      function: [\n        Prism.languages.clike.function,\n        {\n          pattern: /(::\\s*)[a-z_]\\w*/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'string', {\n      'triple-quoted-string': {\n        // http://openjdk.java.net/jeps/355#Description\n        pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      },\n      char: {\n        pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'class-name', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      },\n      namespace: {\n        pattern: RegExp(\n          /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(\n            /<keyword>/g,\n            function () {\n              return keywords.source\n            }\n          )\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJava = require('./java.js')\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = javadoc\njavadoc.displayName = 'javadoc'\njavadoc.aliases = []\nfunction javadoc(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorJavadoclike)\n  ;(function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\n    var reference =\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\n        /<mem>/g,\n        function () {\n          return memberReference\n        }\n      )\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(\n          /(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/\n            .source +\n            '(?:' +\n            reference +\n            ')'\n        ),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [\n        {\n          pattern:\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n          lookbehind: true,\n          inside: {\n            code: {\n              // there can't be any HTML inside of {@code} tags\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: Prism.languages.java,\n              alias: 'language-java'\n            }\n          }\n        },\n        {\n          pattern:\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n          lookbehind: true,\n          inside: {\n            line: {\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: {\n                // highlight HTML tags and entities\n                tag: Prism.languages.markup.tag,\n                entity: Prism.languages.markup.entity,\n                code: {\n                  // everything else is Java code\n                  pattern: /.+/,\n                  inside: Prism.languages.java,\n                  alias: 'language-java'\n                }\n              }\n            }\n          }\n        }\n      ],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    })\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = javadoclike\njavadoclike.displayName = 'javadoclike'\njavadoclike.aliases = []\nfunction javadoclike(Prism) {\n  ;(function (Prism) {\n    var javaDocLike = (Prism.languages.javadoclike = {\n      parameter: {\n        pattern:\n          /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n        lookbehind: true\n      },\n      keyword: {\n        // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n        // @word, {@word}\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n        lookbehind: true\n      },\n      punctuation: /[{}]/\n    })\n    /**\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n     *\n     * @param {string} lang the language add doc comment support to.\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n     */\n    function docCommentSupport(lang, callback) {\n      var tokenName = 'doc-comment'\n      var grammar = Prism.languages[lang]\n      if (!grammar) {\n        return\n      }\n      var token = grammar[tokenName]\n      if (!token) {\n        // add doc comment: /** */\n        var definition = {}\n        definition[tokenName] = {\n          pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          alias: 'comment'\n        }\n        grammar = Prism.languages.insertBefore(lang, 'comment', definition)\n        token = grammar[tokenName]\n      }\n      if (token instanceof RegExp) {\n        // convert regex to object\n        token = grammar[tokenName] = {\n          pattern: token\n        }\n      }\n      if (Array.isArray(token)) {\n        for (var i = 0, l = token.length; i < l; i++) {\n          if (token[i] instanceof RegExp) {\n            token[i] = {\n              pattern: token[i]\n            }\n          }\n          callback(token[i])\n        }\n      } else {\n        callback(token)\n      }\n    }\n    /**\n     * Adds doc-comment support to the given languages for the given documentation language.\n     *\n     * @param {string[]|string} languages\n     * @param {Object} docLanguage\n     */\n    function addSupport(languages, docLanguage) {\n      if (typeof languages === 'string') {\n        languages = [languages]\n      }\n      languages.forEach(function (lang) {\n        docCommentSupport(lang, function (pattern) {\n          if (!pattern.inside) {\n            pattern.inside = {}\n          }\n          pattern.inside.rest = docLanguage\n        })\n      })\n    }\n    Object.defineProperty(javaDocLike, 'addSupport', {\n      value: addSupport\n    })\n    javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = javascript\njavascript.displayName = 'javascript'\njavascript.aliases = ['js']\nfunction javascript(Prism) {\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [\n      Prism.languages.clike['class-name'],\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /((?:^|\\})\\s*)catch\\b/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n        lookbehind: true\n      }\n    ],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function:\n      /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    number: {\n      pattern: RegExp(\n        /(^|[^\\w$])/.source +\n          '(?:' + // constant\n          (/NaN|Infinity/.source +\n            '|' + // binary integer\n            /0[bB][01]+(?:_[01]+)*n?/.source +\n            '|' + // octal integer\n            /0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n            '|' + // hexadecimal integer\n            /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n            '|' + // decimal bigint\n            /\\d+(?:_\\d+)*n/.source +\n            '|' + // decimal number (integer or float) but no bigint\n            /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/\n              .source) +\n          ')' +\n          /(?![\\w$])/.source\n      ),\n      lookbehind: true\n    },\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n  })\n  Prism.languages.javascript['class-name'][0].pattern =\n    /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      // eslint-disable-next-line regexp/no-dupe-characters-character-class\n      pattern:\n        /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\/|\\/$/,\n        'regex-flags': /^[a-z]+$/\n      }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern:\n        /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [\n      {\n        pattern:\n          /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    ],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  })\n  Prism.languages.insertBefore('javascript', 'string', {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    'template-string': {\n      pattern:\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'string-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    }\n  })\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'literal-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n      lookbehind: true,\n      alias: 'property'\n    }\n  })\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript') // add attribute support for all DOM events.\n    // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n    Prism.languages.markup.tag.addAttribute(\n      /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/\n        .source,\n      'javascript'\n    )\n  }\n  Prism.languages.js = Prism.languages.javascript\n}\n","'use strict'\n\nmodule.exports = javastacktrace\njavastacktrace.displayName = 'javastacktrace'\njavastacktrace.aliases = []\nfunction javastacktrace(Prism) {\n  // Specification:\n  // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/Throwable.html#printStackTrace()\n  Prism.languages.javastacktrace = {\n    // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: com.example.myproject.MyProjectServletException\n    // Caused by: MidLevelException: LowLevelException\n    // Suppressed: Resource$CloseFailException: Resource ID = 0\n    summary: {\n      pattern:\n        /^([\\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern:\n            /^([\\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n          lookbehind: true\n        },\n        // the current thread if the summary starts with 'Exception in thread'\n        string: {\n          pattern: /^(\\s*)\"[^\"]*\"/,\n          lookbehind: true\n        },\n        exceptions: {\n          pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n          lookbehind: true,\n          inside: {\n            'class-name': /[\\w$]+$/,\n            namespace: /\\b[a-z]\\w*\\b/,\n            punctuation: /\\./\n          }\n        },\n        message: {\n          pattern: /(:\\s*)\\S.*/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        punctuation: /:/\n      }\n    },\n    // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n    // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n    // at java.base/java.lang.Class.forName0(Native Method)\n    // at Util.<init>(Unknown Source)\n    // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\n    // at com.foo.loader//com.foo.bar.App.run(App.java:12)\n    // at acme@2.1/org.acme.Lib.test(Lib.java:80)\n    // at MyClass.mash(MyClass.java:9)\n    //\n    // More information:\n    // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\n    //\n    // A valid Java module name is defined as:\n    //   \"A module name consists of one or more Java identifiers (§3.8) separated by \".\" tokens.\"\n    // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\n    //\n    // A Java module version is defined by this class:\n    // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\n    // This is the implementation of the `parse` method in JDK13:\n    // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\n    // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\n    'stack-frame': {\n      pattern: /^([\\t ]*)at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)at(?= )/,\n          lookbehind: true\n        },\n        source: [\n          // (Main.java:15)\n          // (Main.scala:15)\n          {\n            pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\n            lookbehind: true,\n            inside: {\n              file: /^\\w+\\.\\w+/,\n              punctuation: /:/,\n              'line-number': {\n                pattern: /\\b\\d+\\b/,\n                alias: 'number'\n              }\n            }\n          }, // (Unknown Source)\n          // (Native Method)\n          // (...something...)\n          {\n            pattern: /(\\()[^()]*(?=\\))/,\n            lookbehind: true,\n            inside: {\n              keyword: /^(?:Native Method|Unknown Source)$/\n            }\n          }\n        ],\n        'class-name': /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n        function: /(?:<init>|[\\w$]+)(?=\\()/,\n        'class-loader': {\n          pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        module: {\n          pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\n          lookbehind: true,\n          inside: {\n            version: {\n              pattern: /(@)[\\s\\S]+/,\n              lookbehind: true,\n              alias: 'number'\n            },\n            punctuation: /[@.]/\n          }\n        },\n        namespace: {\n          pattern: /(?:\\b[a-z]\\w*\\.)+/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()/.]/\n      }\n    },\n    // ... 32 more\n    // ... 32 common frames omitted\n    more: {\n      pattern: /^([\\t ]*)\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\.{3}/,\n        number: /\\d+/,\n        keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = jexl\njexl.displayName = 'jexl'\njexl.aliases = []\nfunction jexl(Prism) {\n  Prism.languages.jexl = {\n    string: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    transform: {\n      pattern:\n        /(\\|\\s*)[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*/,\n      alias: 'function',\n      lookbehind: true\n    },\n    function:\n      /[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*\\s*(?=\\()/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+\\b/,\n    operator: /[<>!]=?|-|\\+|&&|==|\\|\\|?|\\/\\/?|[?:*^%]/,\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\bin\\b/,\n    punctuation: /[{}[\\](),.]/\n  }\n}\n","'use strict'\n\nmodule.exports = jolie\njolie.displayName = 'jolie'\njolie.aliases = []\nfunction jolie(Prism) {\n  Prism.languages.jolie = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /((?:\\b(?:as|courier|embed|in|inputPort|outputPort|service)\\b|@)[ \\t]*)\\w+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*[@(])/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n    operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[?\\/%^@|]/,\n    punctuation: /[()[\\]{},;.:]/,\n    builtin:\n      /\\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\\b/\n  })\n  Prism.languages.insertBefore('jolie', 'keyword', {\n    aggregates: {\n      pattern:\n        /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n      lookbehind: true,\n      inside: {\n        keyword: /\\bwith\\b/,\n        'class-name': /\\w+/,\n        punctuation: /,/\n      }\n    },\n    redirects: {\n      pattern:\n        /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n      lookbehind: true,\n      inside: {\n        punctuation: /,/,\n        'class-name': /\\w+/,\n        operator: /=>/\n      }\n    },\n    property: {\n      pattern:\n        /\\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\\b(?=[ \\t]*:)/\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = jq\njq.displayName = 'jq'\njq.aliases = []\nfunction jq(Prism) {\n  ;(function (Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var string = RegExp(\n      /(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(\n        /__/g,\n        function () {\n          return interpolation\n        }\n      )\n    )\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    }\n    var jq = (Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword:\n        /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [\n        {\n          pattern: /\\|=?/,\n          alias: 'pipe'\n        },\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/\n      ],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    })\n    stringInterpolation.interpolation.inside.content.inside = jq\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = jsExtras\njsExtras.displayName = 'jsExtras'\njsExtras.aliases = []\nfunction jsExtras(Prism) {\n  ;(function (Prism) {\n    Prism.languages.insertBefore('javascript', 'function-variable', {\n      'method-variable': {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' +\n            Prism.languages.javascript['function-variable'].pattern.source\n        ),\n        lookbehind: true,\n        alias: ['function-variable', 'method', 'function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'function', {\n      method: {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source\n        ),\n        lookbehind: true,\n        alias: ['function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'constant', {\n      'known-class-name': [\n        {\n          // standard built-ins\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n          pattern:\n            /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n          alias: 'class-name'\n        },\n        {\n          // errors\n          pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n          alias: 'class-name'\n        }\n      ]\n    })\n    /**\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n     *\n     * @param {string} source\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function withId(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source\n        }),\n        flags\n      )\n    }\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      imports: {\n        // https://tc39.es/ecma262/#sec-imports\n        pattern: withId(\n          /(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      exports: {\n        // https://tc39.es/ecma262/#sec-exports\n        pattern: withId(\n          /(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    })\n    Prism.languages.javascript['keyword'].unshift(\n      {\n        pattern: /\\b(?:as|default|export|from|import)\\b/,\n        alias: 'module'\n      },\n      {\n        pattern:\n          /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n        alias: 'control-flow'\n      },\n      {\n        pattern: /\\bnull\\b/,\n        alias: ['null', 'nil']\n      },\n      {\n        pattern: /\\bundefined\\b/,\n        alias: 'nil'\n      }\n    )\n    Prism.languages.insertBefore('javascript', 'operator', {\n      spread: {\n        pattern: /\\.{3}/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /=>/,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'punctuation', {\n      'property-access': {\n        pattern: withId(/(\\.\\s*)#?<ID>/.source),\n        lookbehind: true\n      },\n      'maybe-class-name': {\n        pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n        lookbehind: true\n      },\n      dom: {\n        // this contains only a few commonly used DOM variables\n        pattern:\n          /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n        alias: 'variable'\n      },\n      console: {\n        pattern: /\\bconsole(?=\\s*\\.)/,\n        alias: 'class-name'\n      }\n    }) // add 'maybe-class-name' to tokens which might be a class name\n    var maybeClassNameTokens = [\n      'function',\n      'function-variable',\n      'method',\n      'method-variable',\n      'property-access'\n    ]\n    for (var i = 0; i < maybeClassNameTokens.length; i++) {\n      var token = maybeClassNameTokens[i]\n      var value = Prism.languages.javascript[token] // convert regex to object\n      if (Prism.util.type(value) === 'RegExp') {\n        value = Prism.languages.javascript[token] = {\n          pattern: value\n        }\n      } // keep in mind that we don't support arrays\n      var inside = value.inside || {}\n      value.inside = inside\n      inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = jsTemplates\njsTemplates.displayName = 'jsTemplates'\njsTemplates.aliases = []\nfunction jsTemplates(Prism) {\n  ;(function (Prism) {\n    var templateString = Prism.languages.javascript['template-string'] // see the pattern in prism-javascript.js\n    var templateLiteralPattern = templateString.pattern.source\n    var interpolationObject = templateString.inside['interpolation']\n    var interpolationPunctuationObject =\n      interpolationObject.inside['interpolation-punctuation']\n    var interpolationPattern = interpolationObject.pattern.source\n    /**\n     * Creates a new pattern to match a template string with a special tag.\n     *\n     * This will return `undefined` if there is no grammar with the given language id.\n     *\n     * @param {string} language The language id of the embedded language. E.g. `markdown`.\n     * @param {string} tag The regex pattern to match the tag.\n     * @returns {object | undefined}\n     * @example\n     * createTemplate('css', /\\bcss/.source);\n     */\n    function createTemplate(language, tag) {\n      if (!Prism.languages[language]) {\n        return undefined\n      }\n      return {\n        pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'template-punctuation': {\n            pattern: /^`|`$/,\n            alias: 'string'\n          },\n          'embedded-code': {\n            pattern: /[\\s\\S]+/,\n            alias: language\n          }\n        }\n      }\n    }\n    Prism.languages.javascript['template-string'] = [\n      // styled-jsx:\n      //   css`a { color: #25F; }`\n      // styled-components:\n      //   styled.h1`color: red;`\n      createTemplate(\n        'css',\n        /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/\n          .source\n      ), // html`<p></p>`\n      // div.innerHTML = `<p></p>`\n      createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n      createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n      createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n      createTemplate(\n        'graphql',\n        /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source\n      ), // sql`...`\n      createTemplate('sql', /\\bsql/.source), // vanilla template string\n      templateString\n    ].filter(Boolean)\n    /**\n     * Returns a specific placeholder literal for the given language.\n     *\n     * @param {number} counter\n     * @param {string} language\n     * @returns {string}\n     */\n    function getPlaceholder(counter, language) {\n      return '___' + language.toUpperCase() + '_' + counter + '___'\n    }\n    /**\n     * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n     *\n     * @param {string} code\n     * @param {any} grammar\n     * @param {string} language\n     * @returns {(string|Token)[]}\n     */\n    function tokenizeWithHooks(code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language\n      }\n      Prism.hooks.run('before-tokenize', env)\n      env.tokens = Prism.tokenize(env.code, env.grammar)\n      Prism.hooks.run('after-tokenize', env)\n      return env.tokens\n    }\n    /**\n     * Returns the token of the given JavaScript interpolation expression.\n     *\n     * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n     * @returns {Token}\n     */\n    function tokenizeInterpolationExpression(expression) {\n      var tempGrammar = {}\n      tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject\n      /** @type {Array} */\n      var tokens = Prism.tokenize(expression, tempGrammar)\n      if (tokens.length === 3) {\n        /**\n         * The token array will look like this\n         * [\n         *     [\"interpolation-punctuation\", \"${\"]\n         *     \"...\" // JavaScript expression of the interpolation\n         *     [\"interpolation-punctuation\", \"}\"]\n         * ]\n         */\n        var args = [1, 1]\n        args.push.apply(\n          args,\n          tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript')\n        )\n        tokens.splice.apply(tokens, args)\n      }\n      return new Prism.Token(\n        'interpolation',\n        tokens,\n        interpolationObject.alias,\n        expression\n      )\n    }\n    /**\n     * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n     *\n     * This function has 3 phases:\n     *\n     * 1. Replace all JavaScript interpolation expression with a placeholder.\n     *    The placeholder will have the syntax of a identify of the target language.\n     * 2. Tokenize the code with placeholders.\n     * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n     *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n     *    tokenized as two tokens by the grammar of the embedded language.\n     *\n     * @param {string} code\n     * @param {object} grammar\n     * @param {string} language\n     * @returns {Token}\n     */\n    function tokenizeEmbedded(code, grammar, language) {\n      // 1. First filter out all interpolations\n      // because they might be escaped, we need a lookbehind, so we use Prism\n      /** @type {(Token|string)[]} */\n      var _tokens = Prism.tokenize(code, {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          lookbehind: true\n        }\n      }) // replace all interpolations with a placeholder which is not in the code already\n      var placeholderCounter = 0\n      /** @type {Object<string, string>} */\n      var placeholderMap = {}\n      var embeddedCode = _tokens\n        .map(function (token) {\n          if (typeof token === 'string') {\n            return token\n          } else {\n            var interpolationExpression = token.content\n            var placeholder\n            while (\n              code.indexOf(\n                (placeholder = getPlaceholder(placeholderCounter++, language))\n              ) !== -1\n            ) {\n              /* noop */\n            }\n            placeholderMap[placeholder] = interpolationExpression\n            return placeholder\n          }\n        })\n        .join('') // 2. Tokenize the embedded code\n      var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language) // 3. Re-insert the interpolation\n      var placeholders = Object.keys(placeholderMap)\n      placeholderCounter = 0\n      /**\n       *\n       * @param {(Token|string)[]} tokens\n       * @returns {void}\n       */\n      function walkTokens(tokens) {\n        for (var i = 0; i < tokens.length; i++) {\n          if (placeholderCounter >= placeholders.length) {\n            return\n          }\n          var token = tokens[i]\n          if (typeof token === 'string' || typeof token.content === 'string') {\n            var placeholder = placeholders[placeholderCounter]\n            var s =\n              typeof token === 'string'\n                ? token\n                : /** @type {string} */\n                  token.content\n            var index = s.indexOf(placeholder)\n            if (index !== -1) {\n              ++placeholderCounter\n              var before = s.substring(0, index)\n              var middle = tokenizeInterpolationExpression(\n                placeholderMap[placeholder]\n              )\n              var after = s.substring(index + placeholder.length)\n              var replacement = []\n              if (before) {\n                replacement.push(before)\n              }\n              replacement.push(middle)\n              if (after) {\n                var afterTokens = [after]\n                walkTokens(afterTokens)\n                replacement.push.apply(replacement, afterTokens)\n              }\n              if (typeof token === 'string') {\n                tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                i += replacement.length - 1\n              } else {\n                token.content = replacement\n              }\n            }\n          } else {\n            var content = token.content\n            if (Array.isArray(content)) {\n              walkTokens(content)\n            } else {\n              walkTokens([content])\n            }\n          }\n        }\n      }\n      walkTokens(embeddedTokens)\n      return new Prism.Token(\n        language,\n        embeddedTokens,\n        'language-' + language,\n        code\n      )\n    }\n    /**\n     * The languages for which JS templating will handle tagged template literals.\n     *\n     * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n     */\n    var supportedLanguages = {\n      javascript: true,\n      js: true,\n      typescript: true,\n      ts: true,\n      jsx: true,\n      tsx: true\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (!(env.language in supportedLanguages)) {\n        return\n      }\n      /**\n       * Finds and tokenizes all template strings with an embedded languages.\n       *\n       * @param {(Token | string)[]} tokens\n       * @returns {void}\n       */\n      function findTemplateStrings(tokens) {\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (typeof token === 'string') {\n            continue\n          }\n          var content = token.content\n          if (!Array.isArray(content)) {\n            if (typeof content !== 'string') {\n              findTemplateStrings([content])\n            }\n            continue\n          }\n          if (token.type === 'template-string') {\n            /**\n             * A JavaScript template-string token will look like this:\n             *\n             * [\"template-string\", [\n             *     [\"template-punctuation\", \"`\"],\n             *     (\n             *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n             *         or\n             *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n             *                                  It also has an alias which is the language of the embedded code.\n             *     ),\n             *     [\"template-punctuation\", \"`\"]\n             * ]]\n             */\n            var embedded = content[1]\n            if (\n              content.length === 3 &&\n              typeof embedded !== 'string' &&\n              embedded.type === 'embedded-code'\n            ) {\n              // get string content\n              var code = stringContent(embedded)\n              var alias = embedded.alias\n              var language = Array.isArray(alias) ? alias[0] : alias\n              var grammar = Prism.languages[language]\n              if (!grammar) {\n                // the embedded language isn't registered.\n                continue\n              }\n              content[1] = tokenizeEmbedded(code, grammar, language)\n            }\n          } else {\n            findTemplateStrings(content)\n          }\n        }\n      }\n      findTemplateStrings(env.tokens)\n    })\n    /**\n     * Returns the string content of a token or token stream.\n     *\n     * @param {string | Token | (string | Token)[]} value\n     * @returns {string}\n     */\n    function stringContent(value) {\n      if (typeof value === 'string') {\n        return value\n      } else if (Array.isArray(value)) {\n        return value.map(stringContent).join('')\n      } else {\n        return stringContent(value.content)\n      }\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorJavadoclike = require('./javadoclike.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = jsdoc\njsdoc.displayName = 'jsdoc'\njsdoc.aliases = []\nfunction jsdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var javascript = Prism.languages.javascript\n    var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source\n    var parameterPrefix =\n      '(@(?:arg|argument|param|property)\\\\s+(?:' + type + '\\\\s+)?)'\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(\n          parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(\n          parameterPrefix +\n            /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(\n              /<TYPE>/g,\n              function () {\n                return type\n              }\n            )\n          ),\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        {\n          pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n          lookbehind: true,\n          inside: {\n            string: javascript.string,\n            number: javascript.number,\n            boolean: javascript.boolean,\n            keyword: Prism.languages.typescript.keyword,\n            operator: /=>|\\.\\.\\.|[&|?:*]/,\n            punctuation: /[.,;=<>{}()[\\]]/\n          }\n        }\n      ],\n      example: {\n        pattern:\n          /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    })\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = json\njson.displayName = 'json'\njson.aliases = ['webmanifest']\nfunction json(Prism) {\n  // https://www.json.org/json-en.html\n  Prism.languages.json = {\n    property: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    punctuation: /[{}[\\],]/,\n    operator: /:/,\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.languages.webmanifest = Prism.languages.json\n}\n","'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = json5\njson5.displayName = 'json5'\njson5.aliases = []\nfunction json5(Prism) {\n  Prism.register(refractorJson)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\n    Prism.languages.json5 = Prism.languages.extend('json', {\n      property: [\n        {\n          pattern: RegExp(string.source + '(?=\\\\s*:)'),\n          greedy: true\n        },\n        {\n          pattern:\n            /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n          alias: 'unquoted'\n        }\n      ],\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      number:\n        /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = jsonp\njsonp.displayName = 'jsonp'\njsonp.aliases = []\nfunction jsonp(Prism) {\n  Prism.register(refractorJson)\n  Prism.languages.jsonp = Prism.languages.extend('json', {\n    punctuation: /[{}[\\]();,.]/\n  })\n  Prism.languages.insertBefore('jsonp', 'punctuation', {\n    function: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*\\()/\n  })\n}\n","'use strict'\n\nmodule.exports = jsstacktrace\njsstacktrace.displayName = 'jsstacktrace'\njsstacktrace.aliases = []\nfunction jsstacktrace(Prism) {\n  Prism.languages.jsstacktrace = {\n    'error-message': {\n      pattern: /^\\S.*/m,\n      alias: 'string'\n    },\n    'stack-frame': {\n      pattern: /(^[ \\t]+)at[ \\t].*/m,\n      lookbehind: true,\n      inside: {\n        'not-my-code': {\n          pattern:\n            /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\n          alias: 'comment'\n        },\n        filename: {\n          pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n          lookbehind: true,\n          alias: 'url'\n        },\n        function: {\n          pattern:\n            /(\\bat\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()]/,\n        keyword: /\\b(?:at|new)\\b/,\n        alias: {\n          pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n          alias: 'variable'\n        },\n        'line-number': {\n          pattern: /:\\d+(?::\\d+)?\\b/,\n          alias: 'number',\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = jsx\njsx.displayName = 'jsx'\njsx.aliases = []\nfunction jsx(Prism) {\n  ;(function (Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript)\n    var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source\n    var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source\n    var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<S>/g, function () {\n          return space\n        })\n        .replace(/<BRACES>/g, function () {\n          return braces\n        })\n        .replace(/<SPREAD>/g, function () {\n          return spread\n        })\n      return RegExp(source, flags)\n    }\n    spread = re(spread).source\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript)\n    Prism.languages.jsx.tag.pattern = re(\n      /<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/\n        .source\n    )\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/\n    Prism.languages.jsx.tag.inside['attr-value'].pattern =\n      /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/\n    Prism.languages.jsx.tag.inside['tag'].inside['class-name'] =\n      /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/\n    Prism.languages.jsx.tag.inside['comment'] = javascript['comment']\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-name',\n      {\n        spread: {\n          pattern: re(/<SPREAD>/.source),\n          inside: Prism.languages.jsx\n        }\n      },\n      Prism.languages.jsx.tag\n    )\n    Prism.languages.insertBefore(\n      'inside',\n      'special-attr',\n      {\n        script: {\n          // Allow for two levels of nesting\n          pattern: re(/=<BRACES>/.source),\n          alias: 'language-javascript',\n          inside: {\n            'script-punctuation': {\n              pattern: /^=(?=\\{)/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.jsx\n          }\n        }\n      },\n      Prism.languages.jsx.tag\n    ) // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (!token) {\n        return ''\n      }\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{'\n          ) {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token) // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            tokens[i] = new Prism.Token(\n              'plain-text',\n              plainText,\n              null,\n              plainText\n            )\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = julia\njulia.displayName = 'julia'\njulia.aliases = []\nfunction julia(Prism) {\n  Prism.languages.julia = {\n    comment: {\n      // support one level of nested comments\n      // https://github.com/JuliaLang/julia/pull/6128\n      pattern:\n        /(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,\n      lookbehind: true\n    },\n    regex: {\n      // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1\n      pattern: /r\"(?:\\\\.|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/,\n      greedy: true\n    },\n    string: {\n      // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1\n      // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1\n      // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1\n      pattern:\n        /\"\"\"[\\s\\S]+?\"\"\"|(?:\\b\\w+)?\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`(?:[^\\\\`\\r\\n]|\\\\.)*`/,\n      greedy: true\n    },\n    char: {\n      // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1\n      pattern: /(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i,\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1\n    operator:\n      /&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,\n    punctuation: /::?|[{}[\\]();,.?]/,\n    // https://docs.julialang.org/en/v1/base/numbers/#Base.im\n    constant: /\\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\\b|[πℯ]/\n  }\n}\n","'use strict'\n\nmodule.exports = keepalived\nkeepalived.displayName = 'keepalived'\nkeepalived.aliases = []\nfunction keepalived(Prism) {\n  Prism.languages.keepalived = {\n    comment: {\n      pattern: /[#!].*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\])(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/,\n      lookbehind: true,\n      greedy: true\n    },\n    // support IPv4, IPv6, subnet mask\n    ip: {\n      pattern: RegExp(\n        /\\b(?:(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){5}:(?:[\\da-f]{1,4}:)?[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){4}:(?:[\\da-f]{1,4}:){0,2}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){3}:(?:[\\da-f]{1,4}:){0,3}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){2}:(?:[\\da-f]{1,4}:){0,4}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}<ipv4>|(?:[\\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\\da-f]{1,4}:){0,5}<ipv4>|[\\da-f]{1,4}::(?:[\\da-f]{1,4}:){0,5}[\\da-f]{1,4}|::(?:[\\da-f]{1,4}:){0,6}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:)(?:\\/\\d{1,3})?|<ipv4>(?:\\/\\d{1,2})?)\\b/.source.replace(\n          /<ipv4>/g,\n          function () {\n            return /(?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d))/\n              .source\n          }\n        ),\n        'i'\n      ),\n      alias: 'number'\n    },\n    // support *nix / Windows, directory / file\n    path: {\n      pattern:\n        /(\\s)\\/(?:[^\\/\\s]+\\/)*[^\\/\\s]*|\\b[a-zA-Z]:\\\\(?:[^\\\\\\s]+\\\\)*[^\\\\\\s]*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    variable: /\\$\\{?\\w+\\}?/,\n    email: {\n      pattern: /[\\w-]+@[\\w-]+(?:\\.[\\w-]{2,3}){1,2}/,\n      alias: 'string'\n    },\n    'conditional-configuration': {\n      pattern: /@\\^?[\\w-]+/,\n      alias: 'variable'\n    },\n    operator: /=/,\n    property:\n      /\\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\\b/,\n    constant:\n      /\\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\\b/,\n    number: {\n      pattern: /(^|[^\\w.-])-?\\d+(?:\\.\\d+)?/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n    punctuation: /[\\{\\}]/\n  }\n}\n","'use strict'\n\nmodule.exports = keyman\nkeyman.displayName = 'keyman'\nkeyman.aliases = []\nfunction keyman(Prism) {\n  Prism.languages.keyman = {\n    comment: {\n      pattern: /\\bc .*/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    'virtual-key': {\n      pattern:\n        /\\[\\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\\s+)*(?:[TKU]_[\\w?]+|[A-E]\\d\\d?|\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*\\]/i,\n      greedy: true,\n      alias: 'function' // alias for styles\n    },\n    // https://help.keyman.com/developer/language/guide/headers\n    'header-keyword': {\n      pattern: /&\\w+/,\n      alias: 'bold' // alias for styles\n    },\n    'header-statement': {\n      pattern:\n        /\\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\\b/i,\n      alias: 'bold' // alias for styles\n    },\n    'rule-keyword': {\n      pattern:\n        /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\\b/i,\n      alias: 'keyword'\n    },\n    'structural-keyword': {\n      pattern: /\\b(?:ansi|begin|group|match|nomatch|unicode|using keys)\\b/i,\n      alias: 'keyword'\n    },\n    'compile-target': {\n      pattern: /\\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,\n      alias: 'property'\n    },\n    // U+####, x###, d### characters and numbers\n    number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n    operator: /[+>\\\\$]|\\.\\./,\n    punctuation: /[()=,]/\n  }\n}\n","'use strict'\n\nmodule.exports = kotlin\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\nfunction kotlin(Prism) {\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    }\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [\n        {\n          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n          alias: 'multiline',\n          inside: {\n            interpolation: {\n              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n          alias: 'singleline',\n          inside: {\n            interpolation: {\n              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              lookbehind: true,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    })\n    delete Prism.languages.kotlin['string']\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = kumir\nkumir.displayName = 'kumir'\nkumir.aliases = ['kum']\nfunction kumir(Prism) {\n  /* eslint-disable regexp/no-dupe-characters-character-class */\n  ;(function (Prism) {\n    /**\n     * Regular expression for characters that are not allowed in identifiers.\n     *\n     * @type {string}\n     */\n    var nonId = /\\s\\x00-\\x1f\\x22-\\x2f\\x3a-\\x3f\\x5b-\\x5e\\x60\\x7b-\\x7e/.source\n    /**\n     * Surround a regular expression for IDs with patterns for non-ID sequences.\n     *\n     * @param {string} pattern A regular expression for identifiers.\n     * @param {string} [flags] The regular expression flags.\n     * @returns {RegExp} A wrapped regular expression for identifiers.\n     */\n    function wrapId(pattern, flags) {\n      return RegExp(pattern.replace(/<nonId>/g, nonId), flags)\n    }\n    Prism.languages.kumir = {\n      comment: {\n        pattern: /\\|.*/\n      },\n      prolog: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\\n\\r\"]*\"|'[^\\n\\r']*'/,\n        greedy: true\n      },\n      boolean: {\n        pattern: wrapId(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),\n        lookbehind: true\n      },\n      'operator-word': {\n        pattern: wrapId(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'system-variable': {\n        pattern: wrapId(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      type: [\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\\x20*таб)?(?=[<nonId>]|$)/\n              .source\n          ),\n          lookbehind: true,\n          alias: 'builtin'\n        },\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source\n          ),\n          lookbehind: true,\n          alias: 'important'\n        }\n      ],\n      /**\n       * Should be performed after searching for type names because of \"таб\".\n       * \"таб\" is a reserved word, but never used without a preceding type name.\n       * \"НАЗНАЧИТЬ\", \"Фввод\", and \"Фвывод\" are not reserved words.\n       */\n      keyword: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:алг|арг(?:\\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\\x20+|_)исп)?|кц(?:(?:\\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for reserved words. */\n      name: {\n        // eslint-disable-next-line regexp/no-super-linear-backtracking\n        pattern: wrapId(\n          /(^|[<nonId>])[^\\d<nonId>][^<nonId>]*(?:\\x20+[^<nonId>]+)*(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for names. */\n      number: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:\\B\\$[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?=[<nonId>]|$)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for words. */\n      punctuation: /:=|[(),:;\\[\\]]/,\n      /**\n       * Should be performed after searching for\n       * - numeric constants (because of \"+\" and \"-\");\n       * - punctuation marks (because of \":=\" and \"=\").\n       */\n      'operator-char': {\n        pattern: /\\*\\*?|<[=>]?|>=?|[-+/=]/,\n        alias: 'operator'\n      }\n    }\n    Prism.languages.kum = Prism.languages.kumir\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = kusto\nkusto.displayName = 'kusto'\nkusto.aliases = []\nfunction kusto(Prism) {\n  Prism.languages.kusto = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,\n      greedy: true\n    },\n    verb: {\n      pattern: /(\\|\\s*)[a-z][\\w-]*/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    command: {\n      pattern: /\\.[a-z][a-z\\d-]*\\b/,\n      alias: 'keyword'\n    },\n    'class-name':\n      /\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,\n    keyword:\n      /\\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/,\n    datetime: [\n      {\n        // RFC 822 + RFC 850\n        pattern:\n          /\\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\\d{4}))?\\b/,\n        alias: 'number'\n      },\n      {\n        // ISO 8601\n        pattern:\n          /[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,\n        alias: 'number'\n      }\n    ],\n    number:\n      /\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\\b)?|[+-]?\\binf\\b/,\n    operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,\n    punctuation: /[()\\[\\]{},;.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = latex\nlatex.displayName = 'latex'\nlatex.aliases = ['tex', 'context']\nfunction latex(Prism) {\n  ;(function (Prism) {\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i\n    var insideEqu = {\n      'equation-command': {\n        pattern: funcPattern,\n        alias: 'regex'\n      }\n    }\n    Prism.languages.latex = {\n      comment: /%.*/,\n      // the verbatim environment prints whitespace to the document\n      cdata: {\n        pattern:\n          /(\\\\begin\\{((?:lstlisting|verbatim)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true\n      },\n      /*\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */\n      equation: [\n        {\n          pattern:\n            /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        },\n        {\n          pattern:\n            /(\\\\begin\\{((?:align|eqnarray|equation|gather|math|multline)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }\n      ],\n      /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */\n      keyword: {\n        pattern:\n          /(\\\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */\n      headline: {\n        pattern:\n          /(\\\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      function: {\n        pattern: funcPattern,\n        alias: 'selector'\n      },\n      punctuation: /[[\\]{}&]/\n    }\n    Prism.languages.tex = Prism.languages.latex\n    Prism.languages.context = Prism.languages.latex\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nvar refractorPhp = require('./php.js')\nmodule.exports = latte\nlatte.displayName = 'latte'\nlatte.aliases = []\nfunction latte(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorPhp)\n  ;(function (Prism) {\n    Prism.languages.latte = {\n      comment: /^\\{\\*[\\s\\S]*/,\n      'latte-tag': {\n        // https://latte.nette.org/en/tags\n        pattern: /(^\\{(?:\\/(?=[a-z]))?)(?:[=_]|[a-z]\\w*\\b(?!\\())/i,\n        lookbehind: true,\n        alias: 'important'\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        alias: 'punctuation'\n      },\n      php: {\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        alias: 'language-php',\n        inside: Prism.languages.php\n      }\n    }\n    var markupLatte = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-value',\n      {\n        'n-attr': {\n          pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n          inside: {\n            'attr-name': {\n              pattern: /^[^\\s=]+/,\n              alias: 'important'\n            },\n            'attr-value': {\n              pattern: /=[\\s\\S]+/,\n              inside: {\n                punctuation: [\n                  /^=/,\n                  {\n                    pattern: /^(\\s*)[\"']|[\"']$/,\n                    lookbehind: true\n                  }\n                ],\n                php: {\n                  pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                  inside: Prism.languages.php\n                }\n              }\n            }\n          }\n        }\n      },\n      markupLatte.tag\n    )\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (env.language !== 'latte') {\n        return\n      }\n      var lattePattern =\n        /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'latte',\n        lattePattern\n      )\n      env.grammar = markupLatte\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = less\nless.displayName = 'less'\nless.aliases = []\nfunction less(Prism) {\n  /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    atrule: {\n      pattern:\n        /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern:\n        /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n    operator: /[+\\-*\\/]/\n  })\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      }, // Variable usage\n      /@@?[\\w-]+/\n    ],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  })\n}\n","'use strict'\nvar refractorScheme = require('./scheme.js')\nmodule.exports = lilypond\nlilypond.displayName = 'lilypond'\nlilypond.aliases = []\nfunction lilypond(Prism) {\n  Prism.register(refractorScheme)\n  ;(function (Prism) {\n    var schemeExpression =\n      /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/\n        .source // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n    // For some reason, this can't be 4\n    var recursivenessLog2 = 5\n    for (var i = 0; i < recursivenessLog2; i++) {\n      schemeExpression = schemeExpression.replace(/<expr>/g, function () {\n        return schemeExpression\n      })\n    }\n    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var lilypond = (Prism.languages.lilypond = {\n      comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n      'embedded-scheme': {\n        pattern: RegExp(\n          /(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(\n            /<expr>/g,\n            function () {\n              return schemeExpression\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          scheme: {\n            pattern: /^(#)[\\s\\S]+$/,\n            lookbehind: true,\n            alias: 'language-scheme',\n            inside: {\n              'embedded-lilypond': {\n                pattern: /#\\{[\\s\\S]*?#\\}/,\n                greedy: true,\n                inside: {\n                  punctuation: /^#\\{|#\\}$/,\n                  lilypond: {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'language-lilypond',\n                    inside: null // see below\n                  }\n                }\n              },\n              rest: Prism.languages.scheme\n            }\n          },\n          punctuation: /#/\n        }\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\\\new\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /\\\\[a-z][-\\w]*/i,\n        inside: {\n          punctuation: /^\\\\/\n        }\n      },\n      operator: /[=|]|<<|>>/,\n      punctuation: {\n        pattern:\n          /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\/\\d+)?\\b/\n    })\n    lilypond['embedded-scheme'].inside['scheme'].inside[\n      'embedded-lilypond'\n    ].inside['lilypond'].inside = lilypond\n    Prism.languages.ly = lilypond\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = liquid\nliquid.displayName = 'liquid'\nliquid.aliases = []\nfunction liquid(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.liquid = {\n    comment: {\n      pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n      lookbehind: true\n    },\n    delimiter: {\n      pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n    object:\n      /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\n    function: [\n      {\n        pattern: /(\\|\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'filter'\n      },\n      {\n        // array functions\n        pattern: /(\\.\\s*)(?:first|last|size)/,\n        lookbehind: true\n      }\n    ],\n    boolean: /\\b(?:false|nil|true)\\b/,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|contains(?=\\s)|or)\\b/,\n    punctuation: /[.,\\[\\]()]/,\n    empty: {\n      pattern: /\\bempty\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    var liquidPattern =\n      /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g\n    var insideRaw = false\n    Prism.languages['markup-templating'].buildPlaceholders(\n      env,\n      'liquid',\n      liquidPattern,\n      function (match) {\n        var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match)\n        if (tagMatch) {\n          var tag = tagMatch[1]\n          if (tag === 'raw' && !insideRaw) {\n            insideRaw = true\n            return true\n          } else if (tag === 'endraw') {\n            insideRaw = false\n            return true\n          }\n        }\n        return !insideRaw\n      }\n    )\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid')\n  })\n}\n","'use strict'\n\nmodule.exports = lisp\nlisp.displayName = 'lisp'\nlisp.aliases = []\nfunction lisp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Functions to construct regular expressions\n     * e.g. (interactive ... or (interactive)\n     *\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function simple_form(name) {\n      return RegExp(/(\\()/.source + '(?:' + name + ')' + /(?=[\\s\\)])/.source)\n    }\n    /**\n     * booleans and numbers\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function primitive(pattern) {\n      return RegExp(\n        /([\\s([])/.source + '(?:' + pattern + ')' + /(?=[\\s)])/.source\n      )\n    } // Patterns in regular expressions\n    // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n    // & and : are excluded as they are usually used for special purposes\n    var symbol = /(?!\\d)[-+*/~!@$%^=<>{}\\w]+/.source // symbol starting with & used in function arguments\n    var marker = '&' + symbol // Open parenthesis for look-behind\n    var par = '(\\\\()'\n    var endpar = '(?=\\\\))' // End the pattern with look-ahead space\n    var space = '(?=\\\\s)'\n    var nestedPar =\n      /(?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\))*\\))*\\))*/\n        .source\n    var language = {\n      // Three or four semicolons are considered a heading.\n      // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n      heading: {\n        pattern: /;;;.*/,\n        alias: ['comment', 'title']\n      },\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true,\n        inside: {\n          argument: /[-A-Z]+(?=[.,\\s])/,\n          symbol: RegExp('`' + symbol + \"'\")\n        }\n      },\n      'quoted-symbol': {\n        pattern: RegExp(\"#?'\" + symbol),\n        alias: ['variable', 'symbol']\n      },\n      'lisp-property': {\n        pattern: RegExp(':' + symbol),\n        alias: 'property'\n      },\n      splice: {\n        pattern: RegExp(',@?' + symbol),\n        alias: ['symbol', 'variable']\n      },\n      keyword: [\n        {\n          pattern: RegExp(\n            par +\n              '(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)' +\n              space\n          ),\n          lookbehind: true\n        },\n        {\n          pattern: RegExp(\n            par +\n              '(?:append|by|collect|concat|do|finally|for|in|return)' +\n              space\n          ),\n          lookbehind: true\n        }\n      ],\n      declare: {\n        pattern: simple_form(/declare/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      interactive: {\n        pattern: simple_form(/interactive/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      boolean: {\n        pattern: primitive(/nil|t/.source),\n        lookbehind: true\n      },\n      number: {\n        pattern: primitive(/[-+]?\\d+(?:\\.\\d*)?/.source),\n        lookbehind: true\n      },\n      defvar: {\n        pattern: RegExp(par + 'def(?:const|custom|group|var)\\\\s+' + symbol),\n        lookbehind: true,\n        inside: {\n          keyword: /^def[a-z]+/,\n          variable: RegExp(symbol)\n        }\n      },\n      defun: {\n        pattern: RegExp(\n          par +\n            /(?:cl-)?(?:defmacro|defun\\*?)\\s+/.source +\n            symbol +\n            /\\s+\\(/.source +\n            nestedPar +\n            /\\)/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^(?:cl-)?def\\S+/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          function: {\n            pattern: RegExp('(^\\\\s)' + symbol),\n            lookbehind: true\n          },\n          punctuation: /[()]/\n        }\n      },\n      lambda: {\n        pattern: RegExp(\n          par +\n            'lambda\\\\s+\\\\(\\\\s*(?:&?' +\n            symbol +\n            '(?:\\\\s+&?' +\n            symbol +\n            ')*\\\\s*)?\\\\)'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^lambda/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          punctuation: /[()]/\n        }\n      },\n      car: {\n        pattern: RegExp(par + symbol),\n        lookbehind: true\n      },\n      punctuation: [\n        // open paren, brackets, and close paren\n        /(?:['`,]?\\(|[)\\[\\]])/, // cons\n        {\n          pattern: /(\\s)\\.(?=\\s)/,\n          lookbehind: true\n        }\n      ]\n    }\n    var arg = {\n      'lisp-marker': RegExp(marker),\n      varform: {\n        pattern: RegExp(\n          /\\(/.source + symbol + /\\s+(?=\\S)/.source + nestedPar + /\\)/.source\n        ),\n        inside: language\n      },\n      argument: {\n        pattern: RegExp(/(^|[\\s(])/.source + symbol),\n        lookbehind: true,\n        alias: 'variable'\n      },\n      rest: language\n    }\n    var forms = '\\\\S+(?:\\\\s+\\\\S+)*'\n    var arglist = {\n      pattern: RegExp(par + nestedPar + endpar),\n      lookbehind: true,\n      inside: {\n        'rest-vars': {\n          pattern: RegExp('&(?:body|rest)\\\\s+' + forms),\n          inside: arg\n        },\n        'other-marker-vars': {\n          pattern: RegExp('&(?:aux|optional)\\\\s+' + forms),\n          inside: arg\n        },\n        keys: {\n          pattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n          inside: arg\n        },\n        argument: {\n          pattern: RegExp(symbol),\n          alias: 'variable'\n        },\n        punctuation: /[()]/\n      }\n    }\n    language['lambda'].inside.arguments = arglist\n    language['defun'].inside.arguments = Prism.util.clone(arglist)\n    language['defun'].inside.arguments.inside.sublist = arglist\n    Prism.languages.lisp = language\n    Prism.languages.elisp = language\n    Prism.languages.emacs = language\n    Prism.languages['emacs-lisp'] = language\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = livescript\nlivescript.displayName = 'livescript'\nlivescript.aliases = []\nfunction livescript(Prism) {\n  Prism.languages.livescript = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    ],\n    'interpolated-string': {\n      /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n      pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n          lookbehind: true\n        },\n        interpolation: {\n          pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^#\\{|\\}$/,\n              alias: 'variable'\n            } // See rest below\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    string: [\n      {\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      {\n        pattern: /<\\[[\\s\\S]*?\\]>/,\n        greedy: true\n      },\n      /\\\\[^\\s,;\\])}]+/\n    ],\n    regex: [\n      {\n        pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n        greedy: true,\n        inside: {\n          comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        }\n      },\n      {\n        pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n        greedy: true\n      }\n    ],\n    keyword: {\n      pattern:\n        /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n      lookbehind: true\n    },\n    'keyword-operator': {\n      pattern:\n        /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    boolean: {\n      pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n      lookbehind: true\n    },\n    argument: {\n      // Don't match .&. nor &&\n      pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n    identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n    operator: [\n      // Spaced .\n      {\n        pattern: /( )\\.(?= )/,\n        lookbehind: true\n      }, // Full list, in order:\n      // .= .~ .. ...\n      // .&. .^. .<<. .>>. .>>>.\n      // := :: ::=\n      // &&\n      // || |>\n      // < << <<< <<<<\n      // <- <-- <-! <--!\n      // <~ <~~ <~! <~~!\n      // <| <= <?\n      // > >> >= >?\n      // - -- -> -->\n      // + ++\n      // @ @@\n      // % %%\n      // * **\n      // ! != !~=\n      // !~> !~~>\n      // !-> !-->\n      // ~ ~> ~~> ~=\n      // = ==\n      // ^ ^^\n      // / ?\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n    ],\n    punctuation: /[(){}\\[\\]|.,:;`]/\n  }\n  Prism.languages.livescript['interpolated-string'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.livescript\n}\n","'use strict'\n\nmodule.exports = llvm\nllvm.displayName = 'llvm'\nllvm.aliases = []\nfunction llvm(Prism) {\n  ;(function (Prism) {\n    Prism.languages.llvm = {\n      comment: /;.*/,\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      boolean: /\\b(?:false|true)\\b/,\n      variable: /[%@!#](?:(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+|\\d+)/i,\n      label: /(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+:/i,\n      type: {\n        pattern:\n          /\\b(?:double|float|fp128|half|i[1-9]\\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\\b/,\n        alias: 'class-name'\n      },\n      keyword: /\\b[a-z_][a-z_0-9]*\\b/,\n      number:\n        /[+-]?\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-Fa-f]+\\b|\\b0xK[\\dA-Fa-f]{20}\\b|\\b0x[ML][\\dA-Fa-f]{32}\\b|\\b0xH[\\dA-Fa-f]{4}\\b/,\n      punctuation: /[{}[\\];(),.!*=<>]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = log\nlog.displayName = 'log'\nlog.aliases = []\nfunction log(Prism) {\n  // This is a language definition for generic log files.\n  // Since there is no one log format, this language definition has to support all formats to some degree.\n  //\n  // Based on https://github.com/MTDL9/vim-log-highlighting\n  Prism.languages.log = {\n    string: {\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    exception: {\n      pattern:\n        /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['javastacktrace', 'language-javastacktrace'],\n      inside: Prism.languages['javastacktrace'] || {\n        keyword: /\\bat\\b/,\n        function: /[a-z_][\\w$]*(?=\\()/,\n        punctuation: /[.:()]/\n      }\n    },\n    level: [\n      {\n        pattern:\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n        alias: ['error', 'important']\n      },\n      {\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n        alias: ['warning', 'important']\n      },\n      {\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n        alias: ['info', 'keyword']\n      },\n      {\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n        alias: ['debug', 'keyword']\n      },\n      {\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n        alias: ['trace', 'comment']\n      }\n    ],\n    property: {\n      pattern:\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n      lookbehind: true\n    },\n    separator: {\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n    email: {\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n      lookbehind: true,\n      alias: 'url'\n    },\n    'ip-address': {\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n      alias: 'constant'\n    },\n    'mac-address': {\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n      alias: 'constant'\n    },\n    domain: {\n      pattern:\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    uuid: {\n      pattern:\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n      alias: 'constant'\n    },\n    hash: {\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n      alias: 'constant'\n    },\n    'file-path': {\n      pattern:\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string'\n    },\n    date: {\n      pattern: RegExp(\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n          '|' +\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/\n            .source +\n          '|' +\n          /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/\n            .source,\n        'i'\n      ),\n      alias: 'number'\n    },\n    time: {\n      pattern:\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n      alias: 'number'\n    },\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: {\n      pattern:\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n      lookbehind: true\n    },\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n    punctuation: /[\\[\\].,]/\n  }\n}\n","'use strict'\n\nmodule.exports = lolcode\nlolcode.displayName = 'lolcode'\nlolcode.aliases = []\nfunction lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\":])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [\n      {\n        pattern:\n          /(^|\\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\\?|YA RLY|YR)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      /'Z(?=\\s|,|$)/\n    ],\n    boolean: {\n      pattern: /(^|\\s)(?:FAIL|WIN)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern:\n        /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|…|,|!/\n  }\n}\n","'use strict'\n\nmodule.exports = lua\nlua.displayName = 'lua'\nlua.aliases = []\nfunction lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern:\n        /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number:\n      /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword:\n      /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n      {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  }\n}\n","'use strict'\n\nmodule.exports = magma\nmagma.displayName = 'magma'\nmagma.aliases = []\nfunction magma(Prism) {\n  Prism.languages.magma = {\n    output: {\n      pattern:\n        /^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    // http://magma.maths.usyd.edu.au/magma/handbook/text/82\n    keyword:\n      /\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    generator: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*<)/i,\n      alias: 'class-name'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    operator: /->|[-+*/^~!|#=]|:=|\\.\\./,\n    punctuation: /[()[\\]{}<>,;.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = makefile\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\nfunction makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'builtin-target': {\n      pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n      alias: 'builtin'\n    },\n    target: {\n      pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n      alias: 'symbol',\n      inside: {\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    // Directives\n    keyword:\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n    function: {\n      pattern:\n        /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n      lookbehind: true\n    },\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = markdown\nmarkdown.displayName = 'markdown'\nmarkdown.aliases = ['md']\nfunction markdown(Prism) {\n  ;(function (Prism) {\n    // Allow only one line break\n    var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source\n    /**\n     * This function is intended for the creation of the bold or italic pattern.\n     *\n     * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n     *\n     * _Note:_ Keep in mind that this adds a capturing group.\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function createInline(pattern) {\n      pattern = pattern.replace(/<inner>/g, function () {\n        return inner\n      })\n      return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')')\n    }\n    var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/\n      .source\n    var tableRow =\n      /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(\n        /__/g,\n        function () {\n          return tableCell\n        }\n      )\n    var tableLine =\n      /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/\n        .source\n    Prism.languages.markdown = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore('markdown', 'prolog', {\n      'front-matter-block': {\n        pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^---|---$/,\n          'front-matter': {\n            pattern: /\\S+(?:\\s+\\S+)*/,\n            alias: ['yaml', 'language-yaml'],\n            inside: Prism.languages.yaml\n          }\n        }\n      },\n      blockquote: {\n        // > ...\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: 'punctuation'\n      },\n      table: {\n        pattern: RegExp(\n          '^' + tableRow + tableLine + '(?:' + tableRow + ')*',\n          'm'\n        ),\n        inside: {\n          'table-data-rows': {\n            pattern: RegExp(\n              '^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'\n            ),\n            lookbehind: true,\n            inside: {\n              'table-data': {\n                pattern: RegExp(tableCell),\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          },\n          'table-line': {\n            pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n            lookbehind: true,\n            inside: {\n              punctuation: /\\||:?-{3,}:?/\n            }\n          },\n          'table-header-row': {\n            pattern: RegExp('^' + tableRow + '$'),\n            inside: {\n              'table-header': {\n                pattern: RegExp(tableCell),\n                alias: 'important',\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          }\n        }\n      },\n      code: [\n        {\n          // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n          pattern:\n            /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        {\n          // ```optional language\n          // code block\n          // ```\n          pattern: /^```[\\s\\S]*?^```$/m,\n          greedy: true,\n          inside: {\n            'code-block': {\n              pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n              lookbehind: true\n            },\n            'code-language': {\n              pattern: /^(```).+/,\n              lookbehind: true\n            },\n            punctuation: /```/\n          }\n        }\n      ],\n      title: [\n        {\n          // title 1\n          // =======\n          // title 2\n          // -------\n          pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n          alias: 'important',\n          inside: {\n            punctuation: /==+$|--+$/\n          }\n        },\n        {\n          // # title 1\n          // ###### title 6\n          pattern: /(^\\s*)#.+/m,\n          lookbehind: true,\n          alias: 'important',\n          inside: {\n            punctuation: /^#+|#+$/\n          }\n        }\n      ],\n      hr: {\n        // ***\n        // ---\n        // * * *\n        // -----------\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      list: {\n        // * item\n        // + item\n        // - item\n        // 1. item\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern:\n          /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string:\n            /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: 'url'\n      },\n      bold: {\n        // **strong**\n        // __strong__\n        // allow one nested instance of italic text using the same delimiter\n        pattern: createInline(\n          /\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^..)[\\s\\S]+(?=..$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /\\*\\*|__/\n        }\n      },\n      italic: {\n        // *em*\n        // _em_\n        // allow one nested instance of bold text using the same delimiter\n        pattern: createInline(\n          /\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^.)[\\s\\S]+(?=.$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /[*_]/\n        }\n      },\n      strike: {\n        // ~~strike through~~\n        // ~strike~\n        // eslint-disable-next-line regexp/strict\n        pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /~~?/\n        }\n      },\n      'code-snippet': {\n        // `code`\n        // ``code``\n        pattern:\n          /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n        lookbehind: true,\n        greedy: true,\n        alias: ['code', 'keyword']\n      },\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example][id]\n        // [example] [id]\n        pattern: createInline(\n          /!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          operator: /^!/,\n          content: {\n            pattern: /(^\\[)[^\\]]+(?=\\])/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          variable: {\n            pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          url: {\n            pattern: /(^\\]\\()[^\\s)]+/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n            lookbehind: true\n          }\n        }\n      }\n    })\n    ;['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n      ;['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (\n        inside\n      ) {\n        if (token !== inside) {\n          Prism.languages.markdown[token].inside.content.inside[inside] =\n            Prism.languages.markdown[inside]\n        }\n      })\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'markdown' && env.language !== 'md') {\n        return\n      }\n      function walkTokens(tokens) {\n        if (!tokens || typeof tokens === 'string') {\n          return\n        }\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (token.type !== 'code') {\n            walkTokens(token.content)\n            continue\n          }\n          /*\n           * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n           * is optional. But the grammar is defined so that there is only one case we have to handle:\n           *\n           * token.content = [\n           *     <span class=\"punctuation\">```</span>,\n           *     <span class=\"code-language\">xxxx</span>,\n           *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n           *     <span class=\"code-block\">...</span>,\n           *     '\\n', // exactly one new lines again\n           *     <span class=\"punctuation\">```</span>\n           * ];\n           */\n          var codeLang = token.content[1]\n          var codeBlock = token.content[3]\n          if (\n            codeLang &&\n            codeBlock &&\n            codeLang.type === 'code-language' &&\n            codeBlock.type === 'code-block' &&\n            typeof codeLang.content === 'string'\n          ) {\n            // this might be a language that Prism does not support\n            // do some replacements to support C++, C#, and F#\n            var lang = codeLang.content\n              .replace(/\\b#/g, 'sharp')\n              .replace(/\\b\\+\\+/g, 'pp') // only use the first word\n            lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase()\n            var alias = 'language-' + lang // add alias\n            if (!codeBlock.alias) {\n              codeBlock.alias = [alias]\n            } else if (typeof codeBlock.alias === 'string') {\n              codeBlock.alias = [codeBlock.alias, alias]\n            } else {\n              codeBlock.alias.push(alias)\n            }\n          }\n        }\n      }\n      walkTokens(env.tokens)\n    })\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type !== 'code-block') {\n        return\n      }\n      var codeLang = ''\n      for (var i = 0, l = env.classes.length; i < l; i++) {\n        var cls = env.classes[i]\n        var match = /language-(.+)/.exec(cls)\n        if (match) {\n          codeLang = match[1]\n          break\n        }\n      }\n      var grammar = Prism.languages[codeLang]\n      if (!grammar) {\n        if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n          var id =\n            'md-' +\n            new Date().valueOf() +\n            '-' +\n            Math.floor(Math.random() * 1e16)\n          env.attributes['id'] = id\n          Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n            var ele = document.getElementById(id)\n            if (ele) {\n              ele.innerHTML = Prism.highlight(\n                ele.textContent,\n                Prism.languages[codeLang],\n                codeLang\n              )\n            }\n          })\n        }\n      } else {\n        env.content = Prism.highlight(\n          textContent(env.content.value),\n          grammar,\n          codeLang\n        )\n      }\n    })\n    var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi')\n    /**\n     * A list of known entity names.\n     *\n     * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n     *\n     * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n     */\n    var KNOWN_ENTITY_NAMES = {\n      amp: '&',\n      lt: '<',\n      gt: '>',\n      quot: '\"'\n    } // IE 11 doesn't support `String.fromCodePoint`\n    var fromCodePoint = String.fromCodePoint || String.fromCharCode\n    /**\n     * Returns the text content of a given HTML source code string.\n     *\n     * @param {string} html\n     * @returns {string}\n     */\n    function textContent(html) {\n      // remove all tags\n      var text = html.replace(tagPattern, '') // decode known entities\n      text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n        code = code.toLowerCase()\n        if (code[0] === '#') {\n          var value\n          if (code[1] === 'x') {\n            value = parseInt(code.slice(2), 16)\n          } else {\n            value = Number(code.slice(1))\n          }\n          return fromCodePoint(value)\n        } else {\n          var known = KNOWN_ENTITY_NAMES[code]\n          if (known) {\n            return known\n          } // unable to decode\n          return m\n        }\n      })\n      return text\n    }\n    Prism.languages.md = Prism.languages.markdown\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = markupTemplating\nmarkupTemplating.displayName = 'markupTemplating'\nmarkupTemplating.aliases = []\nfunction markupTemplating(Prism) {\n  ;(function (Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___'\n    }\n    Object.defineProperties((Prism.languages['markup-templating'] = {}), {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function (env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return\n          }\n          var tokenStack = (env.tokenStack = [])\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match\n            }\n            var i = tokenStack.length\n            var placeholder // Check for existing strings\n            while (\n              env.code.indexOf((placeholder = getPlaceholder(language, i))) !==\n              -1\n            ) {\n              ++i\n            } // Create a sparse array\n            tokenStack[i] = match\n            return placeholder\n          }) // Switch the grammar to markup\n          env.grammar = Prism.languages.markup\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function (env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return\n          } // Switch the grammar back\n          env.grammar = Prism.languages[language]\n          var j = 0\n          var keys = Object.keys(env.tokenStack)\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break\n              }\n              var token = tokens[i]\n              if (\n                typeof token === 'string' ||\n                (token.content && typeof token.content === 'string')\n              ) {\n                var k = keys[j]\n                var t = env.tokenStack[k]\n                var s = typeof token === 'string' ? token : token.content\n                var placeholder = getPlaceholder(language, k)\n                var index = s.indexOf(placeholder)\n                if (index > -1) {\n                  ++j\n                  var before = s.substring(0, index)\n                  var middle = new Prism.Token(\n                    language,\n                    Prism.tokenize(t, env.grammar),\n                    'language-' + language,\n                    t\n                  )\n                  var after = s.substring(index + placeholder.length)\n                  var replacement = []\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]))\n                  }\n                  replacement.push(middle)\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]))\n                  }\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                  } else {\n                    token.content = replacement\n                  }\n                }\n              } else if (\n                token.content\n                /* && typeof token.content !== 'string' */\n              ) {\n                walkTokens(token.content)\n              }\n            }\n            return tokens\n          }\n          walkTokens(env.tokens)\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = markup\nmarkup.displayName = 'markup'\nmarkup.aliases = ['html', 'mathml', 'svg', 'xml', 'ssml', 'atom', 'rss']\nfunction markup(Prism) {\n  Prism.languages.markup = {\n    comment: {\n      pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n      greedy: true\n    },\n    prolog: {\n      pattern: /<\\?[\\s\\S]+?\\?>/,\n      greedy: true\n    },\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern:\n        /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/i,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: {\n      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n      greedy: true\n    },\n    tag: {\n      pattern:\n        /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'special-attr': [],\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [\n              {\n                pattern: /^=/,\n                alias: 'attr-equals'\n              },\n              /\"|'/\n            ]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [\n      {\n        pattern: /&[\\da-z]{1,8};/i,\n        alias: 'named-entity'\n      },\n      /&#x?[\\da-f]{1,8};/i\n    ]\n  }\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.markup['entity']\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside =\n    Prism.languages.markup // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {}\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      }\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      }\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      }\n      var def = {}\n      def[tagName] = {\n        pattern: RegExp(\n          /(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\n            /__/g,\n            function () {\n              return tagName\n            }\n          ),\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      }\n      Prism.languages.insertBefore('markup', 'cdata', def)\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n    /**\n     * Adds an pattern to highlight languages embedded in HTML attributes.\n     *\n     * An example of an inlined language is CSS with `style` attributes.\n     *\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addAttribute('style', 'css');\n     */\n    value: function (attrName, lang) {\n      Prism.languages.markup.tag.inside['special-attr'].push({\n        pattern: RegExp(\n          /(^|[\"'\\s])/.source +\n            '(?:' +\n            attrName +\n            ')' +\n            /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n          'i'\n        ),\n        lookbehind: true,\n        inside: {\n          'attr-name': /^[^\\s=]+/,\n          'attr-value': {\n            pattern: /=[\\s\\S]+/,\n            inside: {\n              value: {\n                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                lookbehind: true,\n                alias: [lang, 'language-' + lang],\n                inside: Prism.languages[lang]\n              },\n              punctuation: [\n                {\n                  pattern: /^=/,\n                  alias: 'attr-equals'\n                },\n                /\"|'/\n              ]\n            }\n          }\n        }\n      })\n    }\n  })\n  Prism.languages.html = Prism.languages.markup\n  Prism.languages.mathml = Prism.languages.markup\n  Prism.languages.svg = Prism.languages.markup\n  Prism.languages.xml = Prism.languages.extend('markup', {})\n  Prism.languages.ssml = Prism.languages.xml\n  Prism.languages.atom = Prism.languages.xml\n  Prism.languages.rss = Prism.languages.xml\n}\n","'use strict'\n\nmodule.exports = matlab\nmatlab.displayName = 'matlab'\nmatlab.aliases = []\nfunction matlab(Prism) {\n  Prism.languages.matlab = {\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n    string: {\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    // FIXME We could handle imaginary numbers as a whole\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n    keyword:\n      /\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n  }\n}\n","'use strict'\n\nmodule.exports = maxscript\nmaxscript.displayName = 'maxscript'\nmaxscript.aliases = []\nfunction maxscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i\n    Prism.languages.maxscript = {\n      comment: {\n        pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n        lookbehind: true,\n        greedy: true\n      },\n      path: {\n        pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n        greedy: true,\n        alias: 'string'\n      },\n      'function-call': {\n        pattern: RegExp(\n          '((?:' + // start of line\n            (/^/.source +\n              '|' + // operators and other language constructs\n              /[;=<>+\\-*/^({\\[]/.source +\n              '|' + // keywords as part of statements\n              /\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/\n                .source) +\n            ')[ \\t]*)' +\n            '(?!' +\n            keywords.source +\n            ')' +\n            /[a-z_]\\w*\\b/.source +\n            '(?=[ \\t]*(?:' + // variable\n            ('(?!' +\n              keywords.source +\n              ')' +\n              /[a-z_]/.source +\n              '|' + // number\n              /\\d|-\\.?\\d/.source +\n              '|' + // other expressions or literals\n              /[({'\"$@#?]/.source) +\n            '))',\n          'im'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'function-definition': {\n        pattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      argument: {\n        pattern: /\\b[a-z_]\\w*(?=:)/i,\n        alias: 'attr-name'\n      },\n      keyword: keywords,\n      boolean: /\\b(?:false|true)\\b/,\n      time: {\n        pattern:\n          /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n        lookbehind: true,\n        alias: 'number'\n      },\n      number: [\n        {\n          pattern:\n            /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n          lookbehind: true\n        },\n        /\\b(?:e|pi)\\b/\n      ],\n      constant: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\n      color: {\n        pattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\n        alias: 'constant'\n      },\n      operator: /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\n      punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = mel\nmel.displayName = 'mel'\nmel.aliases = []\nfunction mel(Prism) {\n  Prism.languages.mel = {\n    comment: /\\/\\/.*/,\n    code: {\n      pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n      greedy: true,\n      alias: 'italic',\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        } // See rest below\n      }\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+/,\n    flag: {\n      pattern: /-[^\\d\\W]\\w*/,\n      alias: 'operator'\n    },\n    keyword:\n      /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n    function:\n      /\\b\\w+(?=\\()|\\b(?:CBG|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|Mayatomr|about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n    operator: [\n      /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,:;?\\[\\](){}]/\n  }\n  Prism.languages.mel['code'].inside.rest = Prism.languages.mel\n}\n","'use strict'\n\nmodule.exports = mermaid\nmermaid.displayName = 'mermaid'\nmermaid.aliases = []\nfunction mermaid(Prism) {\n  Prism.languages.mermaid = {\n    comment: {\n      pattern: /%%.*/,\n      greedy: true\n    },\n    style: {\n      pattern:\n        /^([ \\t]*(?:classDef|linkStyle|style)[ \\t]+[\\w$-]+[ \\t]+)\\w.*[^\\s;]/m,\n      lookbehind: true,\n      inside: {\n        property: /\\b\\w[\\w-]*(?=[ \\t]*:)/,\n        operator: /:/,\n        punctuation: /,/\n      }\n    },\n    'inter-arrow-label': {\n      pattern:\n        /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \\t]*(?:\"[^\"\\r\\n]*\"|[^\\s\".=-](?:[^\\r\\n.=-]*[^\\s.=-])?)[ \\t]*(?:\\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        arrow: {\n          pattern: /(?:\\.+->?|--+[->]|==+[=>])$/,\n          alias: 'operator'\n        },\n        label: {\n          pattern: /^([\\s\\S]{2}[ \\t]*)\\S(?:[\\s\\S]*\\S)?/,\n          lookbehind: true,\n          alias: 'property'\n        },\n        'arrow-head': {\n          pattern: /^\\S+/,\n          alias: ['arrow', 'operator']\n        }\n      }\n    },\n    arrow: [\n      // This might look complex but it really isn't.\n      // There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The\n      // problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow\n      // characters in the one lookbehind because that would create too many false negatives. So we have to split the\n      // arrows into different patterns.\n      {\n        // ER diagram\n        pattern: /(^|[^{}|o.-])[|}][|o](?:--|\\.\\.)[|o][|{](?![{}|o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // flow chart\n        // (?:==+|--+|-\\.*-)\n        pattern:\n          /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\\.*-)[>ox]?|(?:==+|--+|-\\.*-)[>ox]|===+|---+|-\\.+-)(?![<>ox.=-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // sequence diagram\n        pattern:\n          /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // class diagram\n        pattern:\n          /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\\|?(?:--|\\.\\.)|(?:--|\\.\\.)\\|?>|--|\\.\\.)(?![<>|*o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    ],\n    label: {\n      pattern: /(^|[^|<])\\|(?:[^\\r\\n\"|]|\"[^\"\\r\\n]*\")+\\|/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    text: {\n      pattern: /(?:[(\\[{]+|\\b>)(?:[^\\r\\n\"()\\[\\]{}]|\"[^\"\\r\\n]*\")+(?:[)\\]}]+|>)/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    annotation: {\n      pattern:\n        /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\\[\\[(?:choice|fork|join)\\]\\]/i,\n      alias: 'important'\n    },\n    keyword: [\n      // This language has both case-sensitive and case-insensitive keywords\n      {\n        pattern:\n          /(^[ \\t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\\w$-])/m,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern:\n          /(^[ \\t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \\t]+note)?|loop|opt|par|participant|rect|state|note[ \\t]+(?:over|(?:left|right)[ \\t]+of))(?![\\w$-])/im,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    entity: /#[a-z0-9]+;/,\n    operator: {\n      pattern: /(\\w[ \\t]*)&(?=[ \\t]*\\w)|:::|:/,\n      lookbehind: true\n    },\n    punctuation: /[(){};]/\n  }\n}\n","'use strict'\n\nmodule.exports = mizar\nmizar.displayName = 'mizar'\nmizar.aliases = []\nfunction mizar(Prism) {\n  Prism.languages.mizar = {\n    comment: /::.+/,\n    keyword:\n      /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\b/,\n    parameter: {\n      pattern: /\\$(?:10|\\d)/,\n      alias: 'variable'\n    },\n    variable: /\\b\\w+(?=:)/,\n    number: /(?:\\b|-)\\d+\\b/,\n    operator: /\\.\\.\\.|->|&|\\.?=/,\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = mongodb\nmongodb.displayName = 'mongodb'\nmongodb.aliases = []\nfunction mongodb(Prism) {\n  ;(function (Prism) {\n    var operators = [\n      // query and projection\n      '$eq',\n      '$gt',\n      '$gte',\n      '$in',\n      '$lt',\n      '$lte',\n      '$ne',\n      '$nin',\n      '$and',\n      '$not',\n      '$nor',\n      '$or',\n      '$exists',\n      '$type',\n      '$expr',\n      '$jsonSchema',\n      '$mod',\n      '$regex',\n      '$text',\n      '$where',\n      '$geoIntersects',\n      '$geoWithin',\n      '$near',\n      '$nearSphere',\n      '$all',\n      '$elemMatch',\n      '$size',\n      '$bitsAllClear',\n      '$bitsAllSet',\n      '$bitsAnyClear',\n      '$bitsAnySet',\n      '$comment',\n      '$elemMatch',\n      '$meta',\n      '$slice', // update\n      '$currentDate',\n      '$inc',\n      '$min',\n      '$max',\n      '$mul',\n      '$rename',\n      '$set',\n      '$setOnInsert',\n      '$unset',\n      '$addToSet',\n      '$pop',\n      '$pull',\n      '$push',\n      '$pullAll',\n      '$each',\n      '$position',\n      '$slice',\n      '$sort',\n      '$bit', // aggregation pipeline stages\n      '$addFields',\n      '$bucket',\n      '$bucketAuto',\n      '$collStats',\n      '$count',\n      '$currentOp',\n      '$facet',\n      '$geoNear',\n      '$graphLookup',\n      '$group',\n      '$indexStats',\n      '$limit',\n      '$listLocalSessions',\n      '$listSessions',\n      '$lookup',\n      '$match',\n      '$merge',\n      '$out',\n      '$planCacheStats',\n      '$project',\n      '$redact',\n      '$replaceRoot',\n      '$replaceWith',\n      '$sample',\n      '$set',\n      '$skip',\n      '$sort',\n      '$sortByCount',\n      '$unionWith',\n      '$unset',\n      '$unwind',\n      '$setWindowFields', // aggregation pipeline operators\n      '$abs',\n      '$accumulator',\n      '$acos',\n      '$acosh',\n      '$add',\n      '$addToSet',\n      '$allElementsTrue',\n      '$and',\n      '$anyElementTrue',\n      '$arrayElemAt',\n      '$arrayToObject',\n      '$asin',\n      '$asinh',\n      '$atan',\n      '$atan2',\n      '$atanh',\n      '$avg',\n      '$binarySize',\n      '$bsonSize',\n      '$ceil',\n      '$cmp',\n      '$concat',\n      '$concatArrays',\n      '$cond',\n      '$convert',\n      '$cos',\n      '$dateFromParts',\n      '$dateToParts',\n      '$dateFromString',\n      '$dateToString',\n      '$dayOfMonth',\n      '$dayOfWeek',\n      '$dayOfYear',\n      '$degreesToRadians',\n      '$divide',\n      '$eq',\n      '$exp',\n      '$filter',\n      '$first',\n      '$floor',\n      '$function',\n      '$gt',\n      '$gte',\n      '$hour',\n      '$ifNull',\n      '$in',\n      '$indexOfArray',\n      '$indexOfBytes',\n      '$indexOfCP',\n      '$isArray',\n      '$isNumber',\n      '$isoDayOfWeek',\n      '$isoWeek',\n      '$isoWeekYear',\n      '$last',\n      '$last',\n      '$let',\n      '$literal',\n      '$ln',\n      '$log',\n      '$log10',\n      '$lt',\n      '$lte',\n      '$ltrim',\n      '$map',\n      '$max',\n      '$mergeObjects',\n      '$meta',\n      '$min',\n      '$millisecond',\n      '$minute',\n      '$mod',\n      '$month',\n      '$multiply',\n      '$ne',\n      '$not',\n      '$objectToArray',\n      '$or',\n      '$pow',\n      '$push',\n      '$radiansToDegrees',\n      '$range',\n      '$reduce',\n      '$regexFind',\n      '$regexFindAll',\n      '$regexMatch',\n      '$replaceOne',\n      '$replaceAll',\n      '$reverseArray',\n      '$round',\n      '$rtrim',\n      '$second',\n      '$setDifference',\n      '$setEquals',\n      '$setIntersection',\n      '$setIsSubset',\n      '$setUnion',\n      '$size',\n      '$sin',\n      '$slice',\n      '$split',\n      '$sqrt',\n      '$stdDevPop',\n      '$stdDevSamp',\n      '$strcasecmp',\n      '$strLenBytes',\n      '$strLenCP',\n      '$substr',\n      '$substrBytes',\n      '$substrCP',\n      '$subtract',\n      '$sum',\n      '$switch',\n      '$tan',\n      '$toBool',\n      '$toDate',\n      '$toDecimal',\n      '$toDouble',\n      '$toInt',\n      '$toLong',\n      '$toObjectId',\n      '$toString',\n      '$toLower',\n      '$toUpper',\n      '$trim',\n      '$trunc',\n      '$type',\n      '$week',\n      '$year',\n      '$zip',\n      '$count',\n      '$dateAdd',\n      '$dateDiff',\n      '$dateSubtract',\n      '$dateTrunc',\n      '$getField',\n      '$rand',\n      '$sampleRate',\n      '$setField',\n      '$unsetField', // aggregation pipeline query modifiers\n      '$comment',\n      '$explain',\n      '$hint',\n      '$max',\n      '$maxTimeMS',\n      '$min',\n      '$orderby',\n      '$query',\n      '$returnKey',\n      '$showDiskLoc',\n      '$natural'\n    ]\n    var builtinFunctions = [\n      'ObjectId',\n      'Code',\n      'BinData',\n      'DBRef',\n      'Timestamp',\n      'NumberLong',\n      'NumberDecimal',\n      'MaxKey',\n      'MinKey',\n      'RegExp',\n      'ISODate',\n      'UUID'\n    ]\n    operators = operators.map(function (operator) {\n      return operator.replace('$', '\\\\$')\n    })\n    var operatorsSource = '(?:' + operators.join('|') + ')\\\\b'\n    Prism.languages.mongodb = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('mongodb', 'string', {\n      property: {\n        pattern:\n          /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n        greedy: true,\n        inside: {\n          keyword: RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\n        }\n      }\n    })\n    Prism.languages.mongodb.string.inside = {\n      url: {\n        // url pattern\n        pattern:\n          /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n        greedy: true\n      },\n      entity: {\n        // ipv4\n        pattern:\n          /\\b(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\b/,\n        greedy: true\n      }\n    }\n    Prism.languages.insertBefore('mongodb', 'constant', {\n      builtin: {\n        pattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\n        alias: 'keyword'\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = monkey\nmonkey.displayName = 'monkey'\nmonkey.aliases = []\nfunction monkey(Prism) {\n  Prism.languages.monkey = {\n    comment: {\n      pattern: /^#Rem\\s[\\s\\S]*?^#End|'.+/im,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    preprocessor: {\n      pattern: /(^[ \\t]*)#.+/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    function: /\\b\\w+(?=\\()/,\n    'type-char': {\n      pattern: /\\b[?%#$]/,\n      alias: 'class-name'\n    },\n    number: {\n      pattern:\n        /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\\b/i,\n    operator:\n      /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[.,:;()\\[\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = moonscript\nmoonscript.displayName = 'moonscript'\nmoonscript.aliases = ['moon']\nfunction moonscript(Prism) {\n  Prism.languages.moonscript = {\n    comment: /--.*/,\n    string: [\n      {\n        pattern: /'[^']*'|\\[(=*)\\[[\\s\\S]*?\\]\\1\\]/,\n        greedy: true\n      },\n      {\n        pattern: /\"[^\"]*\"/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /#\\{[^{}]*\\}/,\n            inside: {\n              moonscript: {\n                pattern: /(^#\\{)[\\s\\S]+(?=\\})/,\n                lookbehind: true,\n                inside: null // see beow\n              },\n              'interpolation-punctuation': {\n                pattern: /#\\{|\\}/,\n                alias: 'punctuation'\n              }\n            }\n          }\n        }\n      }\n    ],\n    'class-name': [\n      {\n        pattern: /(\\b(?:class|extends)[ \\t]+)\\w+/,\n        lookbehind: true\n      }, // class-like names start with a capital letter\n      /\\b[A-Z]\\w*/\n    ],\n    keyword:\n      /\\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\\b/,\n    variable: /@@?\\w*/,\n    property: {\n      pattern: /\\b(?!\\d)\\w+(?=:)|(:)(?!\\d)\\w+/,\n      lookbehind: true\n    },\n    function: {\n      pattern:\n        /\\b(?:_G|_VERSION|assert|collectgarbage|coroutine\\.(?:create|resume|running|status|wrap|yield)|debug\\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\\b/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\B\\.\\d+|\\b\\d+\\.\\d+|\\b\\d+(?=[eE]))(?:[eE][-+]?\\d+)?\\b|\\b(?:0x[a-fA-F\\d]+|\\d+)(?:U?LL)?\\b/,\n    operator:\n      /\\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\\.\\.)=?|[:#^]|\\b(?:and|or)\\b=?|\\b(?:not)\\b/,\n    punctuation: /[.,()[\\]{}\\\\]/\n  }\n  Prism.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside =\n    Prism.languages.moonscript\n  Prism.languages.moon = Prism.languages.moonscript\n}\n","'use strict'\n\nmodule.exports = n1ql\nn1ql.displayName = 'n1ql'\nn1ql.aliases = []\nfunction n1ql(Prism) {\n  // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/index.html\n  Prism.languages.n1ql = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?(?:$|\\*\\/)|--.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n      greedy: true\n    },\n    parameter: /\\$[\\w.]+/,\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html#n1ql-reserved-words\n    keyword:\n      /\\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\\b/i,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    number: /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n    punctuation: /[;[\\](),.{}:]/\n  }\n}\n","'use strict'\n\nmodule.exports = n4js\nn4js.displayName = 'n4js'\nn4js.aliases = ['n4jsd']\nfunction n4js(Prism) {\n  Prism.languages.n4js = Prism.languages.extend('javascript', {\n    // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n    keyword:\n      /\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n  })\n  Prism.languages.insertBefore('n4js', 'constant', {\n    // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n    annotation: {\n      pattern: /@+\\w+/,\n      alias: 'operator'\n    }\n  })\n  Prism.languages.n4jsd = Prism.languages.n4js\n}\n","'use strict'\n\nmodule.exports = nand2tetrisHdl\nnand2tetrisHdl.displayName = 'nand2tetrisHdl'\nnand2tetrisHdl.aliases = []\nfunction nand2tetrisHdl(Prism) {\n  Prism.languages['nand2tetris-hdl'] = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    keyword: /\\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[A-Za-z][A-Za-z0-9]*(?=\\()/,\n    number: /\\b\\d+\\b/,\n    operator: /=|\\.\\./,\n    punctuation: /[{}[\\];(),:]/\n  }\n}\n","'use strict'\n\nmodule.exports = naniscript\nnaniscript.displayName = 'naniscript'\nnaniscript.aliases = []\nfunction naniscript(Prism) {\n  ;(function (Prism) {\n    var expressionDef = /\\{[^\\r\\n\\[\\]{}]*\\}/\n    var params = {\n      'quoted-string': {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        alias: 'operator'\n      },\n      'command-param-id': {\n        pattern: /(\\s)\\w+:/,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'command-param-value': [\n        {\n          pattern: expressionDef,\n          alias: 'selector'\n        },\n        {\n          pattern: /([\\t ])\\S+/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'operator'\n        },\n        {\n          pattern: /\\S(?:.*\\S)?/,\n          alias: 'operator'\n        }\n      ]\n    }\n    Prism.languages.naniscript = {\n      // ; ...\n      comment: {\n        pattern: /^([\\t ]*);.*/m,\n        lookbehind: true\n      },\n      // > ...\n      // Define is a control line starting with '>' followed by a word, a space and a text.\n      define: {\n        pattern: /^>.+/m,\n        alias: 'tag',\n        inside: {\n          value: {\n            pattern: /(^>\\w+[\\t ]+)(?!\\s)[^{}\\r\\n]+/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          key: {\n            pattern: /(^>)\\w+/,\n            lookbehind: true\n          }\n        }\n      },\n      // # ...\n      label: {\n        pattern: /^([\\t ]*)#[\\t ]*\\w+[\\t ]*$/m,\n        lookbehind: true,\n        alias: 'regex'\n      },\n      command: {\n        pattern: /^([\\t ]*)@\\w+(?=[\\t ]|$).*/m,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          'command-name': /^@\\w+/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'command-params': {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            inside: params\n          }\n        }\n      },\n      // Generic is any line that doesn't start with operators: ;>#@\n      'generic-text': {\n        pattern: /(^[ \\t]*)[^#@>;\\s].*/m,\n        lookbehind: true,\n        alias: 'punctuation',\n        inside: {\n          // \\{ ... \\} ... \\[ ... \\] ... \\\"\n          'escaped-char': /\\\\[{}\\[\\]\"]/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'inline-command': {\n            pattern: /\\[[\\t ]*\\w[^\\r\\n\\[\\]]*\\]/,\n            greedy: true,\n            alias: 'function',\n            inside: {\n              'command-params': {\n                pattern: /(^\\[[\\t ]*\\w+\\b)[\\s\\S]+(?=\\]$)/,\n                lookbehind: true,\n                inside: params\n              },\n              'command-param-name': {\n                pattern: /^(\\[[\\t ]*)\\w+/,\n                lookbehind: true,\n                alias: 'name'\n              },\n              'start-stop-char': /[\\[\\]]/\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.nani = Prism.languages['naniscript']\n    /** @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token */\n    /**\n     * This hook is used to validate generic-text tokens for balanced brackets.\n     * Mark token as bad-line when contains not balanced brackets: {},[]\n     */\n    Prism.hooks.add('after-tokenize', function (env) {\n      /** @type {(Token | string)[]} */\n      var tokens = env.tokens\n      tokens.forEach(function (token) {\n        if (typeof token !== 'string' && token.type === 'generic-text') {\n          var content = getTextContent(token)\n          if (!isBracketsBalanced(content)) {\n            token.type = 'bad-line'\n            token.content = content\n          }\n        }\n      })\n    })\n    /**\n     * @param {string} input\n     * @returns {boolean}\n     */\n    function isBracketsBalanced(input) {\n      var brackets = '[]{}'\n      var stack = []\n      for (var i = 0; i < input.length; i++) {\n        var bracket = input[i]\n        var bracketsIndex = brackets.indexOf(bracket)\n        if (bracketsIndex !== -1) {\n          if (bracketsIndex % 2 === 0) {\n            stack.push(bracketsIndex + 1)\n          } else if (stack.pop() !== bracketsIndex) {\n            return false\n          }\n        }\n      }\n      return stack.length === 0\n    }\n    /**\n     * @param {string | Token | (string | Token)[]} token\n     * @returns {string}\n     */\n    function getTextContent(token) {\n      if (typeof token === 'string') {\n        return token\n      } else if (Array.isArray(token)) {\n        return token.map(getTextContent).join('')\n      } else {\n        return getTextContent(token.content)\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = nasm\nnasm.displayName = 'nasm'\nnasm.aliases = []\nfunction nasm(Prism) {\n  Prism.languages.nasm = {\n    comment: /;.*$/m,\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    label: {\n      pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: [\n      /\\[?BITS (?:16|32|64)\\]?/,\n      {\n        pattern: /(^\\s*)section\\s*[a-z.]+:?/im,\n        lookbehind: true\n      },\n      /(?:extern|global)[^;\\r\\n]*/i,\n      /(?:CPU|DEFAULT|FLOAT).*$/m\n    ],\n    register: {\n      pattern:\n        /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\\b/i,\n      alias: 'variable'\n    },\n    number:\n      /(?:\\b|(?=\\$))(?:0[hx](?:\\.[\\da-f]+|[\\da-f]+(?:\\.[\\da-f]+)?)(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n    operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n  }\n}\n","'use strict'\n\nmodule.exports = neon\nneon.displayName = 'neon'\nneon.aliases = []\nfunction neon(Prism) {\n  Prism.languages.neon = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    datetime: {\n      pattern:\n        /(^|[[{(=:,\\s])\\d\\d\\d\\d-\\d\\d?-\\d\\d?(?:(?:[Tt]| +)\\d\\d?:\\d\\d:\\d\\d(?:\\.\\d*)? *(?:Z|[-+]\\d\\d?(?::?\\d\\d)?)?)?(?=$|[\\]}),\\s])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    key: {\n      pattern: /(^|[[{(,\\s])[^,:=[\\]{}()'\"\\s]+(?=\\s*:(?:$|[\\]}),\\s])|\\s*=)/,\n      lookbehind: true,\n      alias: 'atrule'\n    },\n    number: {\n      pattern:\n        /(^|[[{(=:,\\s])[+-]?(?:0x[\\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:[eE][+-]?\\d+)?)(?=$|[\\]}),:=\\s])/,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[[{(=:,\\s])(?:false|no|true|yes)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true\n    },\n    null: {\n      pattern: /(^|[[{(=:,\\s])(?:null)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    string: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:('''|\"\"\")\\r?\\n(?:(?:[^\\r\\n]|\\r?\\n(?![\\t ]*\\2))*\\r?\\n)?[\\t ]*\\2|'[^'\\r\\n]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    literal: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:[^#\"',:=[\\]{}()\\s`-]|[:-][^\"',=[\\]{}()\\s])(?:[^,:=\\]})(\\s]|:(?![\\s,\\]})]|$)|[ \\t]+[^#,:=\\]})(\\s])*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    punctuation: /[,:=[\\]{}()-]/\n  }\n}\n","'use strict'\n\nmodule.exports = nevod\nnevod.displayName = 'nevod'\nnevod.aliases = []\nfunction nevod(Prism) {\n  Prism.languages.nevod = {\n    comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n    string: {\n      pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n      greedy: true,\n      inside: {\n        'string-attrs': /!$|!\\*$|\\*$/\n      }\n    },\n    namespace: {\n      pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n      lookbehind: true\n    },\n    pattern: {\n      pattern:\n        /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      inside: {\n        'pattern-name': {\n          pattern: /^#?[a-zA-Z0-9\\-.]+/,\n          alias: 'class-name'\n        },\n        fields: {\n          pattern: /\\(.*\\)/,\n          inside: {\n            'field-name': {\n              pattern: /[a-zA-Z0-9\\-.]+/,\n              alias: 'variable'\n            },\n            punctuation: /[,()]/,\n            operator: {\n              pattern: /~/,\n              alias: 'field-hidden-mark'\n            }\n          }\n        }\n      }\n    },\n    search: {\n      pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n      alias: 'function',\n      lookbehind: true\n    },\n    keyword:\n      /@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\n    'standard-pattern': {\n      pattern:\n        /\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n      inside: {\n        'standard-pattern-name': {\n          pattern: /^[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        quantifier: {\n          pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n          alias: 'number'\n        },\n        'standard-pattern-attr': {\n          pattern: /[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        punctuation: /[,()]/\n      }\n    },\n    quantifier: {\n      pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n      alias: 'number'\n    },\n    operator: [\n      {\n        pattern: /=/,\n        alias: 'pattern-def'\n      },\n      {\n        pattern: /&/,\n        alias: 'conjunction'\n      },\n      {\n        pattern: /~/,\n        alias: 'exception'\n      },\n      {\n        pattern: /\\?/,\n        alias: 'optionality'\n      },\n      {\n        pattern: /[[\\]]/,\n        alias: 'repetition'\n      },\n      {\n        pattern: /[{}]/,\n        alias: 'variation'\n      },\n      {\n        pattern: /[+_]/,\n        alias: 'sequence'\n      },\n      {\n        pattern: /\\.{2,3}/,\n        alias: 'span'\n      }\n    ],\n    'field-capture': [\n      {\n        pattern:\n          /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      },\n      {\n        pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      }\n    ],\n    punctuation: /[:;,()]/,\n    name: /[a-zA-Z0-9\\-.]+/\n  }\n}\n","'use strict'\n\nmodule.exports = nginx\nnginx.displayName = 'nginx'\nnginx.aliases = []\nfunction nginx(Prism) {\n  ;(function (Prism) {\n    var variable =\n      /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i\n    Prism.languages.nginx = {\n      comment: {\n        pattern: /(^|[\\s{};])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      directive: {\n        pattern:\n          /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              escape: {\n                pattern: /\\\\[\"'\\\\nrt]/,\n                alias: 'entity'\n              },\n              variable: variable\n            }\n          },\n          comment: {\n            pattern: /(\\s)#.*/,\n            lookbehind: true,\n            greedy: true\n          },\n          keyword: {\n            pattern: /^\\S+/,\n            greedy: true\n          },\n          // other patterns\n          boolean: {\n            pattern: /(\\s)(?:off|on)(?!\\S)/,\n            lookbehind: true\n          },\n          number: {\n            pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n            lookbehind: true\n          },\n          variable: variable\n        }\n      },\n      punctuation: /[{};]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = nim\nnim.displayName = 'nim'\nnim.aliases = []\nfunction nim(Prism) {\n  Prism.languages.nim = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n      pattern:\n        /(?:\\b(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")/,\n      greedy: true\n    },\n    char: {\n      // Character literals are handled specifically to prevent issues with numeric type suffixes\n      pattern: /'(?:\\\\(?:\\d+|x[\\da-fA-F]{0,2}|.)|[^'])'/,\n      greedy: true\n    },\n    function: {\n      pattern:\n        /(?:(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        operator: /\\*$/\n      }\n    },\n    // We don't want to highlight operators (and anything really) inside backticks\n    identifier: {\n      pattern: /`[^`\\r\\n]+`/,\n      greedy: true,\n      inside: {\n        punctuation: /`/\n      }\n    },\n    // The negative look ahead prevents wrong highlighting of the .. operator\n    number:\n      /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n    keyword:\n      /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n    operator: {\n      // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n      // but allow the slice operator .. to take precedence over them\n      // One can define his own operators in Nim so all combination of operators might be an operator.\n      pattern:\n        /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\\b)/m,\n      lookbehind: true\n    },\n    punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n  }\n}\n","'use strict'\n\nmodule.exports = nix\nnix.displayName = 'nix'\nnix.aliases = []\nfunction nix(Prism) {\n  Prism.languages.nix = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\n          lookbehind: true,\n          inside: null // see below\n        }\n      }\n    },\n    url: [\n      /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n      {\n        pattern:\n          /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }\n    ],\n    antiquotation: {\n      pattern: /\\$(?=\\{)/,\n      alias: 'important'\n    },\n    number: /\\b\\d+\\b/,\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n    function:\n      /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n    punctuation: /[{}()[\\].,:;]/\n  }\n  Prism.languages.nix.string.inside.interpolation.inside = Prism.languages.nix\n}\n","'use strict'\n\nmodule.exports = nsis\nnsis.displayName = 'nsis'\nnsis.aliases = []\nfunction nsis(Prism) {\n  /**\n   * Original by Jan T. Sott (http://github.com/idleberg)\n   *\n   * Includes all commands and plug-ins shipped with NSIS 3.08\n   */\n  Prism.languages.nsis = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\\b/m,\n      lookbehind: true\n    },\n    property:\n      /\\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\\b/,\n    constant: /\\$\\{[!\\w\\.:\\^-]+\\}|\\$\\([!\\w\\.:\\^-]+\\)/,\n    variable: /\\$\\w[\\w\\.]*/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n    punctuation: /[{}[\\];(),.:]/,\n    important: {\n      pattern:\n        /(^[\\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = objectivec\nobjectivec.displayName = 'objectivec'\nobjectivec.aliases = ['objc']\nfunction objectivec(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.objectivec = Prism.languages.extend('c', {\n    string: {\n      pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n  })\n  delete Prism.languages.objectivec['class-name']\n  Prism.languages.objc = Prism.languages.objectivec\n}\n","'use strict'\n\nmodule.exports = ocaml\nocaml.displayName = 'ocaml'\nocaml.aliases = []\nfunction ocaml(Prism) {\n  // https://ocaml.org/manual/lex.html\n  Prism.languages.ocaml = {\n    comment: {\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n      greedy: true\n    },\n    char: {\n      pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n      greedy: true\n    },\n    string: [\n      {\n        pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      {\n        pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n        greedy: true\n      }\n    ],\n    number: [\n      // binary and octal\n      /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n      /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n      /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i\n    ],\n    directive: {\n      pattern: /\\B#\\w+/,\n      alias: 'property'\n    },\n    label: {\n      pattern: /\\B~\\w+/,\n      alias: 'property'\n    },\n    'type-variable': {\n      pattern: /\\B'\\w+/,\n      alias: 'function'\n    },\n    variant: {\n      pattern: /`\\w+/,\n      alias: 'symbol'\n    },\n    // For the list of keywords and operators,\n    // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n    keyword:\n      /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    'operator-like-punctuation': {\n      pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n      alias: 'punctuation'\n    },\n    // Custom operators are allowed\n    operator:\n      /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n    punctuation: /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = opencl\nopencl.displayName = 'opencl'\nopencl.aliases = []\nfunction opencl(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    /* OpenCL kernel language */\n    Prism.languages.opencl = Prism.languages.extend('c', {\n      // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n      keyword:\n        /\\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\\b/,\n      // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n      // Math Constants: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/mathConstants.html\n      // Macros and Limits: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/macroLimits.html\n      number:\n        /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[fuhl]{0,4}/i,\n      boolean: /\\b(?:false|true)\\b/,\n      'constant-opencl-kernel': {\n        pattern:\n          /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\\b/,\n        alias: 'constant'\n      }\n    })\n    Prism.languages.insertBefore('opencl', 'class-name', {\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/scalarDataTypes.html\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/otherDataTypes.html\n      'builtin-type': {\n        pattern:\n          /\\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\\b/,\n        alias: 'keyword'\n      }\n    })\n    var attributes = {\n      // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n      'type-opencl-host': {\n        pattern:\n          /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n        alias: 'keyword'\n      },\n      'boolean-opencl-host': {\n        pattern: /\\bCL_(?:FALSE|TRUE)\\b/,\n        alias: 'boolean'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n      'constant-opencl-host': {\n        pattern:\n          /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n        alias: 'constant'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n      'function-opencl-host': {\n        pattern:\n          /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n        alias: 'function'\n      }\n    }\n    /* OpenCL host API */\n    Prism.languages.insertBefore('c', 'keyword', attributes) // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n    if (Prism.languages.cpp) {\n      // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n      attributes['type-opencl-host-cpp'] = {\n        pattern:\n          /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\\b/,\n        alias: 'keyword'\n      }\n      Prism.languages.insertBefore('cpp', 'keyword', attributes)\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = openqasm\nopenqasm.displayName = 'openqasm'\nopenqasm.aliases = ['qasm']\nfunction openqasm(Prism) {\n  // https://qiskit.github.io/openqasm/grammar/index.html\n  Prism.languages.openqasm = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\\b|#pragma\\b/,\n    'class-name':\n      /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n    function: /\\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\\b(?=\\s*\\()/,\n    constant: /\\b(?:euler|pi|tau)\\b|π|𝜏|ℇ/,\n    number: {\n      pattern:\n        /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n      lookbehind: true\n    },\n    operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n    punctuation: /[(){}\\[\\];,:.]/\n  }\n  Prism.languages.qasm = Prism.languages.openqasm\n}\n","'use strict'\n\nmodule.exports = oz\noz.displayName = 'oz'\noz.aliases = []\nfunction oz(Prism) {\n  Prism.languages.oz = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    atom: {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\$|\\[\\]|\\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n    function: [\n      /\\b[a-z][A-Za-z\\d]*(?=\\()/,\n      {\n        pattern: /(\\{)[A-Z][A-Za-z\\d]*\\b/,\n        lookbehind: true\n      }\n    ],\n    number:\n      /\\b(?:0[bx][\\da-f]+|\\d+(?:\\.\\d*)?(?:e~?\\d+)?)\\b|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n    variable: /`(?:[^`\\\\]|\\\\.)+`/,\n    'attr-name': /\\b\\w+(?=[ \\t]*:(?![:=]))/,\n    operator:\n      /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n    punctuation: /[\\[\\](){}.:;?]/\n  }\n}\n","'use strict'\n\nmodule.exports = parigp\nparigp.displayName = 'parigp'\nparigp.aliases = []\nfunction parigp(Prism) {\n  Prism.languages.parigp = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      greedy: true\n    },\n    // PARI/GP does not care about white spaces at all\n    // so let's process the keywords to build an appropriate regexp\n    // (e.g. \"b *r *e *a *k\", etc.)\n    keyword: (function () {\n      var keywords = [\n        'breakpoint',\n        'break',\n        'dbg_down',\n        'dbg_err',\n        'dbg_up',\n        'dbg_x',\n        'forcomposite',\n        'fordiv',\n        'forell',\n        'forpart',\n        'forprime',\n        'forstep',\n        'forsubgroup',\n        'forvec',\n        'for',\n        'iferr',\n        'if',\n        'local',\n        'my',\n        'next',\n        'return',\n        'until',\n        'while'\n      ]\n      keywords = keywords\n        .map(function (keyword) {\n          return keyword.split('').join(' *')\n        })\n        .join('|')\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b')\n    })(),\n    function: /\\b\\w(?:[\\w ]*\\w)?(?= *\\()/,\n    number: {\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\n      pattern:\n        /((?:\\. *\\. *)?)(?:\\b\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *(?:[+-] *)?\\d(?: *\\d)*)?/i,\n      lookbehind: true\n    },\n    operator:\n      /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n    punctuation: /[\\[\\]{}().,:;|]/\n  }\n}\n","'use strict'\n\nmodule.exports = parser\nparser.displayName = 'parser'\nparser.aliases = []\nfunction parser(Prism) {\n  ;(function (Prism) {\n    var parser = (Prism.languages.parser = Prism.languages.extend('markup', {\n      keyword: {\n        pattern:\n          /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n        lookbehind: true\n      },\n      variable: {\n        pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\.|:+/\n        }\n      },\n      function: {\n        pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /(^@)(?:GET_|SET_)/,\n            lookbehind: true\n          },\n          punctuation: /\\.|:+/\n        }\n      },\n      escape: {\n        pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n        alias: 'builtin'\n      },\n      punctuation: /[\\[\\](){};]/\n    }))\n    parser = Prism.languages.insertBefore('parser', 'keyword', {\n      'parser-comment': {\n        pattern: /(\\s)#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      expression: {\n        // Allow for 3 levels of depth\n        pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n        greedy: true,\n        lookbehind: true,\n        inside: {\n          string: {\n            pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n            lookbehind: true\n          },\n          keyword: parser.keyword,\n          variable: parser.variable,\n          function: parser.function,\n          boolean: /\\b(?:false|true)\\b/,\n          number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)\\b/i,\n          escape: parser.escape,\n          operator:\n            /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n          punctuation: parser.punctuation\n        }\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        expression: parser.expression,\n        keyword: parser.keyword,\n        variable: parser.variable,\n        function: parser.function,\n        escape: parser.escape,\n        'parser-punctuation': {\n          pattern: parser.punctuation,\n          alias: 'punctuation'\n        }\n      },\n      parser['tag'].inside['attr-value']\n    )\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pascal\npascal.displayName = 'pascal'\npascal.aliases = ['objectpascal']\nfunction pascal(Prism) {\n  // Based on Free Pascal\n  /* TODO\nSupport inline asm ?\n*/\n  Prism.languages.pascal = {\n    directive: {\n      pattern: /\\{\\$[\\s\\S]*?\\}/,\n      greedy: true,\n      alias: ['marco', 'property']\n    },\n    comment: {\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    asm: {\n      pattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/i,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n    },\n    keyword: [\n      {\n        // Turbo Pascal\n        pattern:\n          /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Free Pascal\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Object Pascal\n        pattern:\n          /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Modifiers\n        pattern:\n          /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n        lookbehind: true\n      }\n    ],\n    number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n    ],\n    operator: [\n      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/,\n      {\n        pattern:\n          /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  }\n  Prism.languages.pascal.asm.inside = Prism.languages.extend('pascal', {\n    asm: undefined,\n    keyword: undefined,\n    operator: undefined\n  })\n  Prism.languages.objectpascal = Prism.languages.pascal\n}\n","'use strict'\n\nmodule.exports = pascaligo\npascaligo.displayName = 'pascaligo'\npascaligo.aliases = []\nfunction pascaligo(Prism) {\n  ;(function (Prism) {\n    // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n    var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source\n    var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(\n      /<braces>/g,\n      function () {\n        return braces\n      }\n    )\n    var pascaligo = (Prism.languages.pascaligo = {\n      comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n        greedy: true\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(\n              /<type>/g,\n              function () {\n                return type\n              }\n            ),\n            'i'\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () {\n              return type\n            }),\n            'i'\n          ),\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /(:\\s*)<type>/.source.replace(/<type>/g, function () {\n              return type\n            })\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      keyword: {\n        pattern:\n          /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[^&])\\b(?:False|True)\\b/i,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n        lookbehind: true\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: [\n        // Hexadecimal, octal and binary\n        /%[01]+|&[0-7]+|\\$[a-f\\d]+/i, // Decimal\n        /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n      ],\n      operator:\n        /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n    })\n    var classNameInside = [\n      'comment',\n      'keyword',\n      'builtin',\n      'operator',\n      'punctuation'\n    ].reduce(function (accum, key) {\n      accum[key] = pascaligo[key]\n      return accum\n    }, {})\n    pascaligo['class-name'].forEach(function (p) {\n      p.inside = classNameInside\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pcaxis\npcaxis.displayName = 'pcaxis'\npcaxis.aliases = ['px']\nfunction pcaxis(Prism) {\n  Prism.languages.pcaxis = {\n    string: /\"[^\"]*\"/,\n    keyword: {\n      pattern:\n        /((?:^|;)\\s*)[-A-Z\\d]+(?:\\s*\\[[-\\w]+\\])?(?:\\s*\\(\"[^\"]*\"(?:,\\s*\"[^\"]*\")*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        keyword: /^[-A-Z\\d]+/,\n        language: {\n          pattern: /^(\\s*)\\[[-\\w]+\\]/,\n          lookbehind: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            property: /[-\\w]+/\n          }\n        },\n        'sub-key': {\n          pattern: /^(\\s*)\\S[\\s\\S]*/,\n          lookbehind: true,\n          inside: {\n            parameter: {\n              pattern: /\"[^\"]*\"/,\n              alias: 'property'\n            },\n            punctuation: /^\\(|\\)$|,/\n          }\n        }\n      }\n    },\n    operator: /=/,\n    tlist: {\n      pattern:\n        /TLIST\\s*\\(\\s*\\w+(?:(?:\\s*,\\s*\"[^\"]*\")+|\\s*,\\s*\"[^\"]*\"-\"[^\"]*\")?\\s*\\)/,\n      greedy: true,\n      inside: {\n        function: /^TLIST/,\n        property: {\n          pattern: /^(\\s*\\(\\s*)\\w+/,\n          lookbehind: true\n        },\n        string: /\"[^\"]*\"/,\n        punctuation: /[(),]/,\n        operator: /-/\n      }\n    },\n    punctuation: /[;,]/,\n    number: {\n      pattern: /(^|\\s)\\d+(?:\\.\\d+)?(?!\\S)/,\n      lookbehind: true\n    },\n    boolean: /NO|YES/\n  }\n  Prism.languages.px = Prism.languages.pcaxis\n}\n","'use strict'\n\nmodule.exports = peoplecode\npeoplecode.displayName = 'peoplecode'\npeoplecode.aliases = ['pcode']\nfunction peoplecode(Prism) {\n  Prism.languages.peoplecode = {\n    comment: RegExp(\n      [\n        // C-style multiline comments\n        /\\/\\*[\\s\\S]*?\\*\\//.source, // REM comments\n        /\\bREM[^;]*;/.source, // Nested <* *> comments\n        /<\\*(?:[^<*]|\\*(?!>)|<(?!\\*)|<\\*(?:(?!\\*>)[\\s\\S])*\\*>)*\\*>/.source, // /+ +/ comments\n        /\\/\\+[\\s\\S]*?\\+\\//.source\n      ].join('|')\n    ),\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    variable: /%\\w+/,\n    'function-definition': {\n      pattern: /((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'class-name': {\n      pattern:\n        /((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /:/\n      }\n    },\n    keyword:\n      /\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\n    'operator-keyword': {\n      pattern: /\\b(?:and|not|or)\\b/i,\n      alias: 'operator'\n    },\n    function: /[_a-z]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,\n    punctuation: /[:.;,()[\\]]/\n  }\n  Prism.languages.pcode = Prism.languages.peoplecode\n}\n","'use strict'\n\nmodule.exports = perl\nperl.displayName = 'perl'\nperl.aliases = []\nfunction perl(Prism) {\n  ;(function (Prism) {\n    var brackets =\n      /(?:\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}|\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)/\n        .source\n    Prism.languages.perl = {\n      comment: [\n        {\n          // POD\n          pattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // TODO Could be nice to handle Heredoc too.\n      string: [\n        {\n          pattern: RegExp(\n            /\\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // q/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, // q a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source, // q(...)\n                // q{...}\n                // q[...]\n                // q<...>\n                brackets\n              ].join('|') +\n              ')'\n          ),\n          greedy: true\n        }, // \"...\", `...`\n        {\n          pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n          greedy: true\n        }, // '...'\n        // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n        {\n          pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n          greedy: true\n        }\n      ],\n      regex: [\n        {\n          pattern: RegExp(\n            /\\b(?:m|qr)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // m/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, // m a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source, // m(...)\n                // m{...}\n                // m[...]\n                // m<...>\n                brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngc]*/.source\n          ),\n          greedy: true\n        }, // The lookbehinds prevent -s from breaking\n        {\n          pattern: RegExp(\n            /(^|[^-])\\b(?:s|tr|y)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // s/.../.../\n                // eslint-disable-next-line regexp/strict\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/\n                  .source, // s a...a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3/\n                  .source, // s(...)(...)\n                // s{...}{...}\n                // s[...][...]\n                // s<...><...>\n                // s(...)[...]\n                brackets + /\\s*/.source + brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngcer]*/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        }, // /.../\n        // The look-ahead tries to prevent two divisions on\n        // the same line from being highlighted as regex.\n        // This does not support multi-line regex.\n        {\n          pattern:\n            /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\\b))/,\n          greedy: true\n        }\n      ],\n      // FIXME Not sure about the handling of ::, ', and #\n      variable: [\n        // ${^POSTMATCH}\n        /[&*$@%]\\{\\^[A-Z]+\\}/, // $^V\n        /[&*$@%]\\^[A-Z_]/, // ${...}\n        /[&*$@%]#?(?=\\{)/, // $foo\n        /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/, // $1\n        /[&*$@%]\\d+/, // $_, @_, %!\n        // The negative lookahead prevents from breaking the %= operator\n        /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n      ],\n      filehandle: {\n        // <>, <FOO>, _\n        pattern: /<(?![<=])\\S*?>|\\b_\\b/,\n        alias: 'symbol'\n      },\n      'v-string': {\n        // v1.2, 1.2.3\n        pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n        alias: 'string'\n      },\n      function: {\n        pattern: /(\\bsub[ \\t]+)\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n      operator:\n        /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\\b/,\n      punctuation: /[{}[\\];(),:]/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorPhp = require('./php.js')\nmodule.exports = phpExtras\nphpExtras.displayName = 'phpExtras'\nphpExtras.aliases = []\nfunction phpExtras(Prism) {\n  Prism.register(refractorPhp)\n  Prism.languages.insertBefore('php', 'variable', {\n    this: {\n      pattern: /\\$this\\b/,\n      alias: 'keyword'\n    },\n    global:\n      /\\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\\b/,\n    scope: {\n      pattern: /\\b[\\w\\\\]+::/,\n      inside: {\n        keyword: /\\b(?:parent|self|static)\\b/,\n        punctuation: /::|\\\\/\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = php\nphp.displayName = 'php'\nphp.aliases = []\nfunction php(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   * Rewritten by Tom Pavelec\n   *\n   * Supports PHP 5.3 - 8.0\n   */\n  ;(function (Prism) {\n    var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/\n    var constant = [\n      {\n        pattern: /\\b(?:false|true)\\b/i,\n        alias: 'boolean'\n      },\n      {\n        pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n        greedy: true,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n        greedy: true,\n        lookbehind: true\n      },\n      /\\b(?:null)\\b/i,\n      /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/\n    ]\n    var number =\n      /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    var operator =\n      /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/\n    var punctuation = /[{}\\[\\](),:;]/\n    Prism.languages.php = {\n      delimiter: {\n        pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n        alias: 'important'\n      },\n      comment: comment,\n      variable: /\\$+(?:\\w+\\b|(?=\\{))/,\n      package: {\n        pattern:\n          /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      'class-name-definition': {\n        pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'function-definition': {\n        pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n          alias: 'type-casting',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string|void)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n          alias: 'type-declaration',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          // yield from\n          pattern: /(\\byield\\s+)from\\b/i,\n          lookbehind: true\n        }, // `class` is always a keyword unlike other keywords\n        /\\bclass\\b/i,\n        {\n          // https://www.php.net/manual/en/reserved.keywords.php\n          //\n          // keywords cannot be preceded by \"->\"\n          // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n          pattern:\n            /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n          lookbehind: true\n        }\n      ],\n      'argument-name': {\n        pattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-declaration'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n          alias: ['class-name-fully-qualified', 'static-context'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-hint'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: ['class-name-fully-qualified', 'return-type'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        }\n      ],\n      constant: constant,\n      function: {\n        pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      property: {\n        pattern: /(->\\s*)\\w+/,\n        lookbehind: true\n      },\n      number: number,\n      operator: operator,\n      punctuation: punctuation\n    }\n    var string_interpolation = {\n      pattern:\n        /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n      lookbehind: true,\n      inside: Prism.languages.php\n    }\n    var string = [\n      {\n        pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n        alias: 'nowdoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<'?|[';]$/\n            }\n          }\n        }\n      },\n      {\n        pattern:\n          /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n        alias: 'heredoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<\"?|[\";]$/\n            }\n          },\n          interpolation: string_interpolation\n        }\n      },\n      {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        alias: 'backtick-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        alias: 'single-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        alias: 'double-quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: string_interpolation\n        }\n      }\n    ]\n    Prism.languages.insertBefore('php', 'variable', {\n      string: string,\n      attribute: {\n        pattern:\n          /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n        greedy: true,\n        inside: {\n          'attribute-content': {\n            pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n            lookbehind: true,\n            // inside can appear subset of php\n            inside: {\n              comment: comment,\n              string: string,\n              'attribute-class-name': [\n                {\n                  pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                  alias: 'class-name',\n                  greedy: true,\n                  lookbehind: true\n                },\n                {\n                  pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n                  alias: ['class-name', 'class-name-fully-qualified'],\n                  greedy: true,\n                  lookbehind: true,\n                  inside: {\n                    punctuation: /\\\\/\n                  }\n                }\n              ],\n              constant: constant,\n              number: number,\n              operator: operator,\n              punctuation: punctuation\n            }\n          },\n          delimiter: {\n            pattern: /^#\\[|\\]$/,\n            alias: 'punctuation'\n          }\n        }\n      }\n    })\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (!/<\\?/.test(env.code)) {\n        return\n      }\n      var phpPattern =\n        /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'php',\n        phpPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php')\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorPhp = require('./php.js')\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = phpdoc\nphpdoc.displayName = 'phpdoc'\nphpdoc.aliases = []\nfunction phpdoc(Prism) {\n  Prism.register(refractorPhp)\n  Prism.register(refractorJavadoclike)\n  ;(function (Prism) {\n    var typeExpression = /(?:\\b[a-zA-Z]\\w*|[|\\\\[\\]])+/.source\n    Prism.languages.phpdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        pattern: RegExp(\n          '(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:' +\n            typeExpression +\n            '\\\\s+)?)\\\\$\\\\w+'\n        ),\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('phpdoc', 'keyword', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            '(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)' +\n              typeExpression\n          ),\n          lookbehind: true,\n          inside: {\n            keyword:\n              /\\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\\b/,\n            punctuation: /[|\\\\[\\]()]/\n          }\n        }\n      ]\n    })\n    Prism.languages.javadoclike.addSupport('php', Prism.languages.phpdoc)\n  })(Prism)\n}\n","'use strict'\nvar refractorSql = require('./sql.js')\nmodule.exports = plsql\nplsql.displayName = 'plsql'\nplsql.aliases = []\nfunction plsql(Prism) {\n  Prism.register(refractorSql)\n  Prism.languages.plsql = Prism.languages.extend('sql', {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|--.*/,\n      greedy: true\n    },\n    // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-reserved-words-keywords.html\n    keyword:\n      /\\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\\b/i,\n    // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-language-fundamentals.html#GUID-96A42F7C-7A71-4B90-8255-CA9C8BD9722E\n    operator: /:=?|=>|[<>^~!]=|\\.\\.|\\|\\||\\*\\*|[-+*/%<>=@]/\n  })\n  Prism.languages.insertBefore('plsql', 'operator', {\n    label: {\n      pattern: /<<\\s*\\w+\\s*>>/,\n      alias: 'symbol'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = powerquery\npowerquery.displayName = 'powerquery'\npowerquery.aliases = []\nfunction powerquery(Prism) {\n  // https://docs.microsoft.com/en-us/powerquery-m/power-query-m-language-specification\n  Prism.languages.powerquery = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'quoted-identifier': {\n      pattern: /#\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    string: {\n      pattern: /(?:#!)?\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    constant: [\n      /\\bDay\\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\\b/,\n      /\\bTraceLevel\\.(?:Critical|Error|Information|Verbose|Warning)\\b/,\n      /\\bOccurrence\\.(?:All|First|Last)\\b/,\n      /\\bOrder\\.(?:Ascending|Descending)\\b/,\n      /\\bRoundingMode\\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\\b/,\n      /\\bMissingField\\.(?:Error|Ignore|UseNull)\\b/,\n      /\\bQuoteStyle\\.(?:Csv|None)\\b/,\n      /\\bJoinKind\\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\\b/,\n      /\\bGroupKind\\.(?:Global|Local)\\b/,\n      /\\bExtraValues\\.(?:Error|Ignore|List)\\b/,\n      /\\bJoinAlgorithm\\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\\b/,\n      /\\bJoinSide\\.(?:Left|Right)\\b/,\n      /\\bPrecision\\.(?:Decimal|Double)\\b/,\n      /\\bRelativePosition\\.From(?:End|Start)\\b/,\n      /\\bTextEncoding\\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\\b/,\n      /\\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\\.Type\\b/,\n      /\\bnull\\b/\n    ],\n    boolean: /\\b(?:false|true)\\b/,\n    keyword:\n      /\\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\\b/,\n    function: {\n      pattern: /(^|[^#\\w.])[a-z_][\\w.]*(?=\\s*\\()/i,\n      lookbehind: true\n    },\n    'data-type': {\n      pattern:\n        /\\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\\b/,\n      alias: 'class-name'\n    },\n    number: {\n      pattern:\n        /\\b0x[\\da-f]+\\b|(?:[+-]?(?:\\b\\d+\\.)?\\b\\d+|[+-]\\.\\d+|(^|[^.])\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n      lookbehind: true\n    },\n    operator: /[-+*\\/&?@^]|<(?:=>?|>)?|>=?|=>?|\\.\\.\\.?/,\n    punctuation: /[,;\\[\\](){}]/\n  }\n  Prism.languages.pq = Prism.languages['powerquery']\n  Prism.languages.mscript = Prism.languages['powerquery']\n}\n","'use strict'\n\nmodule.exports = powershell\npowershell.displayName = 'powershell'\npowershell.aliases = []\nfunction powershell(Prism) {\n  ;(function (Prism) {\n    var powershell = (Prism.languages.powershell = {\n      comment: [\n        {\n          pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^`])#.*/,\n          lookbehind: true\n        }\n      ],\n      string: [\n        {\n          pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n          greedy: true,\n          inside: null // see below\n        },\n        {\n          pattern: /'(?:[^']|'')*'/,\n          greedy: true\n        }\n      ],\n      // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n      // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n      namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*\\]|[^\\[\\]])*\\]|[^\\[\\]])*\\]/i,\n      boolean: /\\$(?:false|true)\\b/i,\n      variable: /\\$\\w+\\b/,\n      // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n      // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      function: [\n        /\\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\\b/i,\n        /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\n      ],\n      // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n      keyword:\n        /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n      operator: {\n        pattern:\n          /(^|\\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n        lookbehind: true\n      },\n      punctuation: /[|{}[\\];(),.]/\n    }) // Variable interpolation inside strings, and nested expressions\n    powershell.string[0].inside = {\n      function: {\n        // Allow for one level of nesting\n        pattern: /(^|[^`])\\$\\((?:\\$\\([^\\r\\n()]*\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n        lookbehind: true,\n        inside: powershell\n      },\n      boolean: powershell.boolean,\n      variable: powershell.variable\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = processing\nprocessing.displayName = 'processing'\nprocessing.aliases = []\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword:\n      /\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    // Spaces are allowed between function name and parenthesis\n    function: /\\b\\w+(?=\\s*\\()/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n      alias: 'class-name'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = prolog\nprolog.displayName = 'prolog'\nprolog.aliases = []\nfunction prolog(Prism) {\n  Prism.languages.prolog = {\n    // Syntax depends on the implementation\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      greedy: true\n    },\n    // Depending on the implementation, strings may allow escaped newlines and quote-escape\n    string: {\n      pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1(?!\\1)/,\n      greedy: true\n    },\n    builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n    // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n    function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n    number: /\\b\\d+(?:\\.\\d*)?/,\n    // Custom operators are allowed\n    operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n    punctuation: /[(){}\\[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = promql\npromql.displayName = 'promql'\npromql.aliases = []\nfunction promql(Prism) {\n  // Thanks to: https://github.com/prometheus-community/monaco-promql/blob/master/src/promql/promql.ts\n  // As well as: https://kausal.co/blog/slate-prism-add-new-syntax-promql/\n  ;(function (Prism) {\n    // PromQL Aggregation Operators\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#aggregation-operators)\n    var aggregations = [\n      'sum',\n      'min',\n      'max',\n      'avg',\n      'group',\n      'stddev',\n      'stdvar',\n      'count',\n      'count_values',\n      'bottomk',\n      'topk',\n      'quantile'\n    ] // PromQL vector matching + the by and without clauses\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#vector-matching)\n    var vectorMatching = [\n      'on',\n      'ignoring',\n      'group_right',\n      'group_left',\n      'by',\n      'without'\n    ] // PromQL offset modifier\n    // (https://prometheus.io/docs/prometheus/latest/querying/basics/#offset-modifier)\n    var offsetModifier = ['offset']\n    var keywords = aggregations.concat(vectorMatching, offsetModifier)\n    Prism.languages.promql = {\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      'vector-match': {\n        // Match the comma-separated label lists inside vector matching:\n        pattern: new RegExp(\n          '((?:' + vectorMatching.join('|') + ')\\\\s*)\\\\([^)]*\\\\)'\n        ),\n        lookbehind: true,\n        inside: {\n          'label-key': {\n            pattern: /\\b[^,]+\\b/,\n            alias: 'attr-name'\n          },\n          punctuation: /[(),]/\n        }\n      },\n      'context-labels': {\n        pattern: /\\{[^{}]*\\}/,\n        inside: {\n          'label-key': {\n            pattern: /\\b[a-z_]\\w*(?=\\s*(?:=|![=~]))/,\n            alias: 'attr-name'\n          },\n          'label-value': {\n            pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n            greedy: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\{|\\}|=~?|![=~]|,/\n        }\n      },\n      'context-range': [\n        {\n          pattern: /\\[[\\w\\s:]+\\]/,\n          // [1m]\n          inside: {\n            punctuation: /\\[|\\]|:/,\n            'range-duration': {\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n              alias: 'number'\n            }\n          }\n        },\n        {\n          pattern: /(\\boffset\\s+)\\w+/,\n          // offset 1m\n          lookbehind: true,\n          inside: {\n            'range-duration': {\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n              alias: 'number'\n            }\n          }\n        }\n      ],\n      keyword: new RegExp('\\\\b(?:' + keywords.join('|') + ')\\\\b', 'i'),\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      number:\n        /[-+]?(?:(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[-+]?\\d+)?\\b|\\b(?:0x[0-9a-f]+|nan|inf)\\b)/i,\n      operator: /[\\^*/%+-]|==|!=|<=|<|>=|>|\\b(?:and|or|unless)\\b/i,\n      punctuation: /[{};()`,.[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = properties\nproperties.displayName = 'properties'\nproperties.aliases = []\nfunction properties(Prism) {\n  Prism.languages.properties = {\n    comment: /^[ \\t]*[#!].*$/m,\n    'attr-value': {\n      pattern:\n        /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?: *[=:] *(?! )| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n      lookbehind: true\n    },\n    'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?= *[=:]| )/m,\n    punctuation: /[=:]/\n  }\n}\n","'use strict'\n\nmodule.exports = protobuf\nprotobuf.displayName = 'protobuf'\nprotobuf.aliases = []\nfunction protobuf(Prism) {\n  ;(function (Prism) {\n    var builtinTypes =\n      /\\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\\b/\n    Prism.languages.protobuf = Prism.languages.extend('clike', {\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:enum|extend|message|service)\\s+)[A-Za-z_]\\w*(?=\\s*\\{)/,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\b(?:rpc\\s+\\w+|returns)\\s*\\(\\s*(?:stream\\s+)?)\\.?[A-Za-z_]\\w*(?:\\.[A-Za-z_]\\w*)*(?=\\s*\\))/,\n          lookbehind: true\n        }\n      ],\n      keyword:\n        /\\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\\s+\\w)|service|stream|syntax|to)\\b(?!\\s*=\\s*\\d)/,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i\n    })\n    Prism.languages.insertBefore('protobuf', 'operator', {\n      map: {\n        pattern: /\\bmap<\\s*[\\w.]+\\s*,\\s*[\\w.]+\\s*>(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /[<>.,]/,\n          builtin: builtinTypes\n        }\n      },\n      builtin: builtinTypes,\n      'positional-class-name': {\n        pattern: /(?:\\b|\\B\\.)[a-z_]\\w*(?:\\.[a-z_]\\w*)*(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      annotation: {\n        pattern: /(\\[\\s*)[a-z_]\\w*(?=\\s*=)/i,\n        lookbehind: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = psl\npsl.displayName = 'psl'\npsl.aliases = []\nfunction psl(Prism) {\n  Prism.languages.psl = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        symbol: /\\\\[ntrbA-Z\"\\\\]/\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<([a-zA-Z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\1\\b/,\n      alias: 'string',\n      greedy: true\n    },\n    keyword:\n      /\\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\\b/,\n    constant:\n      /\\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\\b/,\n    boolean: /\\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\\b/,\n    variable: /\\b(?:PslDebug|errno|exit_status)\\b/,\n    builtin: {\n      pattern:\n        /\\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\\b/,\n      alias: 'builtin-function'\n    },\n    'foreach-variable': {\n      pattern:\n        /(\\bforeach\\s+(?:(?:\\w+\\b|\"(?:\\\\.|[^\\\\\"])*\")\\s+){0,2})[_a-zA-Z]\\w*(?=\\s*\\()/,\n      lookbehind: true,\n      greedy: true\n    },\n    function: /\\b[_a-z]\\w*\\b(?=\\s*\\()/i,\n    number: /\\b(?:0x[0-9a-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator: /--|\\+\\+|&&=?|\\|\\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\\.|[:?]/,\n    punctuation: /[(){}\\[\\];,]/\n  }\n}\n","'use strict'\n\nmodule.exports = pug\npug.displayName = 'pug'\npug.aliases = []\nfunction pug(Prism) {\n  ;(function (Prism) {\n    // TODO:\n    // - Add CSS highlighting inside <style> tags\n    // - Add support for multi-line code blocks\n    // - Add support for interpolation #{} and !{}\n    // - Add support for tag interpolation #[]\n    // - Add explicit support for plain text using |\n    // - Add support for markup embedded in plain text\n    Prism.languages.pug = {\n      // Multiline stuff should appear before the rest\n      // This handles both single-line and multi-line comments\n      comment: {\n        pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,\n        lookbehind: true\n      },\n      // All the tag-related part is in lookbehind\n      // so that it can be highlighted by the \"tag\" pattern\n      'multiline-script': {\n        pattern:\n          /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          },\n          text: /\\S[\\s\\S]*/\n        }\n      },\n      'multiline-plain-text': {\n        pattern:\n          /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true\n      },\n      markup: {\n        pattern: /(^[\\t ]*)<.+/m,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n        lookbehind: true\n      },\n      // This handle all conditional and loop keywords\n      'flow-control': {\n        pattern:\n          /(^[\\t ]*)(?:case|default|each|else|if|unless|when|while)\\b(?: .+)?/m,\n        lookbehind: true,\n        inside: {\n          each: {\n            pattern: /^each .+? in\\b/,\n            inside: {\n              keyword: /\\b(?:each|in)\\b/,\n              punctuation: /,/\n            }\n          },\n          branch: {\n            pattern: /^(?:case|default|else|if|unless|when|while)\\b/,\n            alias: 'keyword'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      keyword: {\n        pattern: /(^[\\t ]*)(?:append|block|extends|include|prepend)\\b.+/m,\n        lookbehind: true\n      },\n      mixin: [\n        // Declaration\n        {\n          pattern: /(^[\\t ]*)mixin .+/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^mixin/,\n            function: /\\w+(?=\\s*\\(|\\s*$)/,\n            punctuation: /[(),.]/\n          }\n        }, // Usage\n        {\n          pattern: /(^[\\t ]*)\\+.+/m,\n          lookbehind: true,\n          inside: {\n            name: {\n              pattern: /^\\+\\w+/,\n              alias: 'function'\n            },\n            rest: Prism.languages.javascript\n          }\n        }\n      ],\n      script: {\n        pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      'plain-text': {\n        pattern:\n          /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              pattern: /&[^(]+\\([^)]+\\)/,\n              inside: Prism.languages.javascript\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n                  lookbehind: true,\n                  inside: Prism.languages.javascript\n                },\n                'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[!=(),]+/\n              }\n            }\n          ],\n          punctuation: /:/,\n          'attr-id': /#[\\w\\-]+/,\n          'attr-class': /\\.[\\w\\-]+/\n        }\n      },\n      code: [\n        {\n          pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n          lookbehind: true,\n          inside: Prism.languages.javascript\n        }\n      ],\n      punctuation: /[.\\-!=|]+/\n    }\n    var filter_pattern =\n      /(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/\n        .source // Non exhaustive list of available filters and associated languages\n    var filters = [\n      {\n        filter: 'atpl',\n        language: 'twig'\n      },\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'ejs',\n      'handlebars',\n      'less',\n      'livescript',\n      'markdown',\n      {\n        filter: 'sass',\n        language: 'scss'\n      },\n      'stylus'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('<filter_name>', function () {\n              return filter.filter\n            }),\n            'm'\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            },\n            text: {\n              pattern: /\\S[\\s\\S]*/,\n              alias: [filter.language, 'language-' + filter.language],\n              inside: Prism.languages[filter.language]\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('pug', 'filter', all_filters)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = puppet\npuppet.displayName = 'puppet'\npuppet.aliases = []\nfunction puppet(Prism) {\n  ;(function (Prism) {\n    Prism.languages.puppet = {\n      heredoc: [\n        // Matches the content of a quoted heredoc string (subject to interpolation)\n        {\n          pattern:\n            /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/ // See interpolation below\n          }\n        }, // Matches the content of an unquoted heredoc string (no interpolation)\n        {\n          pattern:\n            /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n          }\n        }, // Matches the start tag of heredoc strings\n        {\n          pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n          alias: 'string',\n          inside: {\n            punctuation: {\n              pattern: /(\\().+?(?=\\))/,\n              lookbehind: true\n            }\n          }\n        }\n      ],\n      'multiline-comment': {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      },\n      regex: {\n        // Must be prefixed with the keyword \"node\" or a non-word char\n        pattern:\n          /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          // Extended regexes must have the x flag. They can contain single-line comments.\n          'extended-regex': {\n            pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n            inside: {\n              comment: /#.*/\n            }\n          }\n        }\n      },\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      string: {\n        // Allow for one nested level of double quotes inside interpolation\n        pattern:\n          /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          'double-quoted': {\n            pattern: /^\"[\\s\\S]*\"$/,\n            inside: {\n              // See interpolation below\n            }\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      'attr-name': /(?:\\b\\w+|\\*)(?=\\s*=>)/,\n      function: [\n        {\n          pattern: /(\\.)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n      ],\n      number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n      boolean: /\\b(?:false|true)\\b/,\n      // Includes words reserved for future use\n      keyword:\n        /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n      datatype: {\n        pattern:\n          /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n        alias: 'symbol'\n      },\n      operator:\n        /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n      punctuation: /[\\[\\]{}().,;]|:+/\n    }\n    var interpolation = [\n      {\n        // Allow for one nested level of braces inside interpolation\n        pattern:\n          /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n        lookbehind: true,\n        inside: {\n          'short-variable': {\n            // Negative look-ahead prevent wrong highlighting of functions\n            pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n            lookbehind: true,\n            alias: 'variable',\n            inside: {\n              punctuation: /::/\n            }\n          },\n          delimiter: {\n            pattern: /^\\$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.puppet\n        }\n      },\n      {\n        pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          punctuation: /::/\n        }\n      }\n    ]\n    Prism.languages.puppet['heredoc'][0].inside.interpolation = interpolation\n    Prism.languages.puppet['string'].inside[\n      'double-quoted'\n    ].inside.interpolation = interpolation\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pure\npure.displayName = 'pure'\npure.aliases = []\nfunction pure(Prism) {\n  ;(function (Prism) {\n    // https://agraef.github.io/pure-docs/pure.html#lexical-matters\n    Prism.languages.pure = {\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true\n        },\n        /#!.+/\n      ],\n      'inline-lang': {\n        pattern: /%<[\\s\\S]+?%>/,\n        greedy: true,\n        inside: {\n          lang: {\n            pattern: /(^%< *)-\\*-.+?-\\*-/,\n            lookbehind: true,\n            alias: 'comment'\n          },\n          delimiter: {\n            pattern: /^%<.*|%>$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        greedy: true\n      },\n      number: {\n        // The look-behind prevents wrong highlighting of the .. operator\n        pattern:\n          /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?L?)/i,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n      function:\n        /\\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n      special: {\n        pattern: /\\b__[a-z]+__\\b/i,\n        alias: 'builtin'\n      },\n      // Any combination of operator chars can be an operator\n      // eslint-disable-next-line no-misleading-character-class\n      operator:\n        /(?:[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]|\\b_+\\b)+|\\b(?:and|div|mod|not|or)\\b/,\n      // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n      punctuation: /[(){}\\[\\];,|]/\n    }\n    var inlineLanguages = [\n      'c',\n      {\n        lang: 'c++',\n        alias: 'cpp'\n      },\n      'fortran'\n    ]\n    var inlineLanguageRe = /%< *-\\*- *<lang>\\d* *-\\*-[\\s\\S]+?%>/.source\n    inlineLanguages.forEach(function (lang) {\n      var alias = lang\n      if (typeof lang !== 'string') {\n        alias = lang.alias\n        lang = lang.lang\n      }\n      if (Prism.languages[alias]) {\n        var o = {}\n        o['inline-lang-' + alias] = {\n          pattern: RegExp(\n            inlineLanguageRe.replace(\n              '<lang>',\n              lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')\n            ),\n            'i'\n          ),\n          inside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n        }\n        o['inline-lang-' + alias].inside.rest = Prism.util.clone(\n          Prism.languages[alias]\n        )\n        Prism.languages.insertBefore('pure', 'inline-lang', o)\n      }\n    }) // C is the default inline language\n    if (Prism.languages.c) {\n      Prism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(\n        Prism.languages.c\n      )\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = purebasic\npurebasic.displayName = 'purebasic'\npurebasic.aliases = []\nfunction purebasic(Prism) {\n  /*\nOriginal Code by Bas Groothedde\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\nslightly changed to pass all tests\n*/\n  // PureBasic support, steal stuff from ansi-c\n  Prism.languages.purebasic = Prism.languages.extend('clike', {\n    comment: /;.*/,\n    keyword:\n      /\\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\\b/i,\n    function: /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n    number: /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\n    operator:\n      /(?:@\\*?|\\?|\\*)\\w+|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n  })\n  Prism.languages.insertBefore('purebasic', 'keyword', {\n    tag: /#\\w+\\$?/,\n    asm: {\n      pattern: /(^[\\t ]*)!.*/m,\n      lookbehind: true,\n      alias: 'tag',\n      inside: {\n        comment: /;.*/,\n        string: {\n          pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        },\n        // Anonymous label references, i.e.: jmp @b\n        'label-reference-anonymous': {\n          pattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        // Named label reference, i.e.: jne label1\n        'label-reference-addressed': {\n          pattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        keyword: [\n          /\\b(?:extern|global)\\b[^;\\r\\n]*/i,\n          /\\b(?:CPU|DEFAULT|FLOAT)\\b.*/\n        ],\n        function: {\n          pattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\n          lookbehind: true\n        },\n        'function-inline': {\n          pattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\n          lookbehind: true,\n          alias: 'function'\n        },\n        label: {\n          pattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        register:\n          /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\\d+)\\b/i,\n        number:\n          /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n        operator: /[\\[\\]*+\\-/%<>=&|$!,.:]/\n      }\n    }\n  })\n  delete Prism.languages.purebasic['class-name']\n  delete Prism.languages.purebasic['boolean']\n  Prism.languages.pbfasm = Prism.languages['purebasic']\n}\n","'use strict'\nvar refractorHaskell = require('./haskell.js')\nmodule.exports = purescript\npurescript.displayName = 'purescript'\npurescript.aliases = ['purs']\nfunction purescript(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.purescript = Prism.languages.extend('haskell', {\n    keyword:\n      /\\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b|∀/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|hiding|import)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin functions only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\\b/,\n    operator: [\n      // Infix operators\n      Prism.languages.haskell.operator[0], // ASCII operators\n      Prism.languages.haskell.operator[2], // All UTF16 Unicode operator symbols\n      // This regex is equivalent to /(?=[\\x80-\\uFFFF])[\\p{gc=Math_Symbol}\\p{gc=Currency_Symbol}\\p{Modifier_Symbol}\\p{Other_Symbol}]/u\n      // See https://github.com/PrismJS/prism/issues/3006 for more details.\n      /[\\xa2-\\xa6\\xa8\\xa9\\xac\\xae-\\xb1\\xb4\\xb8\\xd7\\xf7\\u02c2-\\u02c5\\u02d2-\\u02df\\u02e5-\\u02eb\\u02ed\\u02ef-\\u02ff\\u0375\\u0384\\u0385\\u03f6\\u0482\\u058d-\\u058f\\u0606-\\u0608\\u060b\\u060e\\u060f\\u06de\\u06e9\\u06fd\\u06fe\\u07f6\\u07fe\\u07ff\\u09f2\\u09f3\\u09fa\\u09fb\\u0af1\\u0b70\\u0bf3-\\u0bfa\\u0c7f\\u0d4f\\u0d79\\u0e3f\\u0f01-\\u0f03\\u0f13\\u0f15-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcc\\u0fce\\u0fcf\\u0fd5-\\u0fd8\\u109e\\u109f\\u1390-\\u1399\\u166d\\u17db\\u1940\\u19de-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u1fbd\\u1fbf-\\u1fc1\\u1fcd-\\u1fcf\\u1fdd-\\u1fdf\\u1fed-\\u1fef\\u1ffd\\u1ffe\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u20a0-\\u20bf\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a\\u213b\\u2140-\\u2144\\u214a-\\u214d\\u214f\\u218a\\u218b\\u2190-\\u2307\\u230c-\\u2328\\u232b-\\u2426\\u2440-\\u244a\\u249c-\\u24e9\\u2500-\\u2767\\u2794-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2b73\\u2b76-\\u2b95\\u2b97-\\u2bff\\u2ce5-\\u2cea\\u2e50\\u2e51\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u2ffb\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303e\\u303f\\u309b\\u309c\\u3190\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3247\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua700-\\ua716\\ua720\\ua721\\ua789\\ua78a\\ua828-\\ua82b\\ua836-\\ua839\\uaa77-\\uaa79\\uab5b\\uab6a\\uab6b\\ufb29\\ufbb2-\\ufbc1\\ufdfc\\ufdfd\\ufe62\\ufe64-\\ufe66\\ufe69\\uff04\\uff0b\\uff1c-\\uff1e\\uff3e\\uff40\\uff5c\\uff5e\\uffe0-\\uffe6\\uffe8-\\uffee\\ufffc\\ufffd]/\n    ]\n  })\n  Prism.languages.purs = Prism.languages.purescript\n}\n","'use strict'\n\nmodule.exports = python\npython.displayName = 'python'\npython.aliases = ['py']\nfunction python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-interpolation': {\n      pattern:\n        /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n          pattern:\n            /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'format-spec': {\n              pattern: /(:)[^:(){}]+(?=\\}$)/,\n              lookbehind: true\n            },\n            'conversion-option': {\n              pattern: /![sra](?=[:}]$)/,\n              alias: 'punctuation'\n            },\n            rest: null\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'triple-quoted-string': {\n      pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    decorator: {\n      pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n      lookbehind: true,\n      alias: ['annotation', 'punctuation'],\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin:\n      /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:False|None|True)\\b/,\n    number:\n      /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n    operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.python['string-interpolation'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.python\n  Prism.languages.py = Prism.languages.python\n}\n","'use strict'\n\nmodule.exports = q\nq.displayName = 'q'\nq.aliases = []\nfunction q(Prism) {\n  Prism.languages.q = {\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    comment: [\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n      {\n        pattern: /([\\t )\\]}])\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }, // From http://code.kx.com/wiki/Reference/Slash:\n      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n      {\n        pattern:\n          /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n        lookbehind: true,\n        greedy: true\n      }, // From http://code.kx.com/wiki/Reference/Slash:\n      // A \\ on a line by itself with no preceding matching / will comment to end of file.\n      {\n        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n        greedy: true\n      },\n      {\n        pattern: /^#!.+/m,\n        greedy: true\n      }\n    ],\n    symbol: /`(?::\\S+|[\\w.]*)/,\n    datetime: {\n      pattern:\n        /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n      alias: 'number'\n    },\n    // The negative look-ahead prevents bad highlighting\n    // of verbs 0: and 1:\n    number:\n      /\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,\n    keyword:\n      /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n    adverb: {\n      pattern: /['\\/\\\\]:?|\\beach\\b/,\n      alias: 'function'\n    },\n    verb: {\n      pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,\n      alias: 'operator'\n    },\n    punctuation: /[(){}\\[\\];.]/\n  }\n}\n","'use strict'\n\nmodule.exports = qml\nqml.displayName = 'qml'\nqml.aliases = []\nfunction qml(Prism) {\n  ;(function (Prism) {\n    var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source\n    var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source\n    var jsExpr =\n      /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source\n        .replace(/<string>/g, function () {\n          return jsString\n        })\n        .replace(/<comment>/g, function () {\n          return jsComment\n        }) // the pattern will blow up, so only a few iterations\n    for (var i = 0; i < 2; i++) {\n      jsExpr = jsExpr.replace(/<expr>/g, function () {\n        return jsExpr\n      })\n    }\n    jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]')\n    Prism.languages.qml = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      'javascript-function': {\n        pattern: RegExp(\n          /((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      'class-name': {\n        pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n        lookbehind: true\n      },\n      property: [\n        {\n          pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^property/,\n            property: /\\w+(?:\\.\\w+)*/\n          }\n        }\n      ],\n      'javascript-expression': {\n        pattern: RegExp(\n          /(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:as|import|on)\\b/,\n      punctuation: /[{}[\\]:;,]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = qore\nqore.displayName = 'qore'\nqore.aliases = []\nfunction qore(Prism) {\n  Prism.languages.qore = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    // Overridden to allow unescaped multi-line strings\n    string: {\n      pattern: /(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\$?\\b(?!\\d)\\w+(?=\\()/,\n    number:\n      /\\b(?:0b[01]+|0x(?:[\\da-f]*\\.)?[\\da-fp\\-]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e\\d+)?[df]|(?:\\d+(?:\\.\\d+)?|\\.\\d+))\\b/i,\n    operator: {\n      pattern:\n        /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n      lookbehind: true\n    },\n    variable: /\\$(?!\\d)\\w+\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = qsharp\nqsharp.displayName = 'qsharp'\nqsharp.aliases = ['qs']\nfunction qsharp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    } // https://docs.microsoft.com/en-us/azure/quantum/user-guide/language/typesystem/\n    // https://github.com/microsoft/qsharp-language/tree/main/Specifications/Language/5_Grammar\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero',\n      // all other keywords\n      other:\n        'Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within'\n    } // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var keywords = RegExp(\n      keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.other)\n    ) // types\n    var identifier = /\\b[A-Za-z_]\\w*\\b/.source\n    var qualifiedName = replace(/<<0>>(?:\\s*\\.\\s*<<0>>)*/.source, [identifier])\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    } // strings\n    var regularString = /\"(?:\\\\.|[^\\\\\"])*\"/.source\n    Prism.languages.qsharp = Prism.languages.extend('clike', {\n      comment: /\\/\\/.*/,\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // open Microsoft.Quantum.Canon;\n          // open Microsoft.Quantum.Canon as CN;\n          pattern: re(/(\\b(?:as|open)\\s+)<<0>>(?=\\s*(?:;|as\\b))/.source, [\n            qualifiedName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // namespace Quantum.App1;\n          pattern: re(/(\\bnamespace\\s+)<<0>>(?=\\s*\\{)/.source, [qualifiedName]),\n          lookbehind: true,\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      number:\n        /(?:\\b0(?:x[\\da-f]+|b[01]+|o[0-7]+)|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d*)?)(?:e[-+]?\\d+)?)l?\\b/i,\n      operator:\n        /\\band=|\\bor=|\\band\\b|\\bnot\\b|\\bor\\b|<[-=]|[-=]>|>>>=?|<<<=?|\\^\\^\\^=?|\\|\\|\\|=?|&&&=?|w\\/=?|~~~|[*\\/+\\-^=!%]=?/,\n      punctuation: /::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('qsharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    }) // single line\n    var interpolationExpr = nested(\n      replace(/\\{(?:[^\"{}]|<<0>>|<<self>>)*\\}/.source, [regularString]),\n      2\n    )\n    Prism.languages.insertBefore('qsharp', 'string', {\n      'interpolation-string': {\n        pattern: re(/\\$\"(?:\\\\.|<<0>>|[^\\\\\"{])*\"/.source, [interpolationExpr]),\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: re(/((?:^|[^\\\\])(?:\\\\\\\\)*)<<0>>/.source, [\n              interpolationExpr\n            ]),\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\{|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                alias: 'language-qsharp',\n                inside: Prism.languages.qsharp\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n  })(Prism)\n  Prism.languages.qs = Prism.languages.qsharp\n}\n","'use strict'\n\nmodule.exports = r\nr.displayName = 'r'\nr.aliases = []\nfunction r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [\n      /\\b(?:Inf|NaN)\\b/,\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n    ],\n    keyword:\n      /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  }\n}\n","'use strict'\nvar refractorScheme = require('./scheme.js')\nmodule.exports = racket\nracket.displayName = 'racket'\nracket.aliases = ['rkt']\nfunction racket(Prism) {\n  Prism.register(refractorScheme)\n  Prism.languages.racket = Prism.languages.extend('scheme', {\n    'lambda-parameter': {\n      // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n      // this will just prevent false positives of the `function` pattern\n      pattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('racket', 'string', {\n    lang: {\n      pattern: /^#lang.+/m,\n      greedy: true,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.rkt = Prism.languages.racket\n}\n","'use strict'\n\nmodule.exports = reason\nreason.displayName = 'reason'\nreason.aliases = []\nfunction reason(Prism) {\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword:\n      /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator:\n      /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n  })\n  Prism.languages.insertBefore('reason', 'class-name', {\n    char: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      greedy: true\n    },\n    // Negative look-ahead prevents from matching things like String.capitalize\n    constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  }) // We can't match functions property, so let's not even try.\n  delete Prism.languages.reason.function\n}\n","'use strict'\n\nmodule.exports = regex\nregex.displayName = 'regex'\nregex.aliases = []\nfunction regex(Prism) {\n  ;(function (Prism) {\n    var specialEscape = {\n      pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n      alias: 'escape'\n    }\n    var escape =\n      /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/\n    var charSet = {\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var charSetWithoutDot = {\n      pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')'\n    var range = RegExp(rangeChar + '-' + rangeChar) // the name of a capturing group\n    var groupName = {\n      pattern: /(<|')[^<>']+(?=[>']$)/,\n      lookbehind: true,\n      alias: 'variable'\n    }\n    Prism.languages.regex = {\n      'char-class': {\n        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n        lookbehind: true,\n        inside: {\n          'char-class-negation': {\n            pattern: /(^\\[)\\^/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          'char-class-punctuation': {\n            pattern: /^\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          range: {\n            pattern: range,\n            inside: {\n              escape: escape,\n              'range-punctuation': {\n                pattern: /-/,\n                alias: 'operator'\n              }\n            }\n          },\n          'special-escape': specialEscape,\n          'char-set': charSetWithoutDot,\n          escape: escape\n        }\n      },\n      'special-escape': specialEscape,\n      'char-set': charSet,\n      backreference: [\n        {\n          // a backreference which is not an octal escape\n          pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n          alias: 'keyword'\n        },\n        {\n          pattern: /\\\\k<[^<>']+>/,\n          alias: 'keyword',\n          inside: {\n            'group-name': groupName\n          }\n        }\n      ],\n      anchor: {\n        pattern: /[$^]|\\\\[ABbGZz]/,\n        alias: 'function'\n      },\n      escape: escape,\n      group: [\n        {\n          // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n          // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n          // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n          pattern:\n            /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n          alias: 'punctuation',\n          inside: {\n            'group-name': groupName\n          }\n        },\n        {\n          pattern: /\\)/,\n          alias: 'punctuation'\n        }\n      ],\n      quantifier: {\n        pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n        alias: 'number'\n      },\n      alternation: {\n        pattern: /\\|/,\n        alias: 'keyword'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = rego\nrego.displayName = 'rego'\nrego.aliases = []\nfunction rego(Prism) {\n  // https://www.openpolicyagent.org/docs/latest/policy-reference/\n  Prism.languages.rego = {\n    comment: /#.*/,\n    property: {\n      pattern:\n        /(^|[^\\\\.])(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`|\\b[a-z_]\\w*\\b)(?=\\s*:(?!=))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|default|else|import|not|null|package|set(?=\\s*\\()|some|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*\\b(?:\\s*\\.\\s*\\b[a-z_]\\w*\\b)*(?=\\s*\\()/i,\n      inside: {\n        namespace: /\\b\\w+\\b(?=\\s*\\.)/,\n        punctuation: /\\./\n      }\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    operator: /[-+*/%|&]|[<>:=]=?|!=|\\b_\\b/,\n    punctuation: /[,;.\\[\\]{}()]/\n  }\n}\n","'use strict'\n\nmodule.exports = renpy\nrenpy.displayName = 'renpy'\nrenpy.aliases = ['rpy']\nfunction renpy(Prism) {\n  Prism.languages.renpy = {\n    comment: {\n      pattern: /(^|[^\\\\])#.+/,\n      lookbehind: true\n    },\n    string: {\n      pattern:\n        /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\])*\\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,\n      greedy: true\n    },\n    function: /\\b[a-z_]\\w*(?=\\()/i,\n    property:\n      /\\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\\b/,\n    tag: /\\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\\b|\\$/,\n    keyword:\n      /\\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\\b/,\n    boolean: /\\b(?:[Ff]alse|[Tt]rue)\\b/,\n    number:\n      /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n    operator:\n      /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:and|at|not|or|with)\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.rpy = Prism.languages.renpy\n}\n","'use strict'\n\nmodule.exports = rest\nrest.displayName = 'rest'\nrest.aliases = []\nfunction rest(Prism) {\n  Prism.languages.rest = {\n    table: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\n        }\n      },\n      {\n        pattern:\n          /(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /[=-]+/\n        }\n      }\n    ],\n    // Directive-like patterns\n    'substitution-def': {\n      pattern: /(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( )(?! )[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [\n      {\n        pattern: /(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]$/\n        }\n      },\n      {\n        pattern: /(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^_|:$/\n        }\n      }\n    ],\n    directive: {\n      pattern: /(^[\\t ]*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern:\n        /(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [\n      // Overlined and underlined\n      {\n        pattern:\n          /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation:\n            /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }, // Underlined only\n      {\n        pattern:\n          /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }\n    ],\n    hr: {\n      pattern:\n        /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^[\\t ]*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern:\n        /(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern:\n        /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern:\n        /(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [\n      {\n        pattern:\n          /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n        lookbehind: true,\n        inside: {\n          bold: {\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /(^\\*).+(?=\\*$)/,\n            lookbehind: true\n          },\n          'inline-literal': {\n            pattern: /(^``).+(?=``$)/,\n            lookbehind: true,\n            alias: 'symbol'\n          },\n          role: {\n            pattern: /^:[^:]+:|:[^:]+:$/,\n            alias: 'function',\n            inside: {\n              punctuation: /^:|:$/\n            }\n          },\n          'interpreted-text': {\n            pattern: /(^`).+(?=`$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          substitution: {\n            pattern: /(^\\|).+(?=\\|$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\*\\*?|``?|\\|/\n        }\n      }\n    ],\n    link: [\n      {\n        pattern: /\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }\n      },\n      {\n        pattern:\n          /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n        alias: 'string',\n        inside: {\n          punctuation: /^_?`|`$|`?_?_$/\n        }\n      }\n    ],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = rip\nrip.displayName = 'rip'\nrip.aliases = []\nfunction rip(Prism) {\n  Prism.languages.rip = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    regex: {\n      pattern:\n        /(^|[^/])\\/(?!\\/)(?:\\[[^\\n\\r\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/(?=\\s*(?:$|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:=>|->)|\\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\\b/,\n    builtin: /@|\\bSystem\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n    time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n    datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n    symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n    number: /[+-]?\\b(?:\\d+\\.\\d+|\\d+)\\b/,\n    punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n    reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n  }\n}\n","'use strict'\n\nmodule.exports = roboconf\nroboconf.displayName = 'roboconf'\nroboconf.aliases = []\nfunction roboconf(Prism) {\n  Prism.languages.roboconf = {\n    comment: /#.*/,\n    keyword: {\n      pattern:\n        /(^|\\s)(?:(?:external|import)\\b|(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{))/,\n      lookbehind: true\n    },\n    component: {\n      pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n      alias: 'variable'\n    },\n    property: /[\\w.-]+(?=[ \\t]*:)/,\n    value: {\n      pattern: /(=[ \\t]*(?![ \\t]))[^,;]+/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    optional: {\n      pattern: /\\(optional\\)/,\n      alias: 'builtin'\n    },\n    wildcard: {\n      pattern: /(\\.)\\*/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    punctuation: /[{},.;:=]/\n  }\n}\n","'use strict'\n\nmodule.exports = robotframework\nrobotframework.displayName = 'robotframework'\nrobotframework.aliases = []\nfunction robotframework(Prism) {\n  ;(function (Prism) {\n    var comment = {\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    var variable = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[$@&%]\\{|\\}$/\n      }\n    }\n    function createSection(name, inside) {\n      var extendecInside = {}\n      extendecInside['section-header'] = {\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\n        alias: 'keyword'\n      } // copy inside tokens\n      for (var token in inside) {\n        extendecInside[token] = inside[token]\n      }\n      extendecInside['tag'] = {\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\[|\\]/\n        }\n      }\n      extendecInside['variable'] = variable\n      extendecInside['comment'] = comment\n      return {\n        pattern: RegExp(\n          /^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(\n            /<name>/g,\n            function () {\n              return name\n            }\n          ),\n          'im'\n        ),\n        alias: 'section',\n        inside: extendecInside\n      }\n    }\n    var docTag = {\n      pattern:\n        /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n      lookbehind: true,\n      alias: 'string'\n    }\n    var testNameLike = {\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        variable: variable\n      }\n    }\n    var testPropertyLike = {\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      inside: {\n        variable: variable\n      }\n    }\n    Prism.languages['robotframework'] = {\n      settings: createSection('Settings', {\n        documentation: {\n          pattern:\n            /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        property: {\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n          lookbehind: true\n        }\n      }),\n      variables: createSection('Variables'),\n      'test-cases': createSection('Test Cases', {\n        'test-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      keywords: createSection('Keywords', {\n        'keyword-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      tasks: createSection('Tasks', {\n        'task-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      comment: comment\n    }\n    Prism.languages.robot = Prism.languages['robotframework']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ruby\nruby.displayName = 'ruby'\nruby.aliases = ['rb']\nfunction ruby(Prism) {\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *     constant, builtin, variable, symbol, regex\n   */\n  ;(function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n        greedy: true\n      },\n      'class-name': {\n        pattern:\n          /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword:\n        /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n      operator:\n        /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n      punctuation: /[(){}[\\].,;]/\n    })\n    Prism.languages.insertBefore('ruby', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    var interpolation = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        content: {\n          pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n    delete Prism.languages.ruby.function\n    var percentExpression =\n      '(?:' +\n      [\n        /([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n        /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,\n        /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,\n        /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,\n        /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source\n      ].join('|') +\n      ')'\n    var symbolName =\n      /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/\n        .source\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      'regex-literal': [\n        {\n          pattern: RegExp(\n            /%r/.source + percentExpression + /[egimnosux]{0,6}/.source\n          ),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        }\n      ],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: [\n        {\n          pattern: RegExp(/(^|[^:]):/.source + symbolName),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'method-definition': {\n        pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n        lookbehind: true,\n        inside: {\n          function: /\\b\\w+$/,\n          keyword: /^self\\b/,\n          'class-name': /^\\w+/,\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('ruby', 'string', {\n      'string-literal': [\n        {\n          pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?/\n              }\n            },\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?'|'$/\n              }\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      'command-literal': [\n        {\n          pattern: RegExp(/%x/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        },\n        {\n          pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        }\n      ]\n    })\n    delete Prism.languages.ruby.string\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin:\n        /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n    })\n    Prism.languages.rb = Prism.languages.ruby\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = rust\nrust.displayName = 'rust'\nrust.aliases = []\nfunction rust(Prism) {\n  ;(function (Prism) {\n    var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source\n    for (var i = 0; i < 2; i++) {\n      // support 4 levels of nested comments\n      multilineComment = multilineComment.replace(/<self>/g, function () {\n        return multilineComment\n      })\n    }\n    multilineComment = multilineComment.replace(/<self>/g, function () {\n      return /[^\\s\\S]/.source\n    })\n    Prism.languages.rust = {\n      comment: [\n        {\n          pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      string: {\n        pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n        greedy: true\n      },\n      attribute: {\n        pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n        greedy: true,\n        alias: 'attr-name',\n        inside: {\n          string: null // see below\n        }\n      },\n      // Closure params should not be confused with bitwise OR |\n      'closure-params': {\n        pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'closure-punctuation': {\n            pattern: /^\\||\\|$/,\n            alias: 'punctuation'\n          },\n          rest: null // see below\n        }\n      },\n      'lifetime-annotation': {\n        pattern: /'\\w+/,\n        alias: 'symbol'\n      },\n      'fragment-specifier': {\n        pattern: /(\\$\\w+:)[a-z]+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      variable: /\\$\\w+/,\n      'function-definition': {\n        pattern: /(\\bfn\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      'type-definition': {\n        pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'module-declaration': [\n        {\n          pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n          lookbehind: true,\n          alias: 'namespace'\n        },\n        {\n          pattern:\n            /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /::/\n          }\n        }\n      ],\n      keyword: [\n        // https://github.com/rust-lang/reference/blob/master/src/keywords.md\n        /\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/, // primitives and str\n        // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n        /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/\n      ],\n      // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n      // and Rust's naming conventions recommend snake_case anyway.\n      // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n      macro: {\n        pattern: /\\b\\w+!/,\n        alias: 'property'\n      },\n      constant: /\\b[A-Z_][A-Z_\\d]+\\b/,\n      'class-name': /\\b[A-Z]\\w*\\b/,\n      namespace: {\n        pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      // Hex, oct, bin, dec numbers with visual separators and type suffix\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n      operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n    }\n    Prism.languages.rust['closure-params'].inside.rest = Prism.languages.rust\n    Prism.languages.rust['attribute'].inside['string'] =\n      Prism.languages.rust['string']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sas\nsas.displayName = 'sas'\nsas.aliases = []\nfunction sas(Prism) {\n  ;(function (Prism) {\n    var stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source\n    var number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i\n    var numericConstant = {\n      pattern: RegExp(stringPattern + '[bx]'),\n      alias: 'number'\n    }\n    var macroVariable = {\n      pattern: /&[a-z_]\\w*/i\n    }\n    var macroKeyword = {\n      pattern:\n        /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var step = {\n      pattern: /(^|\\s)(?:proc\\s+\\w+|data(?!=)|quit|run)\\b/i,\n      alias: 'keyword',\n      lookbehind: true\n    }\n    var comment = [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^[ \\t]*|;\\s*)\\*[^;]*;/m,\n        lookbehind: true\n      }\n    ]\n    var string = {\n      pattern: RegExp(stringPattern),\n      greedy: true\n    }\n    var punctuation = /[$%@.(){}\\[\\];,\\\\]/\n    var func = {\n      pattern: /%?\\b\\w+(?=\\()/,\n      alias: 'keyword'\n    }\n    var args = {\n      function: func,\n      'arg-value': {\n        pattern: /(=\\s*)[A-Z\\.]+/i,\n        lookbehind: true\n      },\n      operator: /=/,\n      'macro-variable': macroVariable,\n      arg: {\n        pattern: /[A-Z]+/i,\n        alias: 'keyword'\n      },\n      number: number,\n      'numeric-constant': numericConstant,\n      punctuation: punctuation,\n      string: string\n    }\n    var format = {\n      pattern: /\\b(?:format|put)\\b=?[\\w'$.]+/i,\n      inside: {\n        keyword: /^(?:format|put)(?==)/i,\n        equals: /=/,\n        format: {\n          pattern: /(?:\\w|\\$\\d)+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    }\n    var altformat = {\n      pattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\n      inside: {\n        keyword: /^(?:format|put)/i,\n        format: {\n          pattern: /[\\w$]+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    }\n    var globalStatements = {\n      pattern:\n        /((?:^|\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var submitStatement = {\n      pattern: /(^|\\s)(?:submit(?:\\s+(?:load|norun|parseonly))?|endsubmit)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var actionSets =\n      /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/\n        .source\n    var casActions = {\n      pattern: RegExp(\n        /(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(\n          /<act>/g,\n          function () {\n            return actionSets\n          }\n        ),\n        'i'\n      ),\n      lookbehind: true,\n      inside: {\n        keyword: RegExp(\n          /(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function () {\n            return actionSets\n          }),\n          'i'\n        ),\n        action: {\n          pattern: /(?:action)/i,\n          alias: 'keyword'\n        },\n        comment: comment,\n        function: func,\n        'arg-value': args['arg-value'],\n        operator: args.operator,\n        argument: args.arg,\n        number: number,\n        'numeric-constant': numericConstant,\n        punctuation: punctuation,\n        string: string\n      }\n    }\n    var keywords = {\n      pattern:\n        /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\\b/i,\n      lookbehind: true\n    }\n    Prism.languages.sas = {\n      datalines: {\n        pattern: /^([ \\t]*)(?:cards|(?:data)?lines);[\\s\\S]+?^[ \\t]*;/im,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          keyword: {\n            pattern: /^(?:cards|(?:data)?lines)/i\n          },\n          punctuation: /;/\n        }\n      },\n      'proc-sql': {\n        pattern:\n          /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          sql: {\n            pattern: RegExp(\n              /^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            alias: 'language-sql',\n            inside: Prism.languages.sql\n          },\n          'global-statements': globalStatements,\n          'sql-statements': {\n            pattern:\n              /(^|\\s)(?:disconnect\\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\\b/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-groovy': {\n        pattern:\n          /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          groovy: {\n            pattern: RegExp(\n              /(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            lookbehind: true,\n            alias: 'language-groovy',\n            inside: Prism.languages.groovy\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-lua': {\n        pattern:\n          /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          lua: {\n            pattern: RegExp(\n              /(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            lookbehind: true,\n            alias: 'language-lua',\n            inside: Prism.languages.lua\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-cas': {\n        pattern:\n          /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          'statement-var': {\n            pattern: /((?:^|\\s)=?)saveresult\\s[^;]+/im,\n            lookbehind: true,\n            inside: {\n              statement: {\n                pattern: /^saveresult\\s+\\S+/i,\n                inside: {\n                  keyword: /^(?:saveresult)/i\n                }\n              },\n              rest: args\n            }\n          },\n          'cas-actions': casActions,\n          statement: {\n            pattern:\n              /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\n            lookbehind: true,\n            inside: args\n          },\n          step: step,\n          keyword: keywords,\n          function: func,\n          format: format,\n          altformat: altformat,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-args': {\n        pattern: RegExp(\n          /(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(\n            /<str>/g,\n            function () {\n              return stringPattern\n            }\n          ),\n          'im'\n        ),\n        lookbehind: true,\n        inside: args\n      },\n      /*Special keywords within macros*/\n      'macro-keyword': macroKeyword,\n      'macro-variable': macroVariable,\n      'macro-string-functions': {\n        pattern:\n          /((?:^|\\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,\n            alias: 'keyword'\n          },\n          'macro-keyword': macroKeyword,\n          'macro-variable': macroVariable,\n          'escaped-char': {\n            pattern: /%['\"()<>=¬^~;,#]/\n          },\n          punctuation: punctuation\n        }\n      },\n      'macro-declaration': {\n        pattern: /^%macro[^;]+(?=;)/im,\n        inside: {\n          keyword: /%macro/i\n        }\n      },\n      'macro-end': {\n        pattern: /^%mend[^;]+(?=;)/im,\n        inside: {\n          keyword: /%mend/i\n        }\n      },\n      /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */\n      macro: {\n        pattern: /%_\\w+(?=\\()/,\n        alias: 'keyword'\n      },\n      input: {\n        pattern: /\\binput\\s[-\\w\\s/*.$&]+;/i,\n        inside: {\n          input: {\n            alias: 'keyword',\n            pattern: /^input/i\n          },\n          comment: comment,\n          number: number,\n          'numeric-constant': numericConstant\n        }\n      },\n      'options-args': {\n        pattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\n        lookbehind: true,\n        inside: args\n      },\n      'cas-actions': casActions,\n      comment: comment,\n      function: func,\n      format: format,\n      altformat: altformat,\n      'numeric-constant': numericConstant,\n      datetime: {\n        // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n        pattern: RegExp(stringPattern + '(?:dt?|t)'),\n        alias: 'number'\n      },\n      string: string,\n      step: step,\n      keyword: keywords,\n      // In SAS Studio syntax highlighting, these operators are styled like keywords\n      'operator-keyword': {\n        pattern: /\\b(?:eq|ge|gt|in|le|lt|ne|not)\\b/i,\n        alias: 'operator'\n      },\n      // Decimal (1.2e23), hexadecimal (0c1x)\n      number: number,\n      operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/,\n      punctuation: punctuation\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sass\nsass.displayName = 'sass'\nsass.aliases = []\nfunction sass(Prism) {\n  ;(function (Prism) {\n    Prism.languages.sass = Prism.languages.extend('css', {\n      // Sass comments don't need to be closed, only indented\n      comment: {\n        pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('sass', 'atrule', {\n      // We want to consume the whole line\n      'atrule-line': {\n        // Includes support for = and + shortcuts\n        pattern: /^(?:[ \\t]*)[@+=].+/m,\n        greedy: true,\n        inside: {\n          atrule: /(?:@[\\w-]+|[+=])/\n        }\n      }\n    })\n    delete Prism.languages.sass.atrule\n    var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    var operator = [\n      /[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/,\n      {\n        pattern: /(\\s)-(?=\\s)/,\n        lookbehind: true\n      }\n    ]\n    Prism.languages.insertBefore('sass', 'property', {\n      // We want to consume the whole line\n      'variable-line': {\n        pattern: /^[ \\t]*\\$.+/m,\n        greedy: true,\n        inside: {\n          punctuation: /:/,\n          variable: variable,\n          operator: operator\n        }\n      },\n      // We want to consume the whole line\n      'property-line': {\n        pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n        greedy: true,\n        inside: {\n          property: [\n            /[^:\\s]+(?=\\s*:)/,\n            {\n              pattern: /(:)[^:\\s]+/,\n              lookbehind: true\n            }\n          ],\n          punctuation: /:/,\n          variable: variable,\n          operator: operator,\n          important: Prism.languages.sass.important\n        }\n      }\n    })\n    delete Prism.languages.sass.property\n    delete Prism.languages.sass.important // Now that whole lines for other patterns are consumed,\n    // what's left should be selectors\n    Prism.languages.insertBefore('sass', 'punctuation', {\n      selector: {\n        pattern:\n          /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJava = require('./java.js')\nmodule.exports = scala\nscala.displayName = 'scala'\nscala.aliases = []\nfunction scala(Prism) {\n  Prism.register(refractorJava)\n  Prism.languages.scala = Prism.languages.extend('java', {\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n    number:\n      /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    builtin:\n      /\\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\\b/,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  })\n  Prism.languages.insertBefore('scala', 'triple-quoted-string', {\n    'string-interpolation': {\n      pattern:\n        /\\b[a-z]\\w*(?:\"\"\"(?:[^$]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*?\"\"\"|\"(?:[^$\"\\r\\n]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*\")/i,\n      greedy: true,\n      inside: {\n        id: {\n          pattern: /^\\w+/,\n          greedy: true,\n          alias: 'function'\n        },\n        escape: {\n          pattern: /\\\\\\$\"|\\$[$\"]/,\n          greedy: true,\n          alias: 'symbol'\n        },\n        interpolation: {\n          pattern: /\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n          greedy: true,\n          inside: {\n            punctuation: /^\\$\\{?|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.scala\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  delete Prism.languages.scala['class-name']\n  delete Prism.languages.scala['function']\n}\n","'use strict'\n\nmodule.exports = scheme\nscheme.displayName = 'scheme'\nscheme.aliases = []\nfunction scheme(Prism) {\n  ;(function (Prism) {\n    Prism.languages.scheme = {\n      // this supports \"normal\" single-line comments:\n      //   ; comment\n      // and (potentially nested) multiline comments:\n      //   #| comment #| nested |# still comment |#\n      // (only 1 level of nesting is supported)\n      comment:\n        /;.*|#;\\s*(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\[(?:[^\\[\\]]|\\[[^\\[\\]]*\\])*\\])|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#)|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#))*\\|#)*\\|#/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      symbol: {\n        pattern: /'[^()\\[\\]#'\\s]+/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /#\\\\(?:[ux][a-fA-F\\d]+\\b|[-a-zA-Z]+\\b|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\\S)/,\n        greedy: true\n      },\n      'lambda-parameter': [\n        // https://www.cs.cmu.edu/Groups/AI/html/r4rs/r4rs_6.html#SEC30\n        {\n          pattern:\n            /((?:^|[^'`#])[(\\[]lambda\\s+)(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)/,\n          lookbehind: true\n        },\n        {\n          pattern: /((?:^|[^'`#])[(\\[]lambda\\s+[(\\[])[^()\\[\\]']+/,\n          lookbehind: true\n        }\n      ],\n      keyword: {\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\\*)?|let\\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      builtin: {\n        // all functions of the base library of R7RS plus some of built-ins of R5Rs\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\\?|boolean=?\\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\\?|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)|close-(?:input-port|output-port|port)|complex\\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\\??|eq\\?|equal\\?|eqv\\?|error|error-object(?:-irritants|-message|\\?)|eval|even\\?|exact(?:-integer-sqrt|-integer\\?|\\?)?|expt|features|file-error\\?|floor(?:-quotient|-remainder|\\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\\??|input-port(?:-open\\?|\\?)|integer(?:->char|\\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\\?|newline|not|null\\?|number(?:->string|\\?)|numerator|odd\\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\\?|\\?)|pair\\?|peek-char|peek-u8|port\\?|positive\\?|procedure\\?|quotient|raise|raise-continuable|rational\\?|rationalize|read-(?:bytevector|bytevector!|char|error\\?|line|string|u8)|real\\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)?|substring|symbol(?:->string|\\?|=\\?)|syntax-error|textual-port\\?|truncate(?:-quotient|-remainder|\\/)?|u8-ready\\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\\?)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /((?:^|[^'`#])[(\\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      number: {\n        // The number pattern from [the R7RS spec](https://small.r7rs.org/attachment/r7rs.pdf).\n        //\n        // <number>      := <num 2>|<num 8>|<num 10>|<num 16>\n        // <num R>       := <prefix R><complex R>\n        // <complex R>   := <real R>(?:@<real R>|<imaginary R>)?|<imaginary R>\n        // <imaginary R> := [+-](?:<ureal R>|(?:inf|nan)\\.0)?i\n        // <real R>      := [+-]?<ureal R>|[+-](?:inf|nan)\\.0\n        // <ureal R>     := <uint R>(?:\\/<uint R>)?\n        //                | <decimal R>\n        //\n        // <decimal 10>  := (?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?\n        // <uint R>      := <digit R>+\n        // <prefix R>    := <radix R>(?:#[ei])?|(?:#[ei])?<radix R>\n        // <radix 2>     := #b\n        // <radix 8>     := #o\n        // <radix 10>    := (?:#d)?\n        // <radix 16>    := #x\n        // <digit 2>     := [01]\n        // <digit 8>     := [0-7]\n        // <digit 10>    := \\d\n        // <digit 16>    := [0-9a-f]\n        //\n        // The problem with this grammar is that the resulting regex is way to complex, so we simplify by grouping all\n        // non-decimal bases together. This results in a decimal (dec) and combined binary, octal, and hexadecimal (box)\n        // pattern:\n        pattern: RegExp(\n          SortedBNF({\n            '<ureal dec>':\n              /\\d+(?:\\/\\d+)|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[esfdl][+-]?\\d+)?/.source,\n            '<real dec>': /[+-]?<ureal dec>|[+-](?:inf|nan)\\.0/.source,\n            '<imaginary dec>': /[+-](?:<ureal dec>|(?:inf|nan)\\.0)?i/.source,\n            '<complex dec>':\n              /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/\n                .source,\n            '<num dec>': /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,\n            '<ureal box>': /[0-9a-f]+(?:\\/[0-9a-f]+)?/.source,\n            '<real box>': /[+-]?<ureal box>|[+-](?:inf|nan)\\.0/.source,\n            '<imaginary box>': /[+-](?:<ureal box>|(?:inf|nan)\\.0)?i/.source,\n            '<complex box>':\n              /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/\n                .source,\n            '<num box>': /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/\n              .source,\n            '<number>': /(^|[()\\[\\]\\s])(?:<num dec>|<num box>)(?=[()\\[\\]\\s]|$)/\n              .source\n          }),\n          'i'\n        ),\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[()\\[\\]\\s])#(?:[ft]|false|true)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      function: {\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      identifier: {\n        pattern: /(^|[()\\[\\]\\s])\\|(?:[^\\\\|]|\\\\.)*\\|(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      punctuation: /[()\\[\\]']/\n    }\n    /**\n     * Given a topologically sorted BNF grammar, this will return the RegExp source of last rule of the grammar.\n     *\n     * @param {Record<string, string>} grammar\n     * @returns {string}\n     */\n    function SortedBNF(grammar) {\n      for (var key in grammar) {\n        grammar[key] = grammar[key].replace(/<[\\w\\s]+>/g, function (key) {\n          return '(?:' + grammar[key].trim() + ')'\n        })\n      } // return the last item\n      return grammar[key]\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = scss\nscss.displayName = 'scss'\nscss.aliases = []\nfunction scss(Prism) {\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/ // See rest below\n      }\n    },\n    // url, compassified\n    url: /(?:[-a-z]+-)?url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern:\n        /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    },\n    property: {\n      pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  })\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [\n      /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,\n      {\n        pattern: /( )(?:from|through)(?= )/,\n        lookbehind: true\n      }\n    ]\n  })\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  })\n  Prism.languages.insertBefore('scss', 'function', {\n    'module-modifier': {\n      pattern: /\\b(?:as|hide|show|with)\\b/i,\n      alias: 'keyword'\n    },\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss\n}\n","'use strict'\nvar refractorBash = require('./bash.js')\nmodule.exports = shellSession\nshellSession.displayName = 'shellSession'\nshellSession.aliases = []\nfunction shellSession(Prism) {\n  Prism.register(refractorBash)\n  ;(function (Prism) {\n    // CAREFUL!\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n    var strings = [\n      // normal string\n      /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,\n      /'[^']*'/.source,\n      /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source, // here doc\n      // 2 capturing groups\n      /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source\n    ].join('|')\n    Prism.languages['shell-session'] = {\n      command: {\n        pattern: RegExp(\n          // user info\n          /^/.source +\n            '(?:' + // <user> \":\" ( <path> )?\n            (/[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/\n              .source +\n              '|' + // <path>\n              // Since the path pattern is quite general, we will require it to start with a special character to\n              // prevent false positives.\n              /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) +\n            ')?' + // shell symbol\n            /[$#%](?=\\s)/.source + // bash command\n            /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(\n              /<<str>>/g,\n              function () {\n                return strings\n              }\n            ),\n          'm'\n        ),\n        greedy: true,\n        inside: {\n          info: {\n            // foo@bar:~/files$ exit\n            // foo@bar$ exit\n            // ~/files$ exit\n            pattern: /^[^#$%]+/,\n            alias: 'punctuation',\n            inside: {\n              user: /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\n              punctuation: /:/,\n              path: /[\\s\\S]+/\n            }\n          },\n          bash: {\n            pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\n            lookbehind: true,\n            alias: 'language-bash',\n            inside: Prism.languages.bash\n          },\n          'shell-symbol': {\n            pattern: /^[$#%]/,\n            alias: 'important'\n          }\n        }\n      },\n      output: /.(?:.*(?:[\\r\\n]|.$))*/\n    }\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] =\n      Prism.languages['shell-session']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = smali\nsmali.displayName = 'smali'\nsmali.aliases = []\nfunction smali(Prism) {\n  // Test files for the parser itself:\n  // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n  Prism.languages.smali = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n      lookbehind: true,\n      inside: {\n        'class-name': {\n          pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n          lookbehind: true\n        },\n        namespace: {\n          pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\//\n          }\n        },\n        builtin: /^L/\n      }\n    },\n    builtin: [\n      {\n        // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n        pattern: /([();\\[])[BCDFIJSVZ]+/,\n        lookbehind: true\n      },\n      {\n        // e.g. .field mWifiOnUid:I\n        pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /(\\.end\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n      lookbehind: true\n    },\n    field: {\n      pattern: /[\\w$]+(?=:)/,\n      alias: 'variable'\n    },\n    register: {\n      pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    boolean: {\n      pattern: /(^|[^\\w.-])(?:false|true)(?![\\w.-])/,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n      lookbehind: true\n    },\n    label: {\n      pattern: /(:)\\w+/,\n      lookbehind: true,\n      alias: 'property'\n    },\n    operator: /->|\\.\\.|[\\[=]/,\n    punctuation: /[{}(),;:]/\n  }\n}\n","'use strict'\n\nmodule.exports = smalltalk\nsmalltalk.displayName = 'smalltalk'\nsmalltalk.aliases = []\nfunction smalltalk(Prism) {\n  Prism.languages.smalltalk = {\n    comment: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$./,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'])*'/,\n      greedy: true\n    },\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n    'block-arguments': {\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\n      lookbehind: true,\n      inside: {\n        variable: /:[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    'temporary-variables': {\n      pattern: /\\|[^|]+\\|/,\n      inside: {\n        variable: /[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    keyword: /\\b(?:new|nil|self|super)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: [\n      /\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\n      /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\n    ],\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n    punctuation: /[.;:?\\[\\](){}]/\n  }\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = smarty\nsmarty.displayName = 'smarty'\nsmarty.aliases = []\nfunction smarty(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.smarty = {\n      comment: {\n        pattern: /^\\{\\*[\\s\\S]*?\\*\\}/,\n        greedy: true\n      },\n      'embedded-php': {\n        pattern: /^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,\n        greedy: true,\n        inside: {\n          smarty: {\n            pattern: /^\\{php\\}|\\{\\/php\\}$/,\n            inside: null // see below\n          },\n          php: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-php',\n            inside: Prism.languages.php\n          }\n        }\n      },\n      string: [\n        {\n          pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: /\\{[^{}]*\\}|`[^`]*`/,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^[{`]|[`}]$/,\n                  alias: 'punctuation'\n                },\n                expression: {\n                  pattern: /[\\s\\S]+/,\n                  inside: null // see below\n                }\n              }\n            },\n            variable: /\\$\\w+/\n          }\n        },\n        {\n          pattern: /'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n          greedy: true\n        }\n      ],\n      keyword: {\n        pattern: /(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,\n        lookbehind: true,\n        greedy: true\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        greedy: true,\n        alias: 'punctuation'\n      },\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      variable: [\n        /\\$(?!\\d)\\w+/,\n        /#(?!\\d)\\w+#/,\n        {\n          pattern: /(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n          lookbehind: true\n        }\n      ],\n      function: {\n        pattern: /(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,\n        lookbehind: true\n      },\n      'attr-name': /\\b[a-z_]\\w*(?=\\s*=)/i,\n      boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n      punctuation: /[\\[\\](){}.,:`]|->/,\n      operator: [\n        /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n        /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n        /\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/\n      ]\n    }\n    Prism.languages.smarty['embedded-php'].inside.smarty.inside =\n      Prism.languages.smarty\n    Prism.languages.smarty.string[0].inside.interpolation.inside.expression.inside =\n      Prism.languages.smarty\n    var string = /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/\n    var smartyPattern = RegExp(\n      // comments\n      /\\{\\*[\\s\\S]*?\\*\\}/.source +\n        '|' + // php tags\n        /\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source +\n        '|' + // smarty blocks\n        /\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source.replace(\n          /<str>/g,\n          function () {\n            return string.source\n          }\n        ),\n      'g'\n    ) // Tokenize all inline Smarty expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var smartyLiteralStart = '{literal}'\n      var smartyLiteralEnd = '{/literal}'\n      var smartyLiteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'smarty',\n        smartyPattern,\n        function (match) {\n          // Smarty tags inside {literal} block are ignored\n          if (match === smartyLiteralEnd) {\n            smartyLiteralMode = false\n          }\n          if (!smartyLiteralMode) {\n            if (match === smartyLiteralStart) {\n              smartyLiteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sml\nsml.displayName = 'sml'\nsml.aliases = ['smlnj']\nfunction sml(Prism) {\n  // https://smlfamily.github.io/sml97-defn.pdf\n  // https://people.mpi-sws.org/~rossberg/sml.html\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i\n    Prism.languages.sml = {\n      // allow one level of nesting\n      comment:\n        /\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,\n      string: {\n        pattern: /#?\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': [\n        {\n          // This is only an approximation since the real grammar is context-free\n          //\n          // Why the main loop so complex?\n          // The main loop is approximately the same as /(?:\\s*(?:[*,]|->)\\s*<TERMINAL>)*/ which is, obviously, a lot\n          // simpler. The difference is that if a comma is the last iteration of the loop, then the terminal must be\n          // followed by a long identifier.\n          pattern: RegExp(\n            /((?:^|[^:]):\\s*)<TERMINAL>(?:\\s*(?:(?:\\*|->)\\s*<TERMINAL>|,\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\s+<LONG-ID>)))*/.source\n              .replace(/<NOT-LAST>/g, function () {\n                return /\\s*(?:[*,]|->)/.source\n              })\n              .replace(/<TERMINAL>/g, function () {\n                return /(?:'[\\w']*|<LONG-ID>|\\((?:[^()]|\\([^()]*\\))*\\)|\\{(?:[^{}]|\\{[^{}]*\\})*\\})(?:\\s+<LONG-ID>)*/\n                  .source\n              })\n              .replace(/<LONG-ID>/g, function () {\n                return /(?!<KEYWORD>)[a-z\\d_][\\w'.]*/.source\n              })\n              .replace(/<KEYWORD>/g, function () {\n                return keywords.source\n              }),\n            'i'\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        {\n          pattern:\n            /((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,\n          lookbehind: true\n        }\n      ],\n      function: {\n        pattern: /((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,\n        lookbehind: true\n      },\n      keyword: keywords,\n      variable: {\n        pattern: /(^|[^\\w'])'[\\w']*/,\n        lookbehind: true\n      },\n      number: /~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,\n      word: {\n        pattern: /\\b0w(?:\\d+|x[\\da-f]+)\\b/i,\n        alias: 'constant'\n      },\n      boolean: /\\b(?:false|true)\\b/i,\n      operator: /\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,\n      punctuation: /[(){}\\[\\].:,;]/\n    }\n    Prism.languages.sml['class-name'][0].inside = Prism.languages.sml\n    Prism.languages.smlnj = Prism.languages.sml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = solidity\nsolidity.displayName = 'solidity'\nsolidity.aliases = ['sol']\nfunction solidity(Prism) {\n  Prism.languages.solidity = Prism.languages.extend('clike', {\n    'class-name': {\n      pattern:\n        /(\\b(?:contract|enum|interface|library|new|struct|using)\\s+)(?!\\d)[\\w$]+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\\b/,\n    operator: /=>|->|:=|=:|\\*\\*|\\+\\+|--|\\|\\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/\n  })\n  Prism.languages.insertBefore('solidity', 'keyword', {\n    builtin:\n      /\\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\\d|3[0-2])?)\\b/\n  })\n  Prism.languages.insertBefore('solidity', 'number', {\n    version: {\n      pattern: /([<>]=?|\\^)\\d+\\.\\d+\\.\\d+\\b/,\n      lookbehind: true,\n      alias: 'number'\n    }\n  })\n  Prism.languages.sol = Prism.languages.solidity\n}\n","'use strict'\n\nmodule.exports = solutionFile\nsolutionFile.displayName = 'solutionFile'\nsolutionFile.aliases = []\nfunction solutionFile(Prism) {\n  ;(function (Prism) {\n    var guid = {\n      // https://en.wikipedia.org/wiki/Universally_unique_identifier#Format\n      pattern: /\\{[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}\\}/i,\n      alias: 'constant',\n      inside: {\n        punctuation: /[{}]/\n      }\n    }\n    Prism.languages['solution-file'] = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n        greedy: true,\n        inside: {\n          guid: guid\n        }\n      },\n      object: {\n        // Foo\n        //   Bar(\"abs\") = 9\n        //   EndBar\n        //   Prop = TRUE\n        // EndFoo\n        pattern:\n          /^([ \\t]*)(?:([A-Z]\\w*)\\b(?=.*(?:\\r\\n?|\\n)(?:\\1[ \\t].*(?:\\r\\n?|\\n))*\\1End\\2(?=[ \\t]*$))|End[A-Z]\\w*(?=[ \\t]*$))/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'keyword'\n      },\n      property: {\n        pattern: /^([ \\t]*)(?!\\s)[^\\r\\n\"#=()]*[^\\s\"#=()](?=\\s*=)/m,\n        lookbehind: true,\n        inside: {\n          guid: guid\n        }\n      },\n      guid: guid,\n      number: /\\b\\d+(?:\\.\\d+)*\\b/,\n      boolean: /\\b(?:FALSE|TRUE)\\b/,\n      operator: /=/,\n      punctuation: /[(),]/\n    }\n    Prism.languages['sln'] = Prism.languages['solution-file']\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = soy\nsoy.displayName = 'soy'\nsoy.aliases = []\nfunction soy(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/\n    Prism.languages.soy = {\n      comment: [\n        /\\/\\*[\\s\\S]*?\\*\\//,\n        {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'command-arg': {\n        pattern:\n          /(\\{+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      parameter: {\n        pattern: /(\\{+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\{+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        },\n        /\\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\\b/\n      ],\n      delimiter: {\n        pattern: /^\\{+\\/?|\\/?\\}+$/,\n        alias: 'punctuation'\n      },\n      property: /\\w+(?==)/,\n      variable: {\n        pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+\\]))*/,\n        inside: {\n          string: {\n            pattern: stringPattern,\n            greedy: true\n          },\n          number: numberPattern,\n          punctuation: /[\\[\\].?]/\n        }\n      },\n      string: {\n        pattern: stringPattern,\n        greedy: true\n      },\n      function: [\n        /\\w+(?=\\()/,\n        {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }\n      ],\n      boolean: /\\b(?:false|true)\\b/,\n      number: numberPattern,\n      operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n      punctuation: /[{}()\\[\\]|.,:]/\n    } // Tokenize all inline Soy expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var soyPattern = /\\{\\{.+?\\}\\}|\\{.+?\\}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g\n      var soyLitteralStart = '{literal}'\n      var soyLitteralEnd = '{/literal}'\n      var soyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'soy',\n        soyPattern,\n        function (match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false\n          }\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy')\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorTurtle = require('./turtle.js')\nmodule.exports = sparql\nsparql.displayName = 'sparql'\nsparql.aliases = ['rq']\nfunction sparql(Prism) {\n  Prism.register(refractorTurtle)\n  Prism.languages.sparql = Prism.languages.extend('turtle', {\n    boolean: /\\b(?:false|true)\\b/i,\n    variable: {\n      pattern: /[?$]\\w+/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('sparql', 'punctuation', {\n    keyword: [\n      /\\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\\b/i,\n      /\\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\\b(?=\\s*\\()/i,\n      /\\b(?:BASE|GRAPH|PREFIX)\\b/i\n    ]\n  })\n  Prism.languages.rq = Prism.languages.sparql\n}\n","'use strict'\n\nmodule.exports = splunkSpl\nsplunkSpl.displayName = 'splunkSpl'\nsplunkSpl.aliases = []\nfunction splunkSpl(Prism) {\n  Prism.languages['splunk-spl'] = {\n    comment: /`comment\\(\"(?:\\\\.|[^\\\\\"])*\"\\)`/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n      greedy: true\n    },\n    // https://docs.splunk.com/Documentation/Splunk/7.3.0/SearchReference/ListOfSearchCommands\n    keyword:\n      /\\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\\b/i,\n    'operator-word': {\n      pattern: /\\b(?:and|as|by|not|or|xor)\\b/i,\n      alias: 'operator'\n    },\n    function: /\\b\\w+(?=\\s*\\()/,\n    property: /\\b\\w+(?=\\s*=(?!=))/,\n    date: {\n      // MM/DD/YYYY(:HH:MM:SS)?\n      pattern: /\\b\\d{1,2}\\/\\d{1,2}\\/\\d{1,4}(?:(?::\\d{1,2}){3})?\\b/,\n      alias: 'number'\n    },\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    boolean: /\\b(?:f|false|t|true)\\b/i,\n    operator: /[<>=]=?|[-+*/%|]/,\n    punctuation: /[()[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = sqf\nsqf.displayName = 'sqf'\nsqf.aliases = []\nfunction sqf(Prism) {\n  Prism.languages.sqf = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:(?:\"\")?[^\"])*\"(?!\")|'(?:[^'])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function:\n      /\\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\\b/i,\n    number:\n      /(?:\\$|\\b0x)[\\da-f]+\\b|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+)?)(?:e[+-]?\\d+)?\\b/i,\n    operator: /##|>>|&&|\\|\\||[!=<>]=?|[-+*/%#^]|\\b(?:and|mod|not|or)\\b/i,\n    'magic-variable': {\n      pattern:\n        /\\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\\b/i,\n      alias: 'keyword'\n    },\n    constant: /\\bDIK(?:_[a-z\\d]+)+\\b/i\n  })\n  Prism.languages.insertBefore('sqf', 'string', {\n    macro: {\n      pattern: /(^[ \\t]*)#[a-z](?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /#[a-z]+\\b/i,\n          alias: 'keyword'\n        },\n        comment: Prism.languages.sqf.comment\n      }\n    }\n  })\n  delete Prism.languages.sqf['class-name']\n}\n","'use strict'\n\nmodule.exports = sql\nsql.displayName = 'sql'\nsql.aliases = []\nfunction sql(Prism) {\n  Prism.languages.sql = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    variable: [\n      {\n        pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n        greedy: true\n      },\n      /@[\\w.$]+/\n    ],\n    string: {\n      pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n      greedy: true,\n      lookbehind: true\n    },\n    identifier: {\n      pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        punctuation: /^`|`$/\n      }\n    },\n    function:\n      /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n    // Should we highlight user defined functions too?\n    keyword:\n      /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n    punctuation: /[;[\\]()`,.]/\n  }\n}\n","'use strict'\n\nmodule.exports = squirrel\nsquirrel.displayName = 'squirrel'\nsquirrel.aliases = []\nfunction squirrel(Prism) {\n  Prism.languages.squirrel = Prism.languages.extend('clike', {\n    comment: [\n      Prism.languages.clike['comment'][0],\n      {\n        pattern: /(^|[^\\\\:])(?:\\/\\/|#).*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\\\\\"'@])(?:@\"(?:[^\"]|\"\")*\"(?!\")|\"(?:[^\\\\\\r\\n\"]|\\\\.)*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:class|enum|extends|instanceof)\\s+)\\w+(?:\\.\\w+)*/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\\b/,\n    number: /\\b(?:0x[0-9a-fA-F]+|\\d+(?:\\.(?:\\d+|[eE][+-]?\\d+))?)\\b/,\n    operator: /\\+\\+|--|<=>|<[-<]|>>>?|&&?|\\|\\|?|[-+*/%!=<>]=?|[~^]|::?/,\n    punctuation: /[(){}\\[\\],;.]/\n  })\n  Prism.languages.insertBefore('squirrel', 'string', {\n    char: {\n      pattern: /(^|[^\\\\\"'])'(?:[^\\\\']|\\\\(?:[xuU][0-9a-fA-F]{0,8}|[\\s\\S]))'/,\n      lookbehind: true,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('squirrel', 'operator', {\n    'attribute-punctuation': {\n      pattern: /<\\/|\\/>/,\n      alias: 'important'\n    },\n    lambda: {\n      pattern: /@(?=\\()/,\n      alias: 'operator'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = stan\nstan.displayName = 'stan'\nstan.aliases = []\nfunction stan(Prism) {\n  ;(function (Prism) {\n    // https://mc-stan.org/docs/2_28/reference-manual/bnf-grammars.html\n    var higherOrderFunctions =\n      /\\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\\b/\n    Prism.languages.stan = {\n      comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\n      string: {\n        // String literals can contain spaces and any printable ASCII characters except for \" and \\\n        // https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals\n        pattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\n        greedy: true\n      },\n      directive: {\n        pattern: /^([ \\t]*)#include\\b.*/m,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'function-arg': {\n        pattern: RegExp(\n          '(' +\n            higherOrderFunctions.source +\n            /\\s*\\(\\s*/.source +\n            ')' +\n            /[a-zA-Z]\\w*/.source\n        ),\n        lookbehind: true,\n        alias: 'function'\n      },\n      constraint: {\n        pattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          property: /\\b[a-z]\\w*(?=\\s*=)/i,\n          operator: /=/,\n          punctuation: /^<|>$|,/\n        }\n      },\n      keyword: [\n        {\n          pattern:\n            /\\bdata(?=\\s*\\{)|\\b(?:functions|generated|model|parameters|quantities|transformed)\\b/,\n          alias: 'program-block'\n        },\n        /\\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\\b/, // these are functions that are known to take another function as their first argument.\n        higherOrderFunctions\n      ],\n      function: /\\b[a-z]\\w*(?=\\s*\\()/i,\n      number:\n        /(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:E[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\n      punctuation: /[()\\[\\]{},;]/\n    }\n    Prism.languages.stan.constraint.inside.expression.inside =\n      Prism.languages.stan\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = stylus\nstylus.displayName = 'stylus'\nstylus.aliases = []\nfunction stylus(Prism) {\n  ;(function (Prism) {\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n      lookbehind: true\n    } // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    var inside = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n        greedy: true\n      },\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null,\n      // See below\n      func: null,\n      // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      color: [\n        /\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n        {\n          pattern:\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: [\n        // We want non-word chars around \"-\" because it is\n        // accepted in property names.\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n      ],\n      number: number,\n      punctuation: /[{}()\\[\\];:,]/\n    }\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    }\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    }\n    Prism.languages.stylus = {\n      'atrule-declaration': {\n        pattern: /(^[ \\t]*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern:\n          /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern:\n          /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          comment: inside.comment,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = swift\nswift.displayName = 'swift'\nswift.aliases = []\nfunction swift(Prism) {\n  Prism.languages.swift = {\n    comment: {\n      // Nested comments are supported up to 2 levels\n      pattern:\n        /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-literal': [\n      // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html\n      {\n        pattern: RegExp(\n          /(^|[^\"#])/.source +\n            '(?:' + // single-line string\n            /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/\n              .source +\n            '|' + // multi-line string\n            /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/\n              .source +\n            ')' +\n            /(?![\"#])/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\\\($/,\n            alias: 'punctuation'\n          },\n          punctuation: /\\\\(?=[\\r\\n])/,\n          string: /[\\s\\S]+/\n        }\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\"#])(#+)/.source +\n            '(?:' + // single-line string\n            /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/\n              .source +\n            '|' + // multi-line string\n            /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source +\n            ')' +\n            '\\\\2'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\#+\\($/,\n            alias: 'punctuation'\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    ],\n    directive: {\n      // directives with conditions\n      pattern: RegExp(\n        /#/.source +\n          '(?:' +\n          (/(?:elseif|if)\\b/.source +\n            '(?:[ \\t]*' + // This regex is a little complex. It's equivalent to this:\n            //   (?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*<round>)?|<round>)(?:[ \\t]*(?:&&|\\|\\|))?\n            // where <round> is a general parentheses expression.\n            /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/\n              .source +\n            ')+') +\n          '|' +\n          /(?:else|endif)\\b/.source +\n          ')'\n      ),\n      alias: 'property',\n      inside: {\n        'directive-name': /^#\\w+/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b\\d+(?:\\.\\d+)*\\b/,\n        operator: /!|&&|\\|\\||[<>]=?/,\n        punctuation: /[(),]/\n      }\n    },\n    literal: {\n      pattern:\n        /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\n      alias: 'constant'\n    },\n    'other-directive': {\n      pattern: /#\\w+\\b/,\n      alias: 'property'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'atrule'\n    },\n    'function-definition': {\n      pattern: /(\\bfunc\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    label: {\n      // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141\n      pattern:\n        /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\n      lookbehind: true,\n      alias: 'important'\n    },\n    keyword:\n      /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    nil: {\n      pattern: /\\bnil\\b/,\n      alias: 'constant'\n    },\n    'short-argument': /\\$\\d+\\b/,\n    omit: {\n      pattern: /\\b_\\b/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n    // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.\n    'class-name': /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n    // Operators are generic in Swift. Developers can even create new operators (e.g. +++).\n    // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481\n    // This regex only supports ASCII operators.\n    operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\n    punctuation: /[{}[\\]();,.:\\\\]/\n  }\n  Prism.languages.swift['string-literal'].forEach(function (rule) {\n    rule.inside['interpolation'].inside = Prism.languages.swift\n  })\n}\n","'use strict'\n\nmodule.exports = systemd\nsystemd.displayName = 'systemd'\nsystemd.aliases = []\nfunction systemd(Prism) {\n  // https://www.freedesktop.org/software/systemd/man/systemd.syntax.html\n  ;(function (Prism) {\n    var comment = {\n      pattern: /^[;#].*/m,\n      greedy: true\n    }\n    var quotesSource = /\"(?:[^\\r\\n\"\\\\]|\\\\(?:[^\\r]|\\r\\n?))*\"(?!\\S)/.source\n    Prism.languages.systemd = {\n      comment: comment,\n      section: {\n        pattern: /^\\[[^\\n\\r\\[\\]]*\\](?=[ \\t]*$)/m,\n        greedy: true,\n        inside: {\n          punctuation: /^\\[|\\]$/,\n          'section-name': {\n            pattern: /[\\s\\S]+/,\n            alias: 'selector'\n          }\n        }\n      },\n      key: {\n        pattern: /^[^\\s=]+(?=[ \\t]*=)/m,\n        greedy: true,\n        alias: 'attr-name'\n      },\n      value: {\n        // This pattern is quite complex because of two properties:\n        //  1) Quotes (strings) must be preceded by a space. Since we can't use lookbehinds, we have to \"resolve\"\n        //     the lookbehind. You will see this in the main loop where spaces are handled separately.\n        //  2) Line continuations.\n        //     After line continuations, empty lines and comments are ignored so we have to consume them.\n        pattern: RegExp(\n          /(=[ \\t]*(?!\\s))/.source + // the value either starts with quotes or not\n            '(?:' +\n            quotesSource +\n            '|(?=[^\"\\r\\n]))' + // main loop\n            '(?:' +\n            (/[^\\s\\\\]/.source + // handle spaces separately because of quotes\n              '|' +\n              '[ \\t]+(?:(?![ \\t\"])|' +\n              quotesSource +\n              ')' + // line continuation\n              '|' +\n              /\\\\[\\r\\n]+(?:[#;].*[\\r\\n]+)*(?![#;])/.source) +\n            ')*'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'attr-value',\n        inside: {\n          comment: comment,\n          quoted: {\n            pattern: RegExp(/(^|\\s)/.source + quotesSource),\n            lookbehind: true,\n            greedy: true\n          },\n          punctuation: /\\\\$/m,\n          boolean: {\n            pattern: /^(?:false|no|off|on|true|yes)$/,\n            greedy: true\n          }\n        }\n      },\n      punctuation: /=/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorT4Templating = require('./t4-templating.js')\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = t4Cs\nt4Cs.displayName = 't4Cs'\nt4Cs.aliases = []\nfunction t4Cs(Prism) {\n  Prism.register(refractorT4Templating)\n  Prism.register(refractorCsharp)\n  Prism.languages.t4 = Prism.languages['t4-cs'] =\n    Prism.languages['t4-templating'].createT4('csharp')\n}\n","'use strict'\n\nmodule.exports = t4Templating\nt4Templating.displayName = 't4Templating'\nt4Templating.aliases = []\nfunction t4Templating(Prism) {\n  ;(function (Prism) {\n    function createBlock(prefix, inside, contentAlias) {\n      return {\n        pattern: RegExp('<#' + prefix + '[\\\\s\\\\S]*?#>'),\n        alias: 'block',\n        inside: {\n          delimiter: {\n            pattern: RegExp('^<#' + prefix + '|#>$'),\n            alias: 'important'\n          },\n          content: {\n            pattern: /[\\s\\S]+/,\n            inside: inside,\n            alias: contentAlias\n          }\n        }\n      }\n    }\n    function createT4(insideLang) {\n      var grammar = Prism.languages[insideLang]\n      var className = 'language-' + insideLang\n      return {\n        block: {\n          pattern: /<#[\\s\\S]+?#>/,\n          inside: {\n            directive: createBlock('@', {\n              'attr-value': {\n                pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n                inside: {\n                  punctuation: /^=|^[\"']|[\"']$/\n                }\n              },\n              keyword: /\\b\\w+(?=\\s)/,\n              'attr-name': /\\b\\w+/\n            }),\n            expression: createBlock('=', grammar, className),\n            'class-feature': createBlock('\\\\+', grammar, className),\n            standard: createBlock('', grammar, className)\n          }\n        }\n      }\n    }\n    Prism.languages['t4-templating'] = Object.defineProperty({}, 'createT4', {\n      value: createT4\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorT4Templating = require('./t4-templating.js')\nvar refractorVbnet = require('./vbnet.js')\nmodule.exports = t4Vb\nt4Vb.displayName = 't4Vb'\nt4Vb.aliases = []\nfunction t4Vb(Prism) {\n  Prism.register(refractorT4Templating)\n  Prism.register(refractorVbnet)\n  Prism.languages['t4-vb'] = Prism.languages['t4-templating'].createT4('vbnet')\n}\n","'use strict'\nvar refractorYaml = require('./yaml.js')\nmodule.exports = tap\ntap.displayName = 'tap'\ntap.aliases = []\nfunction tap(Prism) {\n  Prism.register(refractorYaml)\n  // https://en.wikipedia.org/wiki/Test_Anything_Protocol\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = tcl\ntcl.displayName = 'tcl'\ntcl.aliases = []\nfunction tcl(Prism) {\n  Prism.languages.tcl = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\$)\\{[^}]+\\}/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^[\\t ]*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^[\\t ]*proc[ \\t]+)\\S+/m,\n      lookbehind: true\n    },\n    builtin: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\\b/m,\n        lookbehind: true\n      },\n      /\\b(?:else|elseif)\\b/\n    ],\n    scope: {\n      pattern: /(^[\\t ]*)(?:global|upvar|variable)\\b/m,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*|\\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n      lookbehind: true\n    },\n    operator:\n      /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|in|ne|ni)\\b/,\n    punctuation: /[{}()\\[\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = textile\ntextile.displayName = 'textile'\ntextile.aliases = []\nfunction textile(Prism) {\n  ;(function (Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source // Opening and closing parentheses which are not a modifier\n    // This pattern is necessary to prevent exponential backtracking\n    var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function withModifier(source, flags) {\n      return RegExp(\n        source\n          .replace(/<MOD>/g, function () {\n            return '(?:' + modifierRegex + ')'\n          })\n          .replace(/<PAR>/g, function () {\n            return '(?:' + parenthesesRegex + ')'\n          }),\n        flags || ''\n      )\n    }\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^{}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^()]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\[\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    }\n    var textile = (Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n            inside: {\n              modifier: {\n                pattern: withModifier(\n                  /(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n            inside: {\n              modifier: {\n                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: withModifier(\n              /^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/\n                .source,\n              'm'\n            ),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: withModifier(\n                  /(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/\n                    .source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/\n                .source\n            ),\n            lookbehind: true,\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n              // *bold*, **bold**\n              bold: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(\n                  /(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(^\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(^\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source\n            ),\n            inside: {\n              text: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(/(^\")<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: withModifier(\n              /!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/\n                .source\n            ),\n            inside: {\n              source: {\n                pattern: withModifier(\n                  /(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/\n                    .source\n                ),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^()]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:C|R|TM)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    }))\n    var phraseInside = textile['phrase'].inside\n    var nestedPatterns = {\n      inline: phraseInside['inline'],\n      link: phraseInside['link'],\n      image: phraseInside['image'],\n      footnote: phraseInside['footnote'],\n      acronym: phraseInside['acronym'],\n      mark: phraseInside['mark']\n    } // Only allow alpha-numeric HTML tags, not XML tags\n    textile.tag.pattern =\n      /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i // Allow some nesting\n    var phraseInlineInside = phraseInside['inline'].inside\n    phraseInlineInside['bold'].inside = nestedPatterns\n    phraseInlineInside['italic'].inside = nestedPatterns\n    phraseInlineInside['inserted'].inside = nestedPatterns\n    phraseInlineInside['deleted'].inside = nestedPatterns\n    phraseInlineInside['span'].inside = nestedPatterns // Allow some styles inside table cells\n    var phraseTableInside = phraseInside['table'].inside\n    phraseTableInside['inline'] = nestedPatterns['inline']\n    phraseTableInside['link'] = nestedPatterns['link']\n    phraseTableInside['image'] = nestedPatterns['image']\n    phraseTableInside['footnote'] = nestedPatterns['footnote']\n    phraseTableInside['acronym'] = nestedPatterns['acronym']\n    phraseTableInside['mark'] = nestedPatterns['mark']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = toml\ntoml.displayName = 'toml'\ntoml.aliases = []\nfunction toml(Prism) {\n  ;(function (Prism) {\n    var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source\n    /**\n     * @param {string} pattern\n     */\n    function insertKey(pattern) {\n      return pattern.replace(/__/g, function () {\n        return key\n      })\n    }\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp(\n          insertKey(\n            /(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp(\n          insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern:\n          /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [\n        {\n          // Offset Date-Time, Local Date-Time, Local Date\n          pattern:\n            /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n          alias: 'number'\n        },\n        {\n          // Local Time\n          pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n          alias: 'number'\n        }\n      ],\n      number:\n        /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = tremor\ntremor.displayName = 'tremor'\ntremor.aliases = []\nfunction tremor(Prism) {\n  ;(function (Prism) {\n    Prism.languages.tremor = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      'interpolated-string': null,\n      // see below\n      extractor: {\n        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n        greedy: true,\n        inside: {\n          regex: {\n            pattern: /(^re)\\|[\\s\\S]+/,\n            lookbehind: true\n          },\n          function: /^\\w+/,\n          value: /\\|[\\s\\S]+/\n        }\n      },\n      identifier: {\n        pattern: /`[^`]*`/,\n        greedy: true\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n      keyword:\n        /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n      boolean: /\\b(?:false|null|true)\\b/i,\n      number:\n        /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n      'pattern-punctuation': {\n        pattern: /%(?=[({[])/,\n        alias: 'punctuation'\n      },\n      operator:\n        /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n      punctuation: /::|[;\\[\\]()\\{\\},.:]/\n    }\n    var interpolationPattern =\n      /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source\n    Prism.languages.tremor['interpolated-string'] = {\n      pattern: RegExp(\n        /(^|[^\\\\])/.source +\n          '(?:' +\n          '\"\"\"(?:' +\n          /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"\"\"' +\n          '|' +\n          '\"(?:' +\n          /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"' +\n          ')'\n      ),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          inside: {\n            punctuation: /^#\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.tremor\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.troy = Prism.languages['tremor']\n    Prism.languages.trickle = Prism.languages['tremor']\n  })(Prism)\n}\n","'use strict'\nvar refractorJsx = require('./jsx.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = tsx\ntsx.displayName = 'tsx'\ntsx.aliases = []\nfunction tsx(Prism) {\n  Prism.register(refractorJsx)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var typescript = Prism.util.clone(Prism.languages.typescript)\n    Prism.languages.tsx = Prism.languages.extend('jsx', typescript) // doesn't work with TS because TS is too complex\n    delete Prism.languages.tsx['parameter']\n    delete Prism.languages.tsx['literal-property'] // This will prevent collisions between TSX tags and TS generic types.\n    // Idea by https://github.com/karlhorky\n    // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n    var tag = Prism.languages.tsx.tag\n    tag.pattern = RegExp(\n      /(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')',\n      tag.pattern.flags\n    )\n    tag.lookbehind = true\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = tt2\ntt2.displayName = 'tt2'\ntt2.aliases = []\nfunction tt2(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\n      comment: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      keyword:\n        /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\\b/,\n      punctuation: /[[\\]{},()]/\n    })\n    Prism.languages.insertBefore('tt2', 'number', {\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|not|or)\\b/,\n      variable: {\n        pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'keyword', {\n      delimiter: {\n        pattern: /^(?:\\[%|%%)-?|-?%\\]$/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'string', {\n      'single-quoted-string': {\n        pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          variable: {\n            pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n          }\n        }\n      }\n    }) // The different types of TT2 strings \"replace\" the C-like standard string\n    delete Prism.languages.tt2.string\n    Prism.hooks.add('before-tokenize', function (env) {\n      var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'tt2',\n        tt2Pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = turtle\nturtle.displayName = 'turtle'\nturtle.aliases = []\nfunction turtle(Prism) {\n  Prism.languages.turtle = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'multiline-string': {\n      pattern:\n        /\"\"\"(?:(?:\"\"?)?(?:[^\"\\\\]|\\\\.))*\"\"\"|'''(?:(?:''?)?(?:[^'\\\\]|\\\\.))*'''/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        comment: /#.*/\n      }\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    url: {\n      pattern:\n        /<(?:[^\\x00-\\x20<>\"{}|^`\\\\]|\\\\(?:u[\\da-fA-F]{4}|U[\\da-fA-F]{8}))*>/,\n      greedy: true,\n      inside: {\n        punctuation: /[<>]/\n      }\n    },\n    function: {\n      pattern:\n        /(?:(?![-.\\d\\xB7])[-.\\w\\xB7\\xC0-\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\w\\xC0-\\uFFFD]|%[\\da-f]{2}|\\\\.)+)?/i,\n      inside: {\n        'local-name': {\n          pattern: /([^:]*:)[\\s\\S]+/,\n          lookbehind: true\n        },\n        prefix: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    },\n    number: /[+-]?\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}.,;()[\\]]|\\^\\^/,\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: [/(?:\\ba|@prefix|@base)\\b|=/, /\\b(?:base|graph|prefix)\\b/i],\n    tag: {\n      pattern: /@[a-z]+(?:-[a-z\\d]+)*/i,\n      inside: {\n        punctuation: /@/\n      }\n    }\n  }\n  Prism.languages.trig = Prism.languages['turtle']\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = twig\ntwig.displayName = 'twig'\ntwig.aliases = []\nfunction twig(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.twig = {\n    comment: /^\\{#[\\s\\S]*?#\\}$/,\n    'tag-name': {\n      pattern: /(^\\{%-?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    delimiter: {\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      inside: {\n        punctuation: /^['\"]|['\"]$/\n      }\n    },\n    keyword: /\\b(?:even|if|odd)\\b/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    operator: [\n      {\n        pattern:\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      },\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n    ],\n    punctuation: /[()\\[\\]{}:.,]/\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (env.language !== 'twig') {\n      return\n    }\n    var pattern = /\\{(?:#[\\s\\S]*?#|%[\\s\\S]*?%|\\{[\\s\\S]*?\\})\\}/g\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'twig', pattern)\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'twig')\n  })\n}\n","'use strict'\n\nmodule.exports = typescript\ntypescript.displayName = 'typescript'\ntypescript.aliases = ['ts']\nfunction typescript(Prism) {\n  ;(function (Prism) {\n    Prism.languages.typescript = Prism.languages.extend('javascript', {\n      'class-name': {\n        pattern:\n          /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n      builtin:\n        /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n    }) // The keywords TypeScript adds to JavaScript\n    Prism.languages.typescript.keyword.push(\n      /\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n      /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n      /\\btype\\b(?=\\s*(?:[\\{*]|$))/\n    ) // doesn't work with TS because TS is too complex\n    delete Prism.languages.typescript['parameter']\n    delete Prism.languages.typescript['literal-property'] // a version of typescript specifically for highlighting types\n    var typeInside = Prism.languages.extend('typescript', {})\n    delete typeInside['class-name']\n    Prism.languages.typescript['class-name'].inside = typeInside\n    Prism.languages.insertBefore('typescript', 'function', {\n      decorator: {\n        pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n        inside: {\n          at: {\n            pattern: /^@/,\n            alias: 'operator'\n          },\n          function: /^[\\s\\S]+/\n        }\n      },\n      'generic-function': {\n        // e.g. foo<T extends \"bar\" | \"baz\">( ...\n        pattern:\n          /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n        greedy: true,\n        inside: {\n          function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            // everything after the first <\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      }\n    })\n    Prism.languages.ts = Prism.languages.typescript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = typoscript\ntyposcript.displayName = 'typoscript'\ntyposcript.aliases = ['tsconfig']\nfunction typoscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/\n    Prism.languages.typoscript = {\n      comment: [\n        {\n          // multiline comments /* */\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true\n        },\n        {\n          // double-slash comments - ignored when backslashes or colon is found in front\n          // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n          pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // hash comments - ignored when leading quote is found for hex colors in strings\n          pattern: /(^|[^\"'])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      function: [\n        {\n          // old include style\n          pattern:\n            /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n          inside: {\n            string: {\n              pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n              inside: {\n                keyword: keywords\n              }\n            },\n            keyword: {\n              pattern: /INCLUDE_TYPOSCRIPT/\n            }\n          }\n        },\n        {\n          // new include style\n          pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n          inside: {\n            string: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n          }\n        }\n      ],\n      string: {\n        pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n        lookbehind: true,\n        inside: {\n          function: /\\{\\$.*\\}/,\n          // constants include\n          keyword: keywords,\n          number: /^\\d+$/,\n          punctuation: /[,|:]/\n        }\n      },\n      keyword: keywords,\n      number: {\n        // special highlighting for indexes of arrays in tags\n        pattern: /\\b\\d+\\s*[.{=]/,\n        inside: {\n          operator: /[.{=]/\n        }\n      },\n      tag: {\n        pattern: /\\.?[-\\w\\\\]+\\.?/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      punctuation: /[{}[\\];(),.:|]/,\n      operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n    }\n    Prism.languages.tsconfig = Prism.languages.typoscript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = unrealscript\nunrealscript.displayName = 'unrealscript'\nunrealscript.aliases = ['uc', 'uscript']\nfunction unrealscript(Prism) {\n  Prism.languages.unrealscript = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    category: {\n      pattern:\n        /(\\b(?:(?:autoexpand|hide|show)categories|var)\\s*\\()[^()]+(?=\\))/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /(\\w\\s*)<\\s*\\w+\\s*=[^<>|=\\r\\n]+(?:\\|\\s*\\w+\\s*=[^<>|=\\r\\n]+)*>/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        property: /\\b\\w+(?=\\s*=)/,\n        operator: /=/,\n        punctuation: /[<>|]/\n      }\n    },\n    macro: {\n      pattern: /`\\w+/,\n      alias: 'property'\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|enum|extends|interface|state(?:\\(\\))?|struct|within)\\s+)\\w+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    // https://docs.unrealengine.com/udk/Three/UnrealScriptExpressions.html\n    operator:\n      />>|<<|--|\\+\\+|\\*\\*|[-+*/~!=<>$@]=?|&&?|\\|\\|?|\\^\\^?|[?:%]|\\b(?:ClockwiseFrom|Cross|Dot)\\b/,\n    punctuation: /[()[\\]{};,.]/\n  }\n  Prism.languages.uc = Prism.languages.uscript = Prism.languages.unrealscript\n}\n","'use strict'\n\nmodule.exports = uorazor\nuorazor.displayName = 'uorazor'\nuorazor.aliases = []\nfunction uorazor(Prism) {\n  Prism.languages.uorazor = {\n    'comment-hash': {\n      pattern: /#.*/,\n      alias: 'comment',\n      greedy: true\n    },\n    'comment-slash': {\n      pattern: /\\/\\/.*/,\n      alias: 'comment',\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      inside: {\n        punctuation: /^['\"]|['\"]$/\n      },\n      greedy: true\n    },\n    'source-layers': {\n      pattern:\n        /\\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\\b/i,\n      alias: 'function'\n    },\n    'source-commands': {\n      pattern:\n        /\\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\\b/,\n      alias: 'function'\n    },\n    'tag-name': {\n      pattern: /(^\\{%-?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    delimiter: {\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n      alias: 'punctuation'\n    },\n    function:\n      /\\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\\b/,\n    keyword:\n      /\\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\\b/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    operator: [\n      {\n        pattern:\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      },\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n    ],\n    punctuation: /[()\\[\\]{}:.,]/\n  }\n}\n","'use strict'\n\nmodule.exports = uri\nuri.displayName = 'uri'\nuri.aliases = ['url']\nfunction uri(Prism) {\n  // https://tools.ietf.org/html/rfc3986#appendix-A\n  Prism.languages.uri = {\n    scheme: {\n      pattern: /^[a-z][a-z0-9+.-]*:/im,\n      greedy: true,\n      inside: {\n        'scheme-delimiter': /:$/\n      }\n    },\n    fragment: {\n      pattern: /#[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'fragment-delimiter': /^#/\n      }\n    },\n    query: {\n      pattern: /\\?[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'query-delimiter': {\n          pattern: /^\\?/,\n          greedy: true\n        },\n        'pair-delimiter': /[&;]/,\n        pair: {\n          pattern: /^[^=][\\s\\S]*/,\n          inside: {\n            key: /^[^=]+/,\n            value: {\n              pattern: /(^=)[\\s\\S]+/,\n              lookbehind: true\n            }\n          }\n        }\n      }\n    },\n    authority: {\n      pattern: RegExp(\n        /^\\/\\//.source + // [ userinfo \"@\" ]\n          /(?:[\\w\\-.~!$&'()*+,;=%:]*@)?/.source + // host\n          ('(?:' + // IP-literal\n            /\\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\\.[\\w\\-.~!$&'()*+,;=]+)\\]/\n              .source +\n            '|' + // IPv4address or registered name\n            /[\\w\\-.~!$&'()*+,;=%]*/.source +\n            ')') + // [ \":\" port ]\n          /(?::\\d*)?/.source,\n        'm'\n      ),\n      inside: {\n        'authority-delimiter': /^\\/\\//,\n        'user-info-segment': {\n          pattern: /^[\\w\\-.~!$&'()*+,;=%:]*@/,\n          inside: {\n            'user-info-delimiter': /@$/,\n            'user-info': /^[\\w\\-.~!$&'()*+,;=%:]+/\n          }\n        },\n        'port-segment': {\n          pattern: /:\\d*$/,\n          inside: {\n            'port-delimiter': /^:/,\n            port: /^\\d+/\n          }\n        },\n        host: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            'ip-literal': {\n              pattern: /^\\[[\\s\\S]+\\]$/,\n              inside: {\n                'ip-literal-delimiter': /^\\[|\\]$/,\n                'ipv-future': /^v[\\s\\S]+/,\n                'ipv6-address': /^[\\s\\S]+/\n              }\n            },\n            'ipv4-address':\n              /^(?:(?:[03-9]\\d?|[12]\\d{0,2})\\.){3}(?:[03-9]\\d?|[12]\\d{0,2})$/\n          }\n        }\n      }\n    },\n    path: {\n      pattern: /^[\\w\\-.~!$&'()*+,;=%:@/]+/m,\n      inside: {\n        'path-separator': /\\//\n      }\n    }\n  }\n  Prism.languages.url = Prism.languages.uri\n}\n","'use strict'\n\nmodule.exports = v\nv.displayName = 'v'\nv.aliases = []\nfunction v(Prism) {\n  ;(function (Prism) {\n    var interpolationExpr = {\n      pattern: /[\\s\\S]+/,\n      inside: null\n    }\n    Prism.languages.v = Prism.languages.extend('clike', {\n      string: {\n        pattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        alias: 'quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n            lookbehind: true,\n            inside: {\n              'interpolation-variable': {\n                pattern: /^\\$\\w[\\s\\S]*$/,\n                alias: 'variable'\n              },\n              'interpolation-punctuation': {\n                pattern: /^\\$\\{|\\}$/,\n                alias: 'punctuation'\n              },\n              'interpolation-expression': interpolationExpr\n            }\n          }\n        }\n      },\n      'class-name': {\n        pattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /(?:\\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:else|for|if)|#(?:flag|include))\\b/,\n      number:\n        /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n      operator:\n        /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n      builtin:\n        /\\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n    })\n    interpolationExpr.inside = Prism.languages.v\n    Prism.languages.insertBefore('v', 'string', {\n      char: {\n        pattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/,\n        // using {1,2} instead of `u` flag for compatibility\n        alias: 'rune'\n      }\n    })\n    Prism.languages.insertBefore('v', 'operator', {\n      attribute: {\n        pattern:\n          /(^[\\t ]*)\\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\\]/m,\n        lookbehind: true,\n        alias: 'annotation',\n        inside: {\n          punctuation: /[\\[\\]]/,\n          keyword: /\\w+/\n        }\n      },\n      generic: {\n        pattern: /<\\w+>(?=\\s*[\\)\\{])/,\n        inside: {\n          punctuation: /[<>]/,\n          'class-name': /\\w+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('v', 'function', {\n      'generic-function': {\n        // e.g. foo<T>( ...\n        pattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<\\w+>/,\n            inside: Prism.languages.v.generic.inside\n          }\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = vala\nvala.displayName = 'vala'\nvala.aliases = []\nfunction vala(Prism) {\n  Prism.languages.vala = Prism.languages.extend('clike', {\n    // Classes copied from prism-csharp\n    'class-name': [\n      {\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo : Bar\n        pattern:\n          /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo\n        pattern:\n          /((?:\\b(?:class|enum|interface|new|struct)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\\b/i,\n    function: /\\b\\w+(?=\\s*\\()/,\n    number:\n      /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n    operator:\n      /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n    punctuation: /[{}[\\];(),.:]/,\n    constant: /\\b[A-Z0-9_]+\\b/\n  })\n  Prism.languages.insertBefore('vala', 'string', {\n    'raw-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'template-string': {\n      pattern: /@\"[\\s\\S]*?\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\$\\(?|\\)$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.vala\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('vala', 'keyword', {\n    regex: {\n      pattern:\n        /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\//,\n        'regex-flags': /^[a-z]+$/\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorBasic = require('./basic.js')\nmodule.exports = vbnet\nvbnet.displayName = 'vbnet'\nvbnet.aliases = []\nfunction vbnet(Prism) {\n  Prism.register(refractorBasic)\n  Prism.languages.vbnet = Prism.languages.extend('basic', {\n    comment: [\n      {\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])'.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\"])\"(?:\"\"|[^\"])*\"(?!\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n    punctuation: /[,;:(){}]/\n  })\n}\n","'use strict'\n\nmodule.exports = velocity\nvelocity.displayName = 'velocity'\nvelocity.aliases = []\nfunction velocity(Prism) {\n  ;(function (Prism) {\n    Prism.languages.velocity = Prism.languages.extend('markup', {})\n    var velocity = {\n      variable: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n        lookbehind: true,\n        inside: {} // See below\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      number: /\\b\\d+\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n      punctuation: /[(){}[\\]:,.]/\n    }\n    velocity.variable.inside = {\n      string: velocity['string'],\n      function: {\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n        lookbehind: true\n      },\n      number: velocity['number'],\n      boolean: velocity['boolean'],\n      punctuation: velocity['punctuation']\n    }\n    Prism.languages.insertBefore('velocity', 'comment', {\n      unparsed: {\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^#\\[\\[|\\]\\]#$/\n        }\n      },\n      'velocity-comment': [\n        {\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }\n      ],\n      directive: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n            inside: {\n              punctuation: /[{}]/\n            }\n          },\n          rest: velocity\n        }\n      },\n      variable: velocity['variable']\n    })\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\n      Prism.languages.velocity\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = verilog\nverilog.displayName = 'verilog'\nverilog.aliases = []\nfunction verilog(Prism) {\n  Prism.languages.verilog = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'kernel-function': {\n      // support for any kernel function (ex: $display())\n      pattern: /\\B\\$\\w+\\b/,\n      alias: 'property'\n    },\n    // support for user defined constants (ex: `define)\n    constant: /\\B`\\w+\\b/,\n    function: /\\b\\w+(?=\\()/,\n    // support for verilog and system verilog keywords\n    keyword:\n      /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n    // bold highlighting for all verilog and system verilog logic blocks\n    important: /\\b(?:always|always_comb|always_ff|always_latch)\\b(?: *@)?/,\n    // support for time ticks, vectors, and real numbers\n    number:\n      /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b(?:\\d*[._])?\\d+(?:e[-+]?\\d+)?/i,\n    operator: /[-+{}^~%*\\/?=!<>&|]+/,\n    punctuation: /[[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = vhdl\nvhdl.displayName = 'vhdl'\nvhdl.aliases = []\nfunction vhdl(Prism) {\n  Prism.languages.vhdl = {\n    comment: /--.+/,\n    // support for all logic vectors\n    'vhdl-vectors': {\n      pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n      alias: 'number'\n    },\n    // support for operator overloading included\n    'quoted-function': {\n      pattern: /\"\\S+?\"(?=\\()/,\n      alias: 'function'\n    },\n    string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n    constant: /\\b(?:library|use)\\b/i,\n    // support for predefined attributes included\n    keyword:\n      /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\w+(?=\\()/,\n    // decimal, based, physical, and exponential numbers supported\n    number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n    operator:\n      /[<>]=?|:=|[-+*/&=]|\\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\\b/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = vim\nvim.displayName = 'vim'\nvim.aliases = []\nfunction vim(Prism) {\n  Prism.languages.vim = {\n    string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n    comment: /\".*/,\n    function: /\\b\\w+(?=\\()/,\n    keyword:\n      /\\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n    builtin:\n      /\\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator:\n      /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n    punctuation: /[{}[\\](),;:]/\n  }\n}\n","'use strict'\n\nmodule.exports = visualBasic\nvisualBasic.displayName = 'visualBasic'\nvisualBasic.aliases = []\nfunction visualBasic(Prism) {\n  Prism.languages['visual-basic'] = {\n    comment: {\n      pattern: /(?:['‘’]|REM\\b)(?:[^\\r\\n_]|_(?:\\r\\n?|\\n)?)*/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    directive: {\n      pattern:\n        /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\\b_[ \\t]*(?:\\r\\n?|\\n)|.)+/i,\n      alias: 'property',\n      greedy: true\n    },\n    string: {\n      pattern: /\\$?[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n      greedy: true\n    },\n    date: {\n      pattern:\n        /#[ \\t]*(?:\\d+([/-])\\d+\\1\\d+(?:[ \\t]+(?:\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?))?|\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?)[ \\t]*#/i,\n      alias: 'number'\n    },\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:[FRD]|U?[ILS])?/i,\n    boolean: /\\b(?:False|Nothing|True)\\b/i,\n    keyword:\n      /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n    operator: /[+\\-*/\\\\^<=>&#@$%!]|\\b_(?=[ \\t]*[\\r\\n])/,\n    punctuation: /[{}().,:?]/\n  }\n  Prism.languages.vb = Prism.languages['visual-basic']\n  Prism.languages.vba = Prism.languages['visual-basic']\n}\n","'use strict'\n\nmodule.exports = warpscript\nwarpscript.displayName = 'warpscript'\nwarpscript.aliases = []\nfunction warpscript(Prism) {\n  Prism.languages.warpscript = {\n    comment: /#.*|\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern:\n        /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'|<'(?:[^\\\\']|'(?!>)|\\\\.)*'>/,\n      greedy: true\n    },\n    variable: /\\$\\S+/,\n    macro: {\n      pattern: /@\\S+/,\n      alias: 'property'\n    },\n    // WarpScript doesn't have any keywords, these are all functions under the control category\n    // https://www.warp10.io/tags/control\n    keyword:\n      /\\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\\b/,\n    number:\n      /[+-]?\\b(?:NaN|Infinity|\\d+(?:\\.\\d*)?(?:[Ee][+-]?\\d+)?|0x[\\da-fA-F]+|0b[01]+)\\b/,\n    boolean: /\\b(?:F|T|false|true)\\b/,\n    punctuation: /<%|%>|[{}[\\]()]/,\n    // Some operators from the \"operators\" category\n    // https://www.warp10.io/tags/operators\n    operator:\n      /==|&&?|\\|\\|?|\\*\\*?|>>>?|<<|[<>!~]=?|[-/%^]|\\+!?|\\b(?:AND|NOT|OR)\\b/\n  }\n}\n","'use strict'\n\nmodule.exports = wasm\nwasm.displayName = 'wasm'\nwasm.aliases = []\nfunction wasm(Prism) {\n  Prism.languages.wasm = {\n    comment: [\n      /\\(;[\\s\\S]*?;\\)/,\n      {\n        pattern: /;;.*/,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      greedy: true\n    },\n    keyword: [\n      {\n        pattern: /\\b(?:align|offset)=/,\n        inside: {\n          operator: /=/\n        }\n      },\n      {\n        pattern:\n          /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\n    ],\n    variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n    number:\n      /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = webIdl\nwebIdl.displayName = 'webIdl'\nwebIdl.aliases = []\nfunction webIdl(Prism) {\n  ;(function (Prism) {\n    var id = /(?:\\B-|\\b_|\\b)[A-Za-z][\\w-]*(?![\\w-])/.source\n    var type =\n      '(?:' +\n      /\\b(?:unsigned\\s+)?long\\s+long(?![\\w-])/.source +\n      '|' +\n      /\\b(?:unrestricted|unsigned)\\s+[a-z]+(?![\\w-])/.source +\n      '|' +\n      /(?!(?:unrestricted|unsigned)\\b)/.source +\n      id +\n      /(?:\\s*<(?:[^<>]|<[^<>]*>)*>)?/.source +\n      ')' +\n      /(?:\\s*\\?)?/.source\n    var typeInside = {}\n    Prism.languages['web-idl'] = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      namespace: {\n        pattern: RegExp(/(\\bnamespace\\s+)/.source + id),\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(^|[^\\w-])(?:iterable|maplike|setlike)\\s*<(?:[^<>]|<[^<>]*>)*>/,\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          pattern: RegExp(\n            /(\\b(?:attribute|const|deleter|getter|optional|setter)\\s+)/.source +\n              type\n          ),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // callback return type\n          pattern: RegExp(\n            '(' + /\\bcallback\\s+/.source + id + /\\s*=\\s*/.source + ')' + type\n          ),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // typedef\n          pattern: RegExp(/(\\btypedef\\b\\s*)/.source + type),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          pattern: RegExp(\n            /(\\b(?:callback|dictionary|enum|interface(?:\\s+mixin)?)\\s+)(?!(?:interface|mixin)\\b)/\n              .source + id\n          ),\n          lookbehind: true\n        },\n        {\n          // inheritance\n          pattern: RegExp(/(:\\s*)/.source + id),\n          lookbehind: true\n        }, // includes and implements\n        RegExp(id + /(?=\\s+(?:implements|includes)\\b)/.source),\n        {\n          pattern: RegExp(/(\\b(?:implements|includes)\\s+)/.source + id),\n          lookbehind: true\n        },\n        {\n          // function return type, parameter types, and dictionary members\n          pattern: RegExp(\n            type +\n              '(?=' +\n              /\\s*(?:\\.{3}\\s*)?/.source +\n              id +\n              /\\s*[(),;=]/.source +\n              ')'\n          ),\n          inside: typeInside\n        }\n      ],\n      builtin:\n        /\\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\\b/,\n      keyword: [\n        /\\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\\b/, // type keywords\n        /\\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\\b/\n      ],\n      boolean: /\\b(?:false|true)\\b/,\n      number: {\n        pattern:\n          /(^|[^\\w-])-?(?:0x[0-9a-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|NaN|Infinity)(?![\\w-])/i,\n        lookbehind: true\n      },\n      operator: /\\.{3}|[=:?<>-]/,\n      punctuation: /[(){}[\\].,;]/\n    }\n    for (var key in Prism.languages['web-idl']) {\n      if (key !== 'class-name') {\n        typeInside[key] = Prism.languages['web-idl'][key]\n      }\n    }\n    Prism.languages['webidl'] = Prism.languages['web-idl']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = wiki\nwiki.displayName = 'wiki'\nwiki.aliases = []\nfunction wiki(Prism) {\n  Prism.languages.wiki = Prism.languages.extend('markup', {\n    'block-comment': {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    heading: {\n      pattern: /^(=+)[^=\\r\\n].*?\\1/m,\n      inside: {\n        punctuation: /^=+|=+$/,\n        important: /.+/\n      }\n    },\n    emphasis: {\n      // TODO Multi-line\n      pattern: /('{2,5}).+?\\1/,\n      inside: {\n        'bold-italic': {\n          pattern: /(''''').+?(?=\\1)/,\n          lookbehind: true,\n          alias: ['bold', 'italic']\n        },\n        bold: {\n          pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        italic: {\n          pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        punctuation: /^''+|''+$/\n      }\n    },\n    hr: {\n      pattern: /^-{4,}/m,\n      alias: 'punctuation'\n    },\n    url: [\n      /ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:PMID|RFC) +\\d+/i,\n      /\\[\\[.+?\\]\\]|\\[.+?\\]/\n    ],\n    variable: [\n      /__[A-Z]+__/, // FIXME Nested structures should be handled\n      // {{formatnum:{{#expr:{{{3}}}}}}}\n      /\\{{3}.+?\\}{3}/,\n      /\\{\\{.+?\\}\\}/\n    ],\n    symbol: [/^#redirect/im, /~{3,5}/],\n    // Handle table attrs:\n    // {|\n    // ! style=\"text-align:left;\"| Item\n    // |}\n    'table-tag': {\n      pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n      lookbehind: true,\n      inside: {\n        'table-bar': {\n          pattern: /\\|$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.markup['tag'].inside\n      }\n    },\n    punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n  })\n  Prism.languages.insertBefore('wiki', 'tag', {\n    // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n    nowiki: {\n      pattern: /<(nowiki|pre|source)\\b[^>]*>[\\s\\S]*?<\\/\\1>/i,\n      inside: {\n        tag: {\n          pattern: /<(?:nowiki|pre|source)\\b[^>]*>|<\\/(?:nowiki|pre|source)>/i,\n          inside: Prism.languages.markup['tag'].inside\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = wolfram\nwolfram.displayName = 'wolfram'\nwolfram.aliases = ['mathematica', 'wl', 'nb']\nfunction wolfram(Prism) {\n  Prism.languages.wolfram = {\n    // Allow one level of nesting - note: regex taken from applescipt\n    comment: /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\\b/,\n    context: {\n      pattern: /\\b\\w+`+\\w*/,\n      alias: 'class-name'\n    },\n    blank: {\n      pattern: /\\b\\w+_\\b/,\n      alias: 'regex'\n    },\n    'global-variable': {\n      pattern: /\\$\\w+/,\n      alias: 'variable'\n    },\n    boolean: /\\b(?:False|True)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n    operator:\n      /\\/\\.|;|=\\.|\\^=|\\^:=|:=|<<|>>|<\\||\\|>|:>|\\|->|->|<-|@@@|@@|@|\\/@|=!=|===|==|=|\\+|-|\\^|\\[\\/-+%=\\]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.mathematica = Prism.languages.wolfram\n  Prism.languages.wl = Prism.languages.wolfram\n  Prism.languages.nb = Prism.languages.wolfram\n}\n","'use strict'\n\nmodule.exports = wren\nwren.displayName = 'wren'\nwren.aliases = []\nfunction wren(Prism) {\n  // https://wren.io/\n  Prism.languages.wren = {\n    // Multiline comments in Wren can have nested multiline comments\n    // Comments: // and /* */\n    comment: [\n      {\n        // support 3 levels of nesting\n        // regex: \\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\/\n        pattern:\n          /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*))*\\*\\/)*\\*\\/)*\\*\\//,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    // Triple quoted strings are multiline but cannot have interpolation (raw strings)\n    // Based on prism-python.js\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    // see below\n    'string-literal': null,\n    // #!/usr/bin/env wren on the first line\n    hashbang: {\n      pattern: /^#!\\/.+/,\n      greedy: true,\n      alias: 'comment'\n    },\n    // Attributes are special keywords to add meta data to classes\n    attribute: {\n      // #! attributes are stored in class properties\n      // #!myvar = true\n      // #attributes are not stored and dismissed at compilation\n      pattern: /#!?[ \\t\\u3000]*\\w+/,\n      alias: 'keyword'\n    },\n    'class-name': [\n      {\n        // class definition\n        // class Meta {}\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      }, // A class must always start with an uppercase.\n      // File.read\n      /\\b[A-Z][a-z\\d_]*\\b/\n    ],\n    // A constant can be a variable, class, property or method. Just named in all uppercase letters\n    constant: /\\b[A-Z][A-Z\\d_]*\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    keyword:\n      /\\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    // Functions can be Class.method()\n    function: /\\b[a-z_]\\w*(?=\\s*[({])/i,\n    operator: /<<|>>|[=!<>]=?|&&|\\|\\||[-+*/%~^&|?:]|\\.{2,3}/,\n    punctuation: /[\\[\\](){}.,;]/\n  }\n  Prism.languages.wren['string-literal'] = {\n    // A single quote string is multiline and can have interpolation (similar to JS backticks ``)\n    pattern:\n      /(^|[^\\\\\"])\"(?:[^\\\\\"%]|\\\\[\\s\\S]|%(?!\\()|%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\))*\"/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      interpolation: {\n        // \"%(interpolation)\"\n        pattern:\n          /((?:^|[^\\\\])(?:\\\\{2})*)%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\)/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /^(%\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: Prism.languages.wren\n          },\n          'interpolation-punctuation': {\n            pattern: /^%\\(|\\)$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = xeora\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\nfunction xeora(Prism) {\n  ;(function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern:\n          /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern:\n          /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern:\n          /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /\\}:[-\\w.]+:\\{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /\\}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = xmlDoc\nxmlDoc.displayName = 'xmlDoc'\nxmlDoc.aliases = []\nfunction xmlDoc(Prism) {\n  ;(function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        })\n      }\n    }\n    var tag = Prism.languages.markup.tag\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    insertDocComment('csharp', slashDocComment)\n    insertDocComment('fsharp', slashDocComment)\n    insertDocComment('vbnet', tickDocComment)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = xojo\nxojo.displayName = 'xojo'\nxojo.aliases = []\nfunction xojo(Prism) {\n  Prism.languages.xojo = {\n    comment: {\n      pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    number: [/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n    directive: {\n      pattern: /#(?:Else|ElseIf|Endif|If|Pragma)\\b/i,\n      alias: 'property'\n    },\n    keyword:\n      /\\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\\b/i,\n    operator:\n      /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\\b/i,\n    punctuation: /[.,;:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = xquery\nxquery.displayName = 'xquery'\nxquery.aliases = []\nfunction xquery(Prism) {\n  ;(function (Prism) {\n    Prism.languages.xquery = Prism.languages.extend('markup', {\n      'xquery-comment': {\n        pattern: /\\(:[\\s\\S]*?:\\)/,\n        greedy: true,\n        alias: 'comment'\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n        greedy: true\n      },\n      extension: {\n        pattern: /\\(#.+?#\\)/,\n        alias: 'symbol'\n      },\n      variable: /\\$[-\\w:]+/,\n      axis: {\n        pattern:\n          /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      'keyword-operator': {\n        pattern:\n          /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      keyword: {\n        pattern:\n          /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n      'xquery-element': {\n        pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'tag'\n      },\n      'xquery-attribute': {\n        pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'attr-name'\n      },\n      builtin: {\n        pattern:\n          /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n      operator: [\n        /[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/,\n        {\n          pattern: /(\\s)-(?=\\s)/,\n          lookbehind: true\n        }\n      ],\n      punctuation: /[[\\](){},;:/]/\n    })\n    Prism.languages.xquery.tag.pattern =\n      /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/\n    Prism.languages.xquery['tag'].inside['attr-value'].pattern =\n      /=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['punctuation'] =\n      /^=\"|\"$/\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['expression'] = {\n      // Allow for two levels of nesting\n      pattern: /\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}/,\n      inside: Prism.languages.xquery,\n      alias: 'language-xquery'\n    } // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{' && // Ignore `{{`\n            (!tokens[i + 1] ||\n              tokens[i + 1].type !== 'punctuation' ||\n              tokens[i + 1].content !== '{') &&\n            (!tokens[i - 1] ||\n              tokens[i - 1].type !== 'plain-text' ||\n              tokens[i - 1].content !== '{')\n          ) {\n            // Here we might have entered an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else if (token.type !== 'comment') {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside an XQuery expression.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token) // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            if (/^\\s+$/.test(plainText)) {\n              tokens[i] = plainText\n            } else {\n              tokens[i] = new Prism.Token(\n                'plain-text',\n                plainText,\n                null,\n                plainText\n              )\n            }\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'xquery') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = yaml\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\nfunction yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag =\n      /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)' // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n    var plainKey =\n      /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\n        /<PLAIN>/g,\n        function () {\n          return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\n            .source\n        }\n      )\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern =\n        /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source\n          .replace(/<<prop>>/g, function () {\n            return properties\n          })\n          .replace(/<<value>>/g, function () {\n            return value\n          })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n            .replace(/<<prop>>/g, function () {\n              return properties\n            })\n            .replace(/<<key>>/g, function () {\n              return '(?:' + plainKey + '|' + string + ')'\n            })\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/false|true/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = yang\nyang.displayName = 'yang'\nyang.aliases = []\nfunction yang(Prism) {\n  Prism.languages.yang = {\n    // https://tools.ietf.org/html/rfc6020#page-34\n    // http://www.yang-central.org/twiki/bin/view/Main/YangExamples\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword: {\n      pattern: /(^|[{};\\r\\n][ \\t]*)[a-z_][\\w.-]*/i,\n      lookbehind: true\n    },\n    namespace: {\n      pattern: /(\\s)[a-z_][\\w.-]*(?=:)/i,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /\\+/,\n    punctuation: /[{};:]/\n  }\n}\n","'use strict'\n\nmodule.exports = zig\nzig.displayName = 'zig'\nzig.aliases = []\nfunction zig(Prism) {\n  ;(function (Prism) {\n    function literal(str) {\n      return function () {\n        return str\n      }\n    }\n    var keyword =\n      /\\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\\b/\n    var IDENTIFIER = '\\\\b(?!' + keyword.source + ')(?!\\\\d)\\\\w+\\\\b'\n    var ALIGN = /align\\s*\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var PREFIX_TYPE_OP =\n      /(?:\\?|\\bpromise->|(?:\\[[^[\\]]*\\]|\\*(?!\\*)|\\*\\*)(?:\\s*<ALIGN>|\\s*const\\b|\\s*volatile\\b|\\s*allowzero\\b)*)/.source.replace(\n        /<ALIGN>/g,\n        literal(ALIGN)\n      )\n    var SUFFIX_EXPR =\n      /(?:\\bpromise\\b|(?:\\berror\\.)?<ID>(?:\\.<ID>)*(?!\\s+<ID>))/.source.replace(\n        /<ID>/g,\n        literal(IDENTIFIER)\n      )\n    var TYPE =\n      '(?!\\\\s)(?:!?\\\\s*(?:' + PREFIX_TYPE_OP + '\\\\s*)*' + SUFFIX_EXPR + ')+'\n    /*\n     * A simplified grammar for Zig compile time type literals:\n     *\n     * TypeExpr = ( \"!\"? PREFIX_TYPE_OP* SUFFIX_EXPR )+\n     *\n     * SUFFIX_EXPR = ( \\b \"promise\" \\b | ( \\b \"error\" \".\" )? IDENTIFIER ( \".\" IDENTIFIER )* (?! \\s+ IDENTIFIER ) )\n     *\n     * PREFIX_TYPE_OP = \"?\"\n     *                | \\b \"promise\" \"->\"\n     *                | ( \"[\" [^\\[\\]]* \"]\" | \"*\" | \"**\" ) ( ALIGN | \"const\" \\b | \"volatile\" \\b | \"allowzero\" \\b )*\n     *\n     * ALIGN = \"align\" \"(\" ( [^()] | \"(\" [^()]* \")\" )* \")\"\n     *\n     * IDENTIFIER = \\b (?! KEYWORD ) [a-zA-Z_] \\w* \\b\n     *\n     */\n    Prism.languages.zig = {\n      comment: [\n        {\n          pattern: /\\/\\/[/!].*/,\n          alias: 'doc-comment'\n        },\n        /\\/{2}.*/\n      ],\n      string: [\n        {\n          // \"string\" and c\"string\"\n          pattern: /(^|[^\\\\@])c?\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // multiline strings and c-strings\n          pattern: /([\\r\\n])([ \\t]+c?\\\\{2}).*(?:(?:\\r\\n?|\\n)\\2.*)*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      char: {\n        // characters 'a', '\\n', '\\xFF', '\\u{10FFFF}'\n        pattern:\n          /(^|[^\\\\])'(?:[^'\\\\\\r\\n]|[\\uD800-\\uDFFF]{2}|\\\\(?:.|x[a-fA-F\\d]{2}|u\\{[a-fA-F\\d]{1,6}\\}))'/,\n        lookbehind: true,\n        greedy: true\n      },\n      builtin: /\\B@(?!\\d)\\w+(?=\\s*\\()/,\n      label: {\n        pattern:\n          /(\\b(?:break|continue)\\s*:\\s*)\\w+\\b|\\b(?!\\d)\\w+\\b(?=\\s*:\\s*(?:\\{|while\\b))/,\n        lookbehind: true\n      },\n      'class-name': [\n        // const Foo = struct {};\n        /\\b(?!\\d)\\w+(?=\\s*=\\s*(?:(?:extern|packed)\\s+)?(?:enum|struct|union)\\s*[({])/,\n        {\n          // const x: i32 = 9;\n          // var x: Bar;\n          // fn foo(x: bool, y: f32) void {}\n          pattern: RegExp(\n            /(:\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?[=;,)])|<TYPE>(?=\\s*(?:<ALIGN>\\s*)?\\{)/.source\n              .replace(/<TYPE>/g, literal(TYPE))\n              .replace(/<ALIGN>/g, literal(ALIGN))\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          // extern fn foo(x: f64) f64; (optional alignment)\n          pattern: RegExp(\n            /(\\)\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?;)/.source\n              .replace(/<TYPE>/g, literal(TYPE))\n              .replace(/<ALIGN>/g, literal(ALIGN))\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      'builtin-type': {\n        pattern:\n          /\\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\\b/,\n        alias: 'keyword'\n      },\n      keyword: keyword,\n      function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n      number:\n        /\\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\\d]+(?:\\.[a-fA-F\\d]*)?(?:[pP][+-]?[a-fA-F\\d]+)?|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /\\.[*?]|\\.{2,3}|[-=]>|\\*\\*|\\+\\+|\\|\\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,\n      punctuation: /[.:,;(){}[\\]]/\n    }\n    Prism.languages.zig['class-name'].forEach(function (obj) {\n      if (obj.inside === null) {\n        obj.inside = Prism.languages.zig\n      }\n    })\n  })(Prism)\n}\n","/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n */\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const includeImageAlt = (options || {}).includeImageAlt\n  return one(\n    value,\n    typeof includeImageAlt === 'boolean' ? includeImageAlt : true\n  )\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt) {\n  return (\n    (node(value) &&\n      (('value' in value && value.value) ||\n        (includeImageAlt && 'alt' in value && value.alt) ||\n        ('children' in value && all(value.children, includeImageAlt)))) ||\n    (Array.isArray(value) && all(value, includeImageAlt)) ||\n    ''\n  )\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don’t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn’t understand but it’s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn’t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n// To do: next major: expose functions instead of extensions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Link | Array<PhrasingContent> | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\n// utilities on `state`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteReference')\n  const subexit = context.enter('reference')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteDefinition')\n  const subexit = context.enter('label')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    indentLines(containerFlow(node, context, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n *\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells.\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters.\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\n// To do: next major: use `defaultHandlers.inlineCode`.\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\n/**\n * @typedef {Extract<Root | Content, Parent>} Parents\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\n// `track` from `state`.\n// To do: next major: replace exports with functions.\n// To do: next major: use `defaulthandlers.listItem`.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","selector","defaultTagName","subvalue","previous","match","props","start","search","lastIndex","exec","slice","index","id","className","push","type","tagName","properties","children","find","require","normalize","parseSelector","spaces","commas","schema","caseSensitive","adjust","values","result","toLowerCase","createAdjustMap","property","node","own","isNode","isChildren","unshift","addProperty","addChild","content","info","undefined","spaceSeparated","commaSeparated","commaOrSpaceSeparated","join","style","concat","parsePrimitive","parsePrimitives","nodes","Error","String","number","positiveNumber","isNaN","Number","boolean","overloadedBoolean","html","factory","displayName","val","input","empty","indexOf","comma","end","trim","space","DefinedInfo","Info","data","normal","prop","Type","valid","test","charAt","attribute","replace","dash","camelcase","toUpperCase","datasetToProperty","cap","kebab","datasetToAttribute","$0","merge","xlink","xml","xmlns","aria","types","create","booleanish","transform","_","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","caseInsensitiveTransform","attributes","acceptcharset","classname","htmlfor","httpequiv","mustUseProperty","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","checked","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextMenu","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","caseSensitiveTransform","Schema","definition","defined","checks","checksLength","mask","check","mark","this","proto","xtend","definitions","apply","powers","increment","Math","pow","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlLang","xmlBase","xmlSpace","xmlnsxlink","xmlnsXLink","split","whiteSpace","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","str","TypeError","lineno","column","updatePosition","lines","lastIndexOf","position","line","Position","whitespace","source","errorsList","error","msg","err","reason","filename","silent","re","m","comments","c","comment","pos","declaration","ret","decl","decls","declarations","character","charCodeAt","alphabetical","decimal","isBuffer","el","semicolon","characters","entity","document","createElement","innerHTML","textContent","legacy","invalid","hexadecimal","alphanumerical","decodeEntity","option","settings","defaults","indent","entityCharacters","namedEntity","terminated","reference","following","warning","output","begin","prev","next","diff","additional","nonTerminated","handleText","handleReference","handleWarning","textContext","referenceContext","warningContext","queue","now","parseError","noop","lineFeed","ampersand","tab","formFeed","lessThan","fromCharCode","numberSign","uppercaseX","lowercaseX","hexa","deci","tests","namedUnknown","namedNotTerminated","namedEmpty","equalsTo","numericNotTerminated","prohibited","parseInt","bases","numericProhibited","replacementCharacter","numericDisallowed","disallowed","numericEmpty","flush","offset","messages","parse","Function","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","classNameCombinations","createStyleObject","classNames","elementStyle","stylesheet","arrLength","powerSetPermutations","getClassNameCombinations","reduce","styleObject","createClassNameString","_ref","_ref$style","useInlineStyles","TagName","childrenCreator","childrenCount","map","child","createChildren","allStylesheetSelectors","classes","includes","startingClassName","assign","React","_extends","astGenerator","listLanguages","_excluded","newLineRegex","AllLineNumbers","_ref2","codeString","codeStyle","_ref2$containerStyle","containerStyle","paddingRight","_ref2$numberStyle","numberStyle","startingLineNumber","getAllLineNumbers","getInlineLineNumber","lineNumber","inlineLineNumberStyle","assembleLineNumberStyles","lineNumberStyle","largestLineNumber","num","defaultLineNumberStyle","display","minWidth","textAlign","userSelect","customLineNumberStyle","createLineElement","_ref3","showInlineLineNumbers","_ref3$lineProps","lineProps","_ref3$className","showLineNumbers","wrapLongLines","flattenCodeTree","tree","newTree","_toConsumableArray","Set","processLines","codeTree","wrapLines","_ref4","lastLineBreakIndex","createLine","createWrappedLine","createUnwrappedLine","_loop","splitValue","newChild","_line","stringChild","lastLineInPreviousSpan","newElem","splice","_line2","_line3","defaultRenderer","_ref5","isHighlightJs","highlightAuto","defaultAstGenerator","defaultStyle","highlighter","refractor","_ref7","_ref7$style","_ref7$customStyle","customStyle","_ref7$codeTagProps","codeTagProps","_ref7$useInlineStyles","_ref7$showLineNumbers","_ref7$showInlineLineN","_ref7$startingLineNum","lineNumberContainerStyle","_ref7$lineNumberStyle","_ref7$wrapLongLines","_ref7$lineProps","renderer","_ref7$PreTag","PreTag","_ref7$CodeTag","CodeTag","_ref7$code","rest","_objectWithoutProperties","allLineNumbers","defaultPreStyle","hljs","backgroundColor","generatorClassName","preProps","defaultCodeValue","_ref6","hasLanguage","checkForListedLanguage","highlight","e","getCodeTree","supportedLanguages","ctx","globalThis","self","window","global","restore","current","Prism","manual","disableWorkerMessageHandler","h","decode","markup","css","clike","js","Refractor","refract","register","grammar","languages","sup","util","alias","registered","encode","tokens","Token","stringify","parent","env","stringifyAll","tag","hooks","run","attrs","abap","string","lookbehind","keyword","operator","punctuation","aliases","abnf","coreRules","greedy","inside","range","terminal","repetition","RegExp","rule","actionscript","insertBefore","ada","variable","agda","function","al","antlr4","escape","command","annotation","constant","g4","apacheconf","regex","refractorSql","apex","keywords","insertClassName","classNameInside","sql","trigger","apl","statement","assignment","dfn","applescript","aql","identifier","refractorCpp","arduino","builtin","ino","arff","asciidoc","quoted","interpreted","table","specifiers","hr","admonition","callout","macro","inline","url","italic","bold","replacement","copyFromAsciiDoc","o","l","add","adoc","asm6502","directive","asmatmel","refractorCsharp","aspnet","csharp","javascript","autohotkey","symbol","important","autoit","avisynth","replacements","flags","allinternals","argument","avs","avroIdl","avdl","bash","envVars","commandAfterHeredoc","insideString","environment","shebang","toBeCopied","shell","basic","batch","parameter","bbcode","shortcode","bicep","interpolation","expression","datatype","decorator","birb","metadata","refractorC","bison","delimiter","bnf","rbnf","brainfuck","pointer","decrement","branching","brightscript","bro","bsl","oscript","cfscript","cfc","chaiscript","cpp","cil","clojure","cmake","namespace","inserted","cobol","level","coffeescript","script","coffee","concurnas","langext","conc","coq","commentSource","punct","modName","generic","refractorRuby","crystal","ruby","args","expansion","nested","depthLog2","keywordKinds","keywordsToPattern","words","typeDeclarationKeywords","nonTypeKeywords","nonContextualKeywords","nestedRound","genericName","array","typeExpressionWithoutTuple","tupleElement","tuple","typeExpression","typeInside","regularString","verbatimString","preprocessor","regularStringOrCharacter","regularStringCharacterOrComment","roundExpression","attrTarget","attr","formatString","mInterpolationRound","mInterpolation","sInterpolationRound","sInterpolation","createInterpolationInside","interpolationRound","dotnet","cs","cshtml","commentLike","stringLike","round","square","curly","angle","tagAttrs","tagContent","tagRegion","block","razor","csp","none","hash","host","cssExtras","selectorInside","class","combinator","unit","hexcode","atrule","addInlined","addAttribute","csv","cypher","relationship","d","dart","packagePrefix","generics","dataweave","date","dax","measure","dhall","coord","PREFIXES","unchanged","refractorMarkupTemplating","django","markupTemplating","buildPlaceholders","tokenizePlaceholders","jinja2","dnsZoneFile","docker","spaceAfterBackSlash","stringRule","commentRule","instruction","dockerfile","dot","ID","IDInside","withID","gv","ebnf","special","editorconfig","section","eiffel","ejs","eta","elixir","doc","atom","elm","hvariable","erb","erlang","refractorLua","etlua","lua","excelFormula","sheet","file","path","cell","row","factor","comment_inside","string_inside","regexp","combinators","arrToWordsRegExp","builtins","k","$false","firestoreSecurityRules","flow","fortran","fsharp","ftl","FTL_EXPR","gap","continuation","gcode","checksum","gdscript","gedcom","gherkin","tableRow","pystring","feature","scenario","outline","td","th","git","deleted","glsl","gml","gamemakerlanguage","gn","gni","goModule","go","graphql","description","markdown","scalar","fragment","validTokens","token","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","close","stackHeight","groovy","haml","doctype","filters","all_filters","handlebars","brackets","hbs","haskell","hs","haxe","reification","hcl","heredoc","hlsl","hoon","hpkp","hsts","http","headerValueOf","uri","header","langs","httpLanguages","json","plain","suffixTypes","getSuffixPattern","contentType","suffix","ichigojam","icon","icuMessageFormat","stringPattern","argumentSource","nestedMessage","message","refractorHaskell","idris","idr","iecst","address","ignore","entry","gitignore","hgignore","npmignore","inform7","substitution","verb","ini","io","j","adverb","conjunction","java","classNamePrefix","refractorJava","refractorJavadoclike","javadoc","codeLinePattern","memberReference","field","javadoclike","addSupport","javaDocLike","docLanguage","callback","tokenName","docCommentSupport","hashbang","javastacktrace","exceptions","more","jexl","jolie","aggregates","redirects","jq","stringInterpolation","jsExtras","withId","imports","spread","arrow","dom","console","maybeClassNameTokens","jsTemplates","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","tokenizeWithHooks","tokenize","tokenizeInterpolationExpression","tempGrammar","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","interpolationExpression","placeholders","walkTokens","s","before","substring","middle","after","afterTokens","Boolean","typescript","ts","jsx","tsx","stringContent","findTemplateStrings","embedded","refractorTypescript","jsdoc","parameterPrefix","example","null","webmanifest","refractorJson","json5","jsonp","jsstacktrace","braces","stringifyToken","openedTags","notTagNorBrace","pop","openedBraces","plainText","julia","keepalived","ip","email","keyman","kotlin","interpolationInside","kt","kts","kumir","nonId","wrapId","prolog","kum","kusto","datetime","latex","funcPattern","insideEqu","cdata","equation","headline","tex","context","refractorPhp","latte","php","markupLatte","less","refractorScheme","lilypond","schemeExpression","ly","liquid","insideRaw","tagMatch","lisp","simple_form","primitive","marker","par","nestedPar","heading","interactive","defvar","defun","lambda","car","arg","varform","forms","arglist","sublist","elisp","emacs","livescript","llvm","log","exception","separator","domain","uuid","time","lolcode","magma","generator","makefile","inner","createInline","tableCell","tableLine","yaml","blockquote","strike","codeLang","codeBlock","cls","tagPattern","fromCodePoint","known","KNOWN_ENTITY_NAMES","plugins","autoloader","Date","valueOf","floor","random","loadLanguages","ele","getElementById","amp","lt","gt","quot","md","placeholderPattern","replaceFilter","tokenStack","includedCdataInside","def","attrName","mathml","svg","ssml","rss","matlab","maxscript","mel","flag","mermaid","mizar","mongodb","operators","operatorsSource","monkey","moonscript","moon","n1ql","n4js","n4jsd","nand2tetrisHdl","naniscript","expressionDef","params","getTextContent","define","nani","stack","bracket","bracketsIndex","isBracketsBalanced","nasm","neon","literal","nevod","fields","quantifier","colon","nginx","nim","nix","antiquotation","nsis","objectivec","objc","ocaml","variant","opencl","openqasm","qasm","oz","parigp","parser","pascal","asm","objectpascal","pascaligo","accum","p","pcaxis","tlist","px","peoplecode","pcode","perl","filehandle","phpExtras","package","string_interpolation","phpdoc","plsql","powerquery","pq","mscript","powershell","processing","promql","vectorMatching","protobuf","builtinTypes","psl","pug","each","branch","mixin","filter_pattern","puppet","pure","inlineLanguageRe","purebasic","pbfasm","purescript","purs","python","py","q","qml","jsString","jsComment","jsExpr","qore","qsharp","qualifiedName","interpolationExpr","qs","r","ellipsis","racket","rkt","specialEscape","rangeChar","groupName","backreference","anchor","group","alternation","rego","renpy","rpy","rip","roboconf","component","optional","wildcard","robotframework","createSection","extendecInside","docTag","testNameLike","testPropertyLike","documentation","variables","tasks","robot","percentExpression","symbolName","rb","rust","multilineComment","sas","numericConstant","macroVariable","macroKeyword","func","format","equals","altformat","globalStatements","submitStatement","actionSets","casActions","datalines","sass","scala","SortedBNF","scss","refractorBash","shellSession","strings","user","smali","smalltalk","smarty","smartyPattern","smartyLiteralMode","sml","word","smlnj","solidity","sol","solutionFile","guid","soy","numberPattern","soyLitteralMode","refractorTurtle","sparql","rq","splunkSpl","sqf","squirrel","stan","higherOrderFunctions","constraint","stylus","swift","nil","omit","systemd","quotesSource","refractorT4Templating","t4Cs","t4","createT4","t4Templating","createBlock","contentAlias","insideLang","standard","refractorVbnet","t4Vb","refractorYaml","tap","fail","pass","pragma","bailout","plan","subtest","yamlish","tcl","textile","modifierRegex","parenthesesRegex","withModifier","modifierTokens","phrase","modifier","image","footnote","acronym","phraseInside","nestedPatterns","phraseInlineInside","phraseTableInside","toml","insertKey","tremor","extractor","troy","trickle","refractorJsx","tt2","turtle","trig","twig","at","typoscript","tsconfig","unrealscript","category","uc","uscript","uorazor","query","pair","authority","port","v","vala","refractorBasic","vbnet","velocity","unparsed","verilog","vhdl","vim","visualBasic","vb","vba","warpscript","wasm","webIdl","wiki","emphasis","nowiki","wolfram","blank","mathematica","wl","nb","wren","xeora","xeoracube","xmlDoc","insertDocComment","docComment","slashDocComment","tickDocComment","xojo","xquery","extension","anchorOrAlias","plainKey","createValuePattern","yml","yang","zig","IDENTIFIER","ALIGN","TYPE","_self","uniqueId","plainTextGrammar","objId","deepClone","visited","getLanguage","element","parentElement","setLanguage","classList","currentScript","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","plaintext","txt","redef","insert","root","newToken","old","DFS","propertyType","highlightAll","highlightAllUnder","container","elements","querySelectorAll","highlightElement","nodeName","insertHighlightedCode","highlightedCode","hasAttribute","setAttribute","Worker","worker","onmessage","evt","postMessage","JSON","immediateClose","tokenList","LinkedList","addAfter","head","matchGrammar","tail","toArray","all","callbacks","matchedStr","matchPattern","lookbehindLength","startNode","startPos","rematch","patterns","cause","patternObj","currentNode","reach","removeCount","from","to","matchStr","removeFrom","removeRange","nestedRematch","newNode","count","addEventListener","highlightAutomaticallyCallback","readyState","requestAnimationFrame","setTimeout","WorkerGlobalScope","StyleToObject","iterator","hasIterator","len","decodeNamedCharacterReference","characterReference","blankLine","effects","ok","nok","factorySpace","markdownLineEnding","partial","limit","POSITIVE_INFINITY","markdownSpace","enter","consume","exit","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","unicodeWhitespace","unicodePunctuation","remove","items","parameters","chunkStart","classifyCharacter","combineExtensions","extensions","syntaxExtension","hook","left","right","constructs","existing","decodeNumericCharacterReference","base","characterEscapeOrReference","decodeString","$1","$2","hex","normalizeIdentifier","resolveAll","events","called","resolve","stringifyPosition","point","VFileMessage","place","origin","parts","fatal","ruleId","actual","expected","note","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","proc","cwd","isUrl","fileURLOrPath","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","history","stored","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","getPrototypeOf","Symbol","toStringTag","trough","fns","pipeline","middlewareIndex","fn","middleware","wrapped","fnExpectsCallback","done","Promise","then","use","middelware","unified","frozen","transformers","attachers","freezeIndex","processor","assertUnfrozen","Parser","Compiler","freeze","attacher","transformer","addPlugin","addList","addPreset","plugin","isPlainObj","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","reject","runSync","complete","assertDone","process","processSync","destination","asyncName","looksLikeAVFile","one","includeImageAlt","contentStart","attempt","contentInitial","lineStart","childFlow","childToken","lineStartOffset","continued","item","containerState","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","containerContinue","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","disable","subtokenize","lineIndex","otherIndex","otherEvent","subevents","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","sliceSerialize","initial","flowInitial","afterConstruct","resolver","createResolver","initializeFactory","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","sequence","initialSize","atMarker","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","titleEscape","factoryWhitespace","labelAfter","titleConstruct","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","insideSpan","destinationAfter","between","afterLabel","labelStartImage","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","resolveText","fromMarkdown","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","depth","referenceType","ancestor","ordered","compiler","postprocess","defaultConstructs","atCarriageReturn","endPosition","ceil","preprocess","combined","normalizeUri","skip","encodeURIComponent","visit","visitor","reverse","visitParents","parents","pointStart","pointEnd","clean","footnoteReference","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","patch","applyData","revert","subtype","contents","listItemLoose","trimLines","last","trimLine","codePointAt","handlers","break","delete","footnoteById","dangerous","imageReference","inlineCode","linkReference","loose","listLoose","firstRow","shift","tableContent","body","siblings","cellIndex","cells","alignValue","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","cache","augment","hName","hProperties","hChildren","generated","defaultUnknownHandler","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","tailTail","dataFootnotes","footer","bridge","mutate","onBeforeMatch","onContextLost","onContextRestored","onScrollEnd","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","thing","hastToReact","protocols","uriTransformer","first","tableElements","childrenToReact","childIndex","toReact","has","skipHtml","transformLinkUri","parentSchema","listDepth","components","ReactIs","linkTarget","transformImageUri","getInputElement","getElementsBeforeCount","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","dashes","padRight","padLeft","styleReplacer","parseStyle","changelog","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","PropTypes","www","w2","w3","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","ccount","findAndReplace","ignored","convert","pairs","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","association","repeat","eol","patternCompile","_compiled","patternInScope","listInScope","safe","positions","infos","sort","numerical","escapeBackslashes","a","b","whole","track","lineShift","move","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","safeOptions","tracker","subexit","indentLines","indexStack","createTracker","handle","bulletLastUsed","containerFlow","containerPhrasing","peek","handleDelete","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","remarkGfm","gfm","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","castFactory","typeFactory","anyFactory","propsFactory","CONTINUE","EXIT","SKIP","subresult","grandparents","toResult"],"sourceRoot":""}